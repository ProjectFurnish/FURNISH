[{"C:\\Users\\tamsu\\Desktop\\לימודים\\תשפא\\סמסטר א\\טכנולוגיות ווב\\פרוייקט סופי\\הפרוייקט 2\\src\\index.js":"1","C:\\Users\\tamsu\\Desktop\\לימודים\\תשפא\\סמסטר א\\טכנולוגיות ווב\\פרוייקט סופי\\הפרוייקט 2\\src\\App.js":"2","C:\\Users\\tamsu\\Desktop\\לימודים\\תשפא\\סמסטר א\\טכנולוגיות ווב\\פרוייקט סופי\\הפרוייקט 2\\src\\reportWebVitals.js":"3","C:\\Users\\tamsu\\Desktop\\לימודים\\תשפא\\סמסטר א\\טכנולוגיות ווב\\פרוייקט סופי\\הפרוייקט 2\\src\\components\\Login\\Login.js":"4","C:\\Users\\tamsu\\Desktop\\לימודים\\תשפא\\סמסטר א\\טכנולוגיות ווב\\פרוייקט סופי\\הפרוייקט 2\\src\\components\\Header\\Header.js":"5","C:\\Users\\tamsu\\Desktop\\לימודים\\תשפא\\סמסטר א\\טכנולוגיות ווב\\פרוייקט סופי\\הפרוייקט 2\\src\\components\\Home\\Home.js":"6","C:\\Users\\tamsu\\Desktop\\לימודים\\תשפא\\סמסטר א\\טכנולוגיות ווב\\פרוייקט סופי\\הפרוייקט 2\\src\\components\\Product\\Product.js":"7","C:\\Users\\tamsu\\Desktop\\לימודים\\תשפא\\סמסטר א\\טכנולוגיות ווב\\פרוייקט סופי\\הפרוייקט 2\\src\\components\\SignUp\\SignUpClient.js":"8","C:\\Users\\tamsu\\Desktop\\לימודים\\תשפא\\סמסטר א\\טכנולוגיות ווב\\פרוייקט סופי\\הפרוייקט 2\\src\\components\\Payment\\Payment.js":"9","C:\\Users\\tamsu\\Desktop\\לימודים\\תשפא\\סמסטר א\\טכנולוגיות ווב\\פרוייקט סופי\\הפרוייקט 2\\src\\components\\UserAccount\\UserAccount.js":"10","C:\\Users\\tamsu\\Desktop\\לימודים\\תשפא\\סמסטר א\\טכנולוגיות ווב\\פרוייקט סופי\\הפרוייקט 2\\src\\components\\Shared\\AccessToDB.js":"11","C:\\Users\\tamsu\\Desktop\\לימודים\\תשפא\\סמסטר א\\טכנולוגיות ווב\\פרוייקט סופי\\הפרוייקט 2\\src\\components\\ShippingDetails\\ShippingDetails.js":"12","C:\\Users\\tamsu\\Desktop\\לימודים\\תשפא\\סמסטר א\\טכנולוגיות ווב\\פרוייקט סופי\\הפרוייקט 2\\src\\components\\LoginSign\\LoginSign.js":"13","C:\\Users\\tamsu\\Desktop\\לימודים\\תשפא\\סמסטר א\\טכנולוגיות ווב\\פרוייקט סופי\\הפרוייקט 2\\src\\components\\ViewOrderAndUpdate\\ViewOrderAndUpdate.js":"14","C:\\Users\\tamsu\\Desktop\\לימודים\\תשפא\\סמסטר א\\טכנולוגיות ווב\\פרוייקט סופי\\הפרוייקט 2\\src\\components\\Client\\Client.js":"15","C:\\Users\\tamsu\\Desktop\\לימודים\\תשפא\\סמסטר א\\טכנולוגיות ווב\\פרוייקט סופי\\הפרוייקט 2\\src\\components\\Seller\\Seller.js":"16","C:\\Users\\tamsu\\Desktop\\לימודים\\תשפא\\סמסטר א\\טכנולוגיות ווב\\פרוייקט סופי\\הפרוייקט 2\\src\\components\\ProductDetails\\ProductDetails.js":"17","C:\\Users\\tamsu\\Desktop\\לימודים\\תשפא\\סמסטר א\\טכנולוגיות ווב\\פרוייקט סופי\\הפרוייקט 2\\src\\components\\Paypal\\Paypal.js":"18","C:\\Users\\tamsu\\Desktop\\לימודים\\תשפא\\סמסטר א\\טכנולוגיות ווב\\פרוייקט סופי\\הפרוייקט 2\\src\\components\\SignAccount\\SignAccount.js":"19","C:\\Users\\tamsu\\Desktop\\לימודים\\תשפא\\סמסטר א\\טכנולוגיות ווב\\פרוייקט סופי\\הפרוייקט 2\\src\\components\\PersonalArea\\PersonalArea.js":"20","C:\\Users\\tamsu\\Desktop\\לימודים\\תשפא\\סמסטר א\\טכנולוגיות ווב\\פרוייקט סופי\\הפרוייקט 2\\src\\components\\Message\\Message.js":"21","C:\\Users\\tamsu\\Desktop\\לימודים\\תשפא\\סמסטר א\\טכנולוגיות ווב\\פרוייקט סופי\\הפרוייקט 2\\src\\components\\About\\About.js":"22","C:\\Users\\tamsu\\Desktop\\לימודים\\תשפא\\סמסטר א\\טכנולוגיות ווב\\פרוייקט סופי\\הפרוייקט 2\\src\\components\\UpdateUser\\UpdateUser.js":"23","C:\\Users\\tamsu\\Desktop\\לימודים\\תשפא\\סמסטר א\\טכנולוגיות ווב\\פרוייקט סופי\\הפרוייקט 2\\src\\components\\NotFound\\NotFound.js":"24","C:\\Users\\tamsu\\Desktop\\לימודים\\תשפא\\סמסטר א\\טכנולוגיות ווב\\פרוייקט סופי\\הפרוייקט 2\\src\\components\\CategoryProduct\\CategoryProductB\\CategoryProductB.js":"25","C:\\Users\\tamsu\\Desktop\\לימודים\\תשפא\\סמסטר א\\טכנולוגיות ווב\\פרוייקט סופי\\הפרוייקט 2\\src\\components\\CategoryProduct\\Furniture\\Furinture.js":"26","C:\\Users\\tamsu\\Desktop\\לימודים\\תשפא\\סמסטר א\\טכנולוגיות ווב\\פרוייקט סופי\\הפרוייקט 2\\src\\components\\CategoryProduct\\Filter\\FilterB.js":"27","C:\\Users\\tamsu\\Desktop\\לימודים\\תשפא\\סמסטר א\\טכנולוגיות ווב\\פרוייקט סופי\\הפרוייקט 2\\src\\components\\ProductsList\\ProductsList.js":"28","C:\\Users\\tamsu\\Desktop\\לימודים\\תשפא\\סמסטר א\\טכנולוגיות ווב\\פרוייקט סופי\\הפרוייקט 2\\src\\components\\Product\\ProductBig\\ProductBig.js":"29","C:\\Users\\tamsu\\Desktop\\לימודים\\תשפא\\סמסטר א\\טכנולוגיות ווב\\פרוייקט סופי\\הפרוייקט 2\\src\\components\\Cart\\Cart.js":"30","C:\\Users\\tamsu\\Desktop\\לימודים\\תשפא\\סמסטר א\\טכנולוגיות ווב\\פרוייקט סופי\\הפרוייקט 2\\src\\components\\Shared\\UsesFunction.js":"31","C:\\Users\\tamsu\\Desktop\\לימודים\\תשפא\\סמסטר א\\טכנולוגיות ווב\\פרוייקט סופי\\הפרוייקט 2\\src\\components\\InputForm\\Validation.js":"32","C:\\Users\\tamsu\\Desktop\\לימודים\\תשפא\\סמסטר א\\טכנולוגיות ווב\\פרוייקט סופי\\הפרוייקט 2\\src\\components\\InputForm\\InputForm.js":"33","C:\\Users\\tamsu\\Desktop\\לימודים\\תשפא\\סמסטר ב\\סרבר\\תרגילים\\פרוייקט סופי\\client\\src\\index.js":"34","C:\\Users\\tamsu\\Desktop\\לימודים\\תשפא\\סמסטר ב\\סרבר\\תרגילים\\פרוייקט סופי\\client\\src\\reportWebVitals.js":"35","C:\\Users\\tamsu\\Desktop\\לימודים\\תשפא\\סמסטר ב\\סרבר\\תרגילים\\פרוייקט סופי\\client\\src\\App.js":"36","C:\\Users\\tamsu\\Desktop\\לימודים\\תשפא\\סמסטר ב\\סרבר\\תרגילים\\פרוייקט סופי\\client\\src\\components\\SignUp\\SignUpClient.js":"37","C:\\Users\\tamsu\\Desktop\\לימודים\\תשפא\\סמסטר ב\\סרבר\\תרגילים\\פרוייקט סופי\\client\\src\\components\\Home\\Home.js":"38","C:\\Users\\tamsu\\Desktop\\לימודים\\תשפא\\סמסטר ב\\סרבר\\תרגילים\\פרוייקט סופי\\client\\src\\components\\PersonalArea\\PersonalArea.js":"39","C:\\Users\\tamsu\\Desktop\\לימודים\\תשפא\\סמסטר ב\\סרבר\\תרגילים\\פרוייקט סופי\\client\\src\\components\\Header\\Header.js":"40","C:\\Users\\tamsu\\Desktop\\לימודים\\תשפא\\סמסטר ב\\סרבר\\תרגילים\\פרוייקט סופי\\client\\src\\components\\LoginSign\\LoginSign.js":"41","C:\\Users\\tamsu\\Desktop\\לימודים\\תשפא\\סמסטר ב\\סרבר\\תרגילים\\פרוייקט סופי\\client\\src\\components\\SignAccount\\SignAccount.js":"42","C:\\Users\\tamsu\\Desktop\\לימודים\\תשפא\\סמסטר ב\\סרבר\\תרגילים\\פרוייקט סופי\\client\\src\\components\\InputForm\\Validation.js":"43","C:\\Users\\tamsu\\Desktop\\לימודים\\תשפא\\סמסטר ב\\סרבר\\תרגילים\\פרוייקט סופי\\client\\src\\components\\Payment\\Payment.js":"44","C:\\Users\\tamsu\\Desktop\\לימודים\\תשפא\\סמסטר ב\\סרבר\\תרגילים\\פרוייקט סופי\\client\\src\\components\\About\\About.js":"45","C:\\Users\\tamsu\\Desktop\\לימודים\\תשפא\\סמסטר ב\\סרבר\\תרגילים\\פרוייקט סופי\\client\\src\\components\\NotFound\\NotFound.js":"46","C:\\Users\\tamsu\\Desktop\\לימודים\\תשפא\\סמסטר ב\\סרבר\\תרגילים\\פרוייקט סופי\\client\\src\\components\\UpdateUser\\UpdateUser.js":"47","C:\\Users\\tamsu\\Desktop\\לימודים\\תשפא\\סמסטר ב\\סרבר\\תרגילים\\פרוייקט סופי\\client\\src\\components\\ShippingDetails\\ShippingDetails.js":"48","C:\\Users\\tamsu\\Desktop\\לימודים\\תשפא\\סמסטר ב\\סרבר\\תרגילים\\פרוייקט סופי\\client\\src\\components\\ProductDetails\\ProductDetails.js":"49","C:\\Users\\tamsu\\Desktop\\לימודים\\תשפא\\סמסטר ב\\סרבר\\תרגילים\\פרוייקט סופי\\client\\src\\components\\CategoryProduct\\CategoryProductB\\CategoryProductB.js":"50","C:\\Users\\tamsu\\Desktop\\לימודים\\תשפא\\סמסטר ב\\סרבר\\תרגילים\\פרוייקט סופי\\client\\src\\components\\Shared\\UsesFunction.js":"51","C:\\Users\\tamsu\\Desktop\\לימודים\\תשפא\\סמסטר ב\\סרבר\\תרגילים\\פרוייקט סופי\\client\\src\\components\\InputForm\\InputForm.js":"52","C:\\Users\\tamsu\\Desktop\\לימודים\\תשפא\\סמסטר ב\\סרבר\\תרגילים\\פרוייקט סופי\\client\\src\\components\\Message\\Message.js":"53","C:\\Users\\tamsu\\Desktop\\לימודים\\תשפא\\סמסטר ב\\סרבר\\תרגילים\\פרוייקט סופי\\client\\src\\components\\Paypal\\Paypal.js":"54","C:\\Users\\tamsu\\Desktop\\לימודים\\תשפא\\סמסטר ב\\סרבר\\תרגילים\\פרוייקט סופי\\client\\src\\components\\Cart\\Cart.js":"55","C:\\Users\\tamsu\\Desktop\\לימודים\\תשפא\\סמסטר ב\\סרבר\\תרגילים\\פרוייקט סופי\\client\\src\\components\\Seller\\Seller.js":"56","C:\\Users\\tamsu\\Desktop\\לימודים\\תשפא\\סמסטר ב\\סרבר\\תרגילים\\פרוייקט סופי\\client\\src\\components\\UserAccount\\UserAccount.js":"57","C:\\Users\\tamsu\\Desktop\\לימודים\\תשפא\\סמסטר ב\\סרבר\\תרגילים\\פרוייקט סופי\\client\\src\\components\\Client\\Client.js":"58","C:\\Users\\tamsu\\Desktop\\לימודים\\תשפא\\סמסטר ב\\סרבר\\תרגילים\\פרוייקט סופי\\client\\src\\components\\Login\\Login.js":"59","C:\\Users\\tamsu\\Desktop\\לימודים\\תשפא\\סמסטר ב\\סרבר\\תרגילים\\פרוייקט סופי\\client\\src\\components\\CategoryProduct\\Filter\\FilterB.js":"60","C:\\Users\\tamsu\\Desktop\\לימודים\\תשפא\\סמסטר ב\\סרבר\\תרגילים\\פרוייקט סופי\\client\\src\\components\\CategoryProduct\\Furniture\\Furinture.js":"61","C:\\Users\\tamsu\\Desktop\\לימודים\\תשפא\\סמסטר ב\\סרבר\\תרגילים\\פרוייקט סופי\\client\\src\\components\\ProductsList\\ProductsList.js":"62","C:\\Users\\tamsu\\Desktop\\לימודים\\תשפא\\סמסטר ב\\סרבר\\תרגילים\\פרוייקט סופי\\client\\src\\components\\Product\\Product.js":"63","C:\\Users\\tamsu\\Desktop\\לימודים\\תשפא\\סמסטר ב\\סרבר\\תרגילים\\פרוייקט סופי\\client\\src\\components\\Product\\ProductBig\\ProductBig.js":"64","C:\\Users\\tamsu\\Desktop\\לימודים\\תשפא\\סמסטר ב\\סרבר\\תרגילים\\פרוייקט סופי\\client\\src\\components\\CategoryProduct\\paging\\paging.js":"65","C:\\Users\\tamsu\\Desktop\\לימודים\\תשפא\\סמסטר ב\\סרבר\\תרגילים\\פרוייקט סופי\\client\\src\\components\\CategoryProduct\\Paging\\Paging.js":"66","C:\\Users\\tamsu\\Desktop\\לימודים\\תשפא\\סמסטר ב\\סרבר\\תרגילים\\Furnish\\client\\src\\index.js":"67","C:\\Users\\tamsu\\Desktop\\לימודים\\תשפא\\סמסטר ב\\סרבר\\תרגילים\\Furnish\\client\\src\\reportWebVitals.js":"68","C:\\Users\\tamsu\\Desktop\\לימודים\\תשפא\\סמסטר ב\\סרבר\\תרגילים\\Furnish\\client\\src\\App.js":"69","C:\\Users\\tamsu\\Desktop\\לימודים\\תשפא\\סמסטר ב\\סרבר\\תרגילים\\Furnish\\client\\src\\components\\ProductDetails\\ProductDetails.js":"70","C:\\Users\\tamsu\\Desktop\\לימודים\\תשפא\\סמסטר ב\\סרבר\\תרגילים\\Furnish\\client\\src\\components\\SignUp\\SignUpClient.js":"71","C:\\Users\\tamsu\\Desktop\\לימודים\\תשפא\\סמסטר ב\\סרבר\\תרגילים\\Furnish\\client\\src\\components\\InputForm\\Validation.js":"72","C:\\Users\\tamsu\\Desktop\\לימודים\\תשפא\\סמסטר ב\\סרבר\\תרגילים\\Furnish\\client\\src\\components\\PersonalArea\\PersonalArea.js":"73","C:\\Users\\tamsu\\Desktop\\לימודים\\תשפא\\סמסטר ב\\סרבר\\תרגילים\\Furnish\\client\\src\\components\\Home\\Home.js":"74","C:\\Users\\tamsu\\Desktop\\לימודים\\תשפא\\סמסטר ב\\סרבר\\תרגילים\\Furnish\\client\\src\\components\\Header\\Header.js":"75","C:\\Users\\tamsu\\Desktop\\לימודים\\תשפא\\סמסטר ב\\סרבר\\תרגילים\\Furnish\\client\\src\\components\\LoginSign\\LoginSign.js":"76","C:\\Users\\tamsu\\Desktop\\לימודים\\תשפא\\סמסטר ב\\סרבר\\תרגילים\\Furnish\\client\\src\\components\\Payment\\Payment.js":"77","C:\\Users\\tamsu\\Desktop\\לימודים\\תשפא\\סמסטר ב\\סרבר\\תרגילים\\Furnish\\client\\src\\components\\NotFound\\NotFound.js":"78","C:\\Users\\tamsu\\Desktop\\לימודים\\תשפא\\סמסטר ב\\סרבר\\תרגילים\\Furnish\\client\\src\\components\\About\\About.js":"79","C:\\Users\\tamsu\\Desktop\\לימודים\\תשפא\\סמסטר ב\\סרבר\\תרגילים\\Furnish\\client\\src\\components\\ShippingDetails\\ShippingDetails.js":"80","C:\\Users\\tamsu\\Desktop\\לימודים\\תשפא\\סמסטר ב\\סרבר\\תרגילים\\Furnish\\client\\src\\components\\UpdateUser\\UpdateUser.js":"81","C:\\Users\\tamsu\\Desktop\\לימודים\\תשפא\\סמסטר ב\\סרבר\\תרגילים\\Furnish\\client\\src\\components\\CategoryProduct\\CategoryProductB\\CategoryProductB.js":"82","C:\\Users\\tamsu\\Desktop\\לימודים\\תשפא\\סמסטר ב\\סרבר\\תרגילים\\Furnish\\client\\src\\components\\SignAccount\\SignAccount.js":"83","C:\\Users\\tamsu\\Desktop\\לימודים\\תשפא\\סמסטר ב\\סרבר\\תרגילים\\Furnish\\client\\src\\components\\Message\\Message.js":"84","C:\\Users\\tamsu\\Desktop\\לימודים\\תשפא\\סמסטר ב\\סרבר\\תרגילים\\Furnish\\client\\src\\components\\InputForm\\InputForm.js":"85","C:\\Users\\tamsu\\Desktop\\לימודים\\תשפא\\סמסטר ב\\סרבר\\תרגילים\\Furnish\\client\\src\\components\\Client\\Client.js":"86","C:\\Users\\tamsu\\Desktop\\לימודים\\תשפא\\סמסטר ב\\סרבר\\תרגילים\\Furnish\\client\\src\\components\\UserAccount\\UserAccount.js":"87","C:\\Users\\tamsu\\Desktop\\לימודים\\תשפא\\סמסטר ב\\סרבר\\תרגילים\\Furnish\\client\\src\\components\\Seller\\Seller.js":"88","C:\\Users\\tamsu\\Desktop\\לימודים\\תשפא\\סמסטר ב\\סרבר\\תרגילים\\Furnish\\client\\src\\components\\Shared\\UsesFunction.js":"89","C:\\Users\\tamsu\\Desktop\\לימודים\\תשפא\\סמסטר ב\\סרבר\\תרגילים\\Furnish\\client\\src\\components\\CategoryProduct\\Filter\\FilterB.js":"90","C:\\Users\\tamsu\\Desktop\\לימודים\\תשפא\\סמסטר ב\\סרבר\\תרגילים\\Furnish\\client\\src\\components\\Cart\\Cart.js":"91","C:\\Users\\tamsu\\Desktop\\לימודים\\תשפא\\סמסטר ב\\סרבר\\תרגילים\\Furnish\\client\\src\\components\\Paypal\\Paypal.js":"92","C:\\Users\\tamsu\\Desktop\\לימודים\\תשפא\\סמסטר ב\\סרבר\\תרגילים\\Furnish\\client\\src\\components\\Login\\Login.js":"93","C:\\Users\\tamsu\\Desktop\\לימודים\\תשפא\\סמסטר ב\\סרבר\\תרגילים\\Furnish\\client\\src\\components\\CategoryProduct\\Furniture\\Furinture.js":"94","C:\\Users\\tamsu\\Desktop\\לימודים\\תשפא\\סמסטר ב\\סרבר\\תרגילים\\Furnish\\client\\src\\components\\ProductsList\\ProductsList.js":"95","C:\\Users\\tamsu\\Desktop\\לימודים\\תשפא\\סמסטר ב\\סרבר\\תרגילים\\Furnish\\client\\src\\components\\CategoryProduct\\Paging\\Paging.js":"96","C:\\Users\\tamsu\\Desktop\\לימודים\\תשפא\\סמסטר ב\\סרבר\\תרגילים\\Furnish\\client\\src\\components\\Product\\Product.js":"97","C:\\Users\\tamsu\\Desktop\\לימודים\\תשפא\\סמסטר ב\\סרבר\\תרגילים\\Furnish\\client\\src\\components\\Product\\ProductBig\\ProductBig.js":"98"},{"size":539,"mtime":1611604021181,"results":"99","hashOfConfig":"100"},{"size":6681,"mtime":1618659697185,"results":"101","hashOfConfig":"100"},{"size":362,"mtime":499162500000,"results":"102","hashOfConfig":"100"},{"size":7545,"mtime":1618750150029,"results":"103","hashOfConfig":"100"},{"size":7874,"mtime":1618487320345,"results":"104","hashOfConfig":"100"},{"size":4551,"mtime":1618473277438,"results":"105","hashOfConfig":"100"},{"size":5979,"mtime":1618494294151,"results":"106","hashOfConfig":"100"},{"size":8600,"mtime":1618511766444,"results":"107","hashOfConfig":"100"},{"size":12534,"mtime":1618511766444,"results":"108","hashOfConfig":"100"},{"size":2854,"mtime":1618489320354,"results":"109","hashOfConfig":"100"},{"size":1270,"mtime":1618751579004,"results":"110","hashOfConfig":"100"},{"size":6622,"mtime":1618511766444,"results":"111","hashOfConfig":"100"},{"size":720,"mtime":1618487570410,"results":"112","hashOfConfig":"100"},{"size":3774,"mtime":1618750090574,"results":"113","hashOfConfig":"100"},{"size":1317,"mtime":1618476213201,"results":"114","hashOfConfig":"100"},{"size":3765,"mtime":1618749897948,"results":"115","hashOfConfig":"100"},{"size":15195,"mtime":1618690960314,"results":"116","hashOfConfig":"100"},{"size":2738,"mtime":1618135119228,"results":"117","hashOfConfig":"100"},{"size":5174,"mtime":1618511766444,"results":"118","hashOfConfig":"100"},{"size":1700,"mtime":1618487814222,"results":"119","hashOfConfig":"100"},{"size":1192,"mtime":1618487581429,"results":"120","hashOfConfig":"100"},{"size":17454,"mtime":1619983191222,"results":"121","hashOfConfig":"100"},{"size":865,"mtime":1618422526756,"results":"122","hashOfConfig":"100"},{"size":356,"mtime":1618487596961,"results":"123","hashOfConfig":"100"},{"size":3985,"mtime":1618487171680,"results":"124","hashOfConfig":"100"},{"size":2304,"mtime":1618486342306,"results":"125","hashOfConfig":"100"},{"size":6503,"mtime":1618487240047,"results":"126","hashOfConfig":"100"},{"size":3102,"mtime":1618473302526,"results":"127","hashOfConfig":"100"},{"size":6930,"mtime":1618499638189,"results":"128","hashOfConfig":"100"},{"size":6588,"mtime":1618489899611,"results":"129","hashOfConfig":"100"},{"size":83,"mtime":1618482341128,"results":"130","hashOfConfig":"100"},{"size":4513,"mtime":1618422651620,"results":"131","hashOfConfig":"100"},{"size":2735,"mtime":1618488670569,"results":"132","hashOfConfig":"100"},{"size":539,"mtime":1611604021181,"results":"133","hashOfConfig":"134"},{"size":362,"mtime":499162500000,"results":"135","hashOfConfig":"134"},{"size":6907,"mtime":1623849987100,"results":"136","hashOfConfig":"134"},{"size":8944,"mtime":1623857162177,"results":"137","hashOfConfig":"134"},{"size":4551,"mtime":1623404241349,"results":"138","hashOfConfig":"134"},{"size":2002,"mtime":1623674653313,"results":"139","hashOfConfig":"134"},{"size":7874,"mtime":1618487320345,"results":"140","hashOfConfig":"134"},{"size":720,"mtime":1618487570410,"results":"141","hashOfConfig":"134"},{"size":5249,"mtime":1623857226676,"results":"142","hashOfConfig":"134"},{"size":4513,"mtime":1618422651620,"results":"143","hashOfConfig":"134"},{"size":10499,"mtime":1623856893550,"results":"144","hashOfConfig":"134"},{"size":18900,"mtime":1623856581861,"results":"145","hashOfConfig":"134"},{"size":356,"mtime":1618487596961,"results":"146","hashOfConfig":"134"},{"size":865,"mtime":1618422526756,"results":"147","hashOfConfig":"134"},{"size":8771,"mtime":1623683288065,"results":"148","hashOfConfig":"134"},{"size":16705,"mtime":1623857239611,"results":"149","hashOfConfig":"134"},{"size":4555,"mtime":1623859815510,"results":"150","hashOfConfig":"134"},{"size":83,"mtime":1618482341128,"results":"151","hashOfConfig":"134"},{"size":2781,"mtime":1623856794664,"results":"152","hashOfConfig":"134"},{"size":1192,"mtime":1618487581429,"results":"153","hashOfConfig":"134"},{"size":2738,"mtime":1618135119228,"results":"154","hashOfConfig":"134"},{"size":4106,"mtime":1623856639705,"results":"155","hashOfConfig":"134"},{"size":5968,"mtime":1623857112638,"results":"156","hashOfConfig":"134"},{"size":2854,"mtime":1618489320354,"results":"157","hashOfConfig":"134"},{"size":3844,"mtime":1623856760756,"results":"158","hashOfConfig":"134"},{"size":6987,"mtime":1623856820703,"results":"159","hashOfConfig":"134"},{"size":6645,"mtime":1623861063818,"results":"160","hashOfConfig":"134"},{"size":3245,"mtime":1623859702518,"results":"161","hashOfConfig":"134"},{"size":2763,"mtime":1623675102522,"results":"162","hashOfConfig":"134"},{"size":4669,"mtime":1623856979070,"results":"163","hashOfConfig":"134"},{"size":8357,"mtime":1623856942049,"results":"164","hashOfConfig":"134"},{"size":351,"mtime":1623583564521,"results":"165","hashOfConfig":"134"},{"size":680,"mtime":1623856699548,"results":"166","hashOfConfig":"134"},{"size":539,"mtime":1611604021181,"results":"167","hashOfConfig":"168"},{"size":362,"mtime":499162500000,"results":"169","hashOfConfig":"168"},{"size":6907,"mtime":1623849987100,"results":"170","hashOfConfig":"168"},{"size":16705,"mtime":1623857239611,"results":"171","hashOfConfig":"168"},{"size":8944,"mtime":1623857162177,"results":"172","hashOfConfig":"168"},{"size":4513,"mtime":1618422651620,"results":"173","hashOfConfig":"168"},{"size":2002,"mtime":1623674653313,"results":"174","hashOfConfig":"168"},{"size":4551,"mtime":1623404241349,"results":"175","hashOfConfig":"168"},{"size":7874,"mtime":1618487320345,"results":"176","hashOfConfig":"168"},{"size":720,"mtime":1618487570410,"results":"177","hashOfConfig":"168"},{"size":10499,"mtime":1623856893550,"results":"178","hashOfConfig":"168"},{"size":356,"mtime":1618487596961,"results":"179","hashOfConfig":"168"},{"size":18900,"mtime":1623856581861,"results":"180","hashOfConfig":"168"},{"size":8771,"mtime":1623683288065,"results":"181","hashOfConfig":"168"},{"size":865,"mtime":1618422526756,"results":"182","hashOfConfig":"168"},{"size":4555,"mtime":1623859815510,"results":"183","hashOfConfig":"168"},{"size":5249,"mtime":1623857226676,"results":"184","hashOfConfig":"168"},{"size":1192,"mtime":1618487581429,"results":"185","hashOfConfig":"168"},{"size":2781,"mtime":1623856794664,"results":"186","hashOfConfig":"168"},{"size":3844,"mtime":1623856760756,"results":"187","hashOfConfig":"168"},{"size":2854,"mtime":1618489320354,"results":"188","hashOfConfig":"168"},{"size":5968,"mtime":1623857112638,"results":"189","hashOfConfig":"168"},{"size":83,"mtime":1618482341128,"results":"190","hashOfConfig":"168"},{"size":6645,"mtime":1623861063818,"results":"191","hashOfConfig":"168"},{"size":4106,"mtime":1623856639705,"results":"192","hashOfConfig":"168"},{"size":2738,"mtime":1618135119228,"results":"193","hashOfConfig":"168"},{"size":6987,"mtime":1623856820703,"results":"194","hashOfConfig":"168"},{"size":3245,"mtime":1623859702518,"results":"195","hashOfConfig":"168"},{"size":2763,"mtime":1623675102522,"results":"196","hashOfConfig":"168"},{"size":680,"mtime":1623856699548,"results":"197","hashOfConfig":"168"},{"size":4669,"mtime":1623856979070,"results":"198","hashOfConfig":"168"},{"size":8357,"mtime":1623856942049,"results":"199","hashOfConfig":"168"},{"filePath":"200","messages":"201","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"202"},"1gi5yjr",{"filePath":"203","messages":"204","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"205","usedDeprecatedRules":"202"},{"filePath":"206","messages":"207","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"202"},{"filePath":"208","messages":"209","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"210","usedDeprecatedRules":"202"},{"filePath":"211","messages":"212","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"213","usedDeprecatedRules":"202"},{"filePath":"214","messages":"215","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"202"},{"filePath":"216","messages":"217","errorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":0,"source":"218","usedDeprecatedRules":"202"},{"filePath":"219","messages":"220","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"221","usedDeprecatedRules":"202"},{"filePath":"222","messages":"223","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"224","usedDeprecatedRules":"202"},{"filePath":"225","messages":"226","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"202"},{"filePath":"227","messages":"228","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"202"},{"filePath":"229","messages":"230","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"231","usedDeprecatedRules":"202"},{"filePath":"232","messages":"233","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"202"},{"filePath":"234","messages":"235","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"236","usedDeprecatedRules":"202"},{"filePath":"237","messages":"238","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"202"},{"filePath":"239","messages":"240","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"241","usedDeprecatedRules":"202"},{"filePath":"242","messages":"243","errorCount":0,"warningCount":15,"fixableErrorCount":0,"fixableWarningCount":0,"source":"244","usedDeprecatedRules":"202"},{"filePath":"245","messages":"246","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"247","usedDeprecatedRules":"202"},{"filePath":"248","messages":"249","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"250","usedDeprecatedRules":"202"},{"filePath":"251","messages":"252","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"202"},{"filePath":"253","messages":"254","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"202"},{"filePath":"255","messages":"256","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"202"},{"filePath":"257","messages":"258","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"202"},{"filePath":"259","messages":"260","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"202"},{"filePath":"261","messages":"262","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"263","usedDeprecatedRules":"202"},{"filePath":"264","messages":"265","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"266","usedDeprecatedRules":"202"},{"filePath":"267","messages":"268","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"202"},{"filePath":"269","messages":"270","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"202"},{"filePath":"271","messages":"272","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"273","usedDeprecatedRules":"274"},{"filePath":"275","messages":"276","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"277","usedDeprecatedRules":"202"},{"filePath":"278","messages":"279","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"202"},{"filePath":"280","messages":"281","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"202"},{"filePath":"282","messages":"283","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"284","usedDeprecatedRules":"202"},{"filePath":"285","messages":"286","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"287"},"eja0pf",{"filePath":"288","messages":"289","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"287"},{"filePath":"290","messages":"291","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"292","usedDeprecatedRules":"287"},{"filePath":"293","messages":"294","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"295","usedDeprecatedRules":"287"},{"filePath":"296","messages":"297","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"287"},{"filePath":"298","messages":"299","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"287"},{"filePath":"300","messages":"301","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"213","usedDeprecatedRules":"287"},{"filePath":"302","messages":"303","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"287"},{"filePath":"304","messages":"305","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"306","usedDeprecatedRules":"287"},{"filePath":"307","messages":"308","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"287"},{"filePath":"309","messages":"310","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"311","usedDeprecatedRules":"287"},{"filePath":"312","messages":"313","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"287"},{"filePath":"314","messages":"315","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"287"},{"filePath":"316","messages":"317","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"287"},{"filePath":"318","messages":"319","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"320","usedDeprecatedRules":"287"},{"filePath":"321","messages":"322","errorCount":0,"warningCount":14,"fixableErrorCount":0,"fixableWarningCount":0,"source":"323","usedDeprecatedRules":"287"},{"filePath":"324","messages":"325","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"326","usedDeprecatedRules":"287"},{"filePath":"327","messages":"328","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"287"},{"filePath":"329","messages":"330","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"331","usedDeprecatedRules":"287"},{"filePath":"332","messages":"333","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"287"},{"filePath":"334","messages":"335","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"247","usedDeprecatedRules":"287"},{"filePath":"336","messages":"337","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"338","usedDeprecatedRules":"287"},{"filePath":"339","messages":"340","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"341","usedDeprecatedRules":"287"},{"filePath":"342","messages":"343","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"287"},{"filePath":"344","messages":"345","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"346","usedDeprecatedRules":"287"},{"filePath":"347","messages":"348","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"349","usedDeprecatedRules":"287"},{"filePath":"350","messages":"351","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"352","usedDeprecatedRules":"287"},{"filePath":"353","messages":"354","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"355","usedDeprecatedRules":"287"},{"filePath":"356","messages":"357","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"287"},{"filePath":"358","messages":"359","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"360","usedDeprecatedRules":"287"},{"filePath":"361","messages":"362","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"363"},{"filePath":"364","messages":"365","errorCount":2,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"366","messages":"367","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"287"},{"filePath":"368","messages":"369","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"370"},"4v2rr0",{"filePath":"371","messages":"372","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"370"},{"filePath":"373","messages":"374","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"292","usedDeprecatedRules":"370"},{"filePath":"375","messages":"376","errorCount":0,"warningCount":14,"fixableErrorCount":0,"fixableWarningCount":0,"source":"323","usedDeprecatedRules":"370"},{"filePath":"377","messages":"378","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"295","usedDeprecatedRules":"370"},{"filePath":"379","messages":"380","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"370"},{"filePath":"381","messages":"382","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"370"},{"filePath":"383","messages":"384","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"370"},{"filePath":"385","messages":"386","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"213","usedDeprecatedRules":"370"},{"filePath":"387","messages":"388","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"370"},{"filePath":"389","messages":"390","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"311","usedDeprecatedRules":"370"},{"filePath":"391","messages":"392","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"370"},{"filePath":"393","messages":"394","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"370"},{"filePath":"395","messages":"396","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"320","usedDeprecatedRules":"370"},{"filePath":"397","messages":"398","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"370"},{"filePath":"399","messages":"400","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"326","usedDeprecatedRules":"370"},{"filePath":"401","messages":"402","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"306","usedDeprecatedRules":"370"},{"filePath":"403","messages":"404","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"370"},{"filePath":"405","messages":"406","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"331","usedDeprecatedRules":"370"},{"filePath":"407","messages":"408","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"346","usedDeprecatedRules":"370"},{"filePath":"409","messages":"410","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"370"},{"filePath":"411","messages":"412","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"341","usedDeprecatedRules":"370"},{"filePath":"413","messages":"414","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"370"},{"filePath":"415","messages":"416","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"352","usedDeprecatedRules":"370"},{"filePath":"417","messages":"418","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"338","usedDeprecatedRules":"370"},{"filePath":"419","messages":"420","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"247","usedDeprecatedRules":"370"},{"filePath":"421","messages":"422","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"349","usedDeprecatedRules":"370"},{"filePath":"423","messages":"424","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"355","usedDeprecatedRules":"370"},{"filePath":"425","messages":"426","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"370"},{"filePath":"427","messages":"428","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"370"},{"filePath":"429","messages":"430","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"360","usedDeprecatedRules":"370"},{"filePath":"431","messages":"432","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"363"},"C:\\Users\\tamsu\\Desktop\\לימודים\\תשפא\\סמסטר א\\טכנולוגיות ווב\\פרוייקט סופי\\הפרוייקט 2\\src\\index.js",[],["433","434"],"C:\\Users\\tamsu\\Desktop\\לימודים\\תשפא\\סמסטר א\\טכנולוגיות ווב\\פרוייקט סופי\\הפרוייקט 2\\src\\App.js",["435","436"],"\nimport './App.css';\nimport React, { useState, useEffect } from 'react'\nimport { Route, Switch } from 'react-router-dom'\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport LoginSign from './components/LoginSign/LoginSign'\nimport SignUpClient from './components/SignUp/SignUpClient'\nimport Header from './components/Header/Header'\nimport Home from './components/Home/Home'\nimport { getElement } from './components/Shared/AccessToDB'\nimport { validId } from './components/InputForm/Validation'\nimport CategoryProductB from './components/CategoryProduct/CategoryProductB/CategoryProductB'\nimport Payment from './components/Payment/Payment'\nimport ShippingDetails from './components/ShippingDetails/ShippingDetails'\nimport SignAccount from './components/SignAccount/SignAccount'\nimport ProductDetails from './components/ProductDetails/ProductDetails'\nimport PersonalArea from './components/PersonalArea/PersonalArea'\nimport About from './components/About/About'\nimport UpdateUser from './components/UpdateUser/UpdateUser'\nimport NotFound from './components/NotFound/NotFound'\n\nfunction App() {\n\n  const [userNow, setUserNow] = useState({\n    id: \"\",\n    firstName: \"\",\n    lastName: \"\",\n    phone: \"\",\n    email: \"\",\n    city: \"\",\n    password: \"\",\n    bankNumber: \"\",\n    bankAccount: \"\",\n    branchNumber: \"\",\n    address: \"\",\n    buildingNumber: \"\",\n    homeNumber: \"\",\n    cityDel: \"\"\n  });\n  const [url, setUrl] = useState(window.location.pathname);\n  const [isShabbos, setIsShabbos] = useState(false);\n\n  useEffect(async () => {\n    if (localStorage.getItem(\"idUserNow\") !== null && validId(localStorage.getItem(\"idUserNow\")) === \"\") {\n      let userNowTemp = await getElement(\"users\", localStorage.getItem(\"idUserNow\"));\n      setUserNow(userNowTemp);\n    }\n    chaeckIsShabbos();\n  }, [])\n\n  function changeUser(newUser) {\n    setUserNow(newUser);\n    localStorage.setItem(\"idUserNow\", newUser.id);\n  }\n\n  function chaeckIsShabbos() {\n    let date = new Date();\n    let day = date.getDay();\n    let hour = date.getHours();\n    if ((day === 5 && hour > 19) || (day === 6 && hour < 20)) setIsShabbos(true);\n    else setIsShabbos(false);\n    return;\n  }\n\n  return (\n\n    <div className=\"App\">\n      {!isShabbos &&\n        <div>\n          <Header userNow={userNow} url={url} setUrl={\n            (url) => {\n              setUrl(url);\n            }\n          } changeUser={\n            (newUser) => { changeUser(newUser); }}\n          />\n          <Switch>\n            <Route\n              exact path='/'\n              render={(props) => (<Home {...props}\n                setUrl={(url) => { setUrl(url); }}\n              />)}\n            />\n            <Route\n              path='/closet'\n              render={(props) => (<CategoryProductB {...props}\n                category=\"ארונות\"\n                userNow={userNow}\n              />)} />\n            <Route\n              path='/table'\n              render={(props) => (<CategoryProductB {...props}\n                category=\"שולחנות\"\n                userNow={userNow}\n              />)} />\n            <Route\n              path='/bed'\n              render={(props) => (<CategoryProductB {...props}\n                category=\"מיטות\"\n                userNow={userNow}\n\n              />)} />\n\n            <Route\n              path='/sofa'\n              render={(props) => (<CategoryProductB {...props}\n                category=\"ספות\"\n                userNow={userNow}\n\n              />)} />\n            <Route\n              path='/chair'\n              render={(props) => (<CategoryProductB {...props}\n                category=\"כיסאות\"\n                userNow={userNow}\n\n              />)} />\n            <Route\n              path='/SignUpClient'\n              render={(props) => (<SignUpClient {...props}\n                changeUser={(newUser) => { changeUser(newUser); }}\n                setUrl={(url) => { setUrl(url); }}\n              />)}\n\n            />\n            <Route\n              path='/UpdateUser'\n              render={(props) => (<UpdateUser {...props}\n                changeUser={(newUser) => { changeUser(newUser); }}\n                setUrl={(url) => { setUrl(url); }}\n                userNow={userNow} />)}\n\n            />\n            <Route\n              path='/LoginSign'\n              render={(props) => (<LoginSign {...props}\n                changeUser={(newUser) => { changeUser(newUser); }}\n                setUrl={(url) => { setUrl(url); }} />)}\n            />\n            <Route\n              path='/Payment'\n              render={(props) => (<Payment {...props}\n                userNow={userNow}\n                setUrl={(url) => { setUrl(url); }}\n              />)} />\n\n            <Route\n              path='/ShippingDetails'\n              render={(props) => (<ShippingDetails {...props}\n                userNow={userNow}\n                setUrl={(url) => { setUrl(url); }}\n              />)} />\n\n\n\n            <Route\n              path='/ProductDetails'\n              render={(props) => (<ProductDetails {...props}\n                userNow={userNow}\n                setUrl={(url) => { setUrl(url); }}\n              />)} />\n\n            <Route\n              path='/PersonalArea'\n              render={(props) => (<PersonalArea {...props}\n                userNow={userNow}\n                setUrl={(url) => { setUrl(url); }}\n                changeUser={(newUser) => { changeUser(newUser); }}\n              />)} />\n\n\n            <Route\n              path='/updateProduct'\n              render={(props) => (<ProductDetails {...props}\n                userNow={userNow}\n                setUrl={(url) => { setUrl(url); }}\n              />)} />\n\n            <Route\n              path='/signAccount'\n              render={(props) => (<SignAccount {...props}\n                userNow={userNow}\n                setUrl={(url) => { setUrl(url); }}\n              />)} />\n\n            <Route\n              path='/about'\n              render={(props) => (<About {...props}\n              />)} />\n\n            <Route\n              render={(props) => (<NotFound {...props}\n              />)} />\n\n          </Switch>\n        </div>\n      }\n      {\n        isShabbos &&\n        <div className=\"container1\">\n          <h4>אתר זה סגור בשבת</h4>\n          <p>\n            משתמש יקר, שמירת שבת הינה ערך עליון, ועל כן האתר חסום כעת.\n            </p>\n          <p>\n            נשמח לשרת אתכם לאחר השבת.\n            </p>\n          <p>\n            <a href=\"https://www.hidabroot.org/%D7%A9%D7%91%D7%AA\" target=\"_blank\">לפרטים נוספים</a>\n          </p>\n\n\n        </div>\n      }\n    </div >\n  );\n}\n\n\nexport default App;\n","C:\\Users\\tamsu\\Desktop\\לימודים\\תשפא\\סמסטר א\\טכנולוגיות ווב\\פרוייקט סופי\\הפרוייקט 2\\src\\reportWebVitals.js",[],"C:\\Users\\tamsu\\Desktop\\לימודים\\תשפא\\סמסטר א\\טכנולוגיות ווב\\פרוייקט סופי\\הפרוייקט 2\\src\\components\\Login\\Login.js",["437","438","439","440"],"import React, { useState, useEffect } from 'react'\r\nimport Modal from 'react-bootstrap/Modal';\r\nimport { useHistory } from \"react-router-dom\";\r\nimport { validUserPassword, validUserId, validId } from '../InputForm/Validation.js'\r\nimport { updateData, getElement } from '../Shared/AccessToDB'\r\nimport InputForm from '../InputForm/InputForm'\r\nimport emailjs from 'emailjs-com';\r\nimport './Login.css'\r\n\r\nfunction Login(props) {\r\n\r\n    let changeUser = props.changeUser;\r\n    let setUrl = props.setUrl;\r\n\r\n    const [showModal, setShowModal] = useState(false);\r\n    const [sumbit, setSumbit] = useState(false);\r\n    const [sumbitModal, setSumbitModal] = useState(false);\r\n    const [validUser, setValidUser] = useState(\"\");\r\n    let history = useHistory();\r\n    //varieble to store and validate the data of login\r\n    const numInputs = 2;\r\n    let numSuccess = 0;\r\n    let dataIdPassword = [\"\", \"\"];\r\n\r\n    //variable to store and validate the data of password recover\r\n    let idRecover = \"\";\r\n    let successModal = false;\r\n    const [existUser, setExistUser] = useState(true);\r\n    let newPassword = \"\";\r\n    const [emailSend, setEmailSend] = useState(false)\r\n\r\n    useEffect(async () => {\r\n        if (sumbit === true) {\r\n            //returns the sumbit to false for allow pressing the button again\r\n            setSumbit(false);\r\n            //if all the inputs return ok- no errors\r\n            if (numSuccess === numInputs) {\r\n                let isValid = await isValidUser();\r\n                if (isValid) {\r\n                    changeUser(myUser);\r\n                    history.push(\"/\");\r\n                    setUrl(\"/\");\r\n                };\r\n            }\r\n        }\r\n\r\n    }, [sumbit])\r\n\r\n    useEffect(async () => {\r\n        if (sumbitModal === true) {\r\n            setSumbitModal(false);\r\n            if (successModal) {\r\n                let user = await getElement(\"users\", idRecover);\r\n                if (!user) {\r\n                    setExistUser(false);\r\n                    return;\r\n                }\r\n                if (newPassword === \"\")\r\n                    newPassword = createRandomPassword();\r\n                user.password = newPassword;\r\n                await updateData(user, \"users\", user.id);\r\n                await sendMail(newPassword, user);\r\n                setEmailSend(true);\r\n            }\r\n        }\r\n\r\n    }, [sumbitModal])\r\n\r\n\r\n    let myUser;\r\n    const handelSubmit = (event) => {\r\n        event.preventDefault();\r\n        setSumbit(true);\r\n    }\r\n\r\n    function wasSuccessAdd() {\r\n        numSuccess++;\r\n    }\r\n\r\n    function wasSuccessModal() {\r\n        successModal = true;\r\n    }\r\n\r\n    function validModalId(data) {\r\n        let validIdData = validId(data);\r\n        if (validIdData !== \"\") return validIdData;\r\n        idRecover = data;\r\n        return \"\";\r\n    }\r\n\r\n    function saveDetails(data, nameInput) {\r\n        if (nameInput === \"Id\") dataIdPassword[0] = data;\r\n        else dataIdPassword[1] = data;\r\n    }\r\n\r\n    //check the login paramers are correct\r\n    async function isValidUser() {\r\n        myUser = await getElement(\"users\", dataIdPassword[0]);\r\n        if (!myUser) {\r\n            setValidUser(\"משתמש לא קיים, עליך להרשם תחילה\");\r\n            return false;\r\n        }\r\n        if (myUser.password !== dataIdPassword[1]) {\r\n            setValidUser(\"סיסמה לא נכונה\");\r\n            return false;\r\n        }\r\n        return true;\r\n    }\r\n\r\n\r\n    //send mail with the new password to the user \r\n    const sendMail = async (newPassword, user) => {\r\n\r\n        emailjs.send('service_7qj5uac', 'password_recovery',\r\n            {\r\n                customer_address: user.email,\r\n                to_name: user.firstName + ' ' + user.lastName,\r\n                password: newPassword\r\n            }\r\n            , 'user_UEyyAFk0B8jnArGMnfUsl')\r\n            .then((result) => {\r\n                console.log(result.text);\r\n            }, (error) => {\r\n                console.log(error.text);\r\n            });\r\n    }\r\n\r\n    function createRandomPassword() {\r\n        let chars = \"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz\";\r\n        let randomstring = Math.random().toString(36).slice(-8);\r\n        let randomChar = chars[Math.floor(Math.random() * 51)];\r\n        let randomNumber = Math.floor(Math.random() * 10);\r\n        randomstring = randomstring + randomChar + randomNumber;\r\n        return randomstring;\r\n    }\r\n\r\n\r\n\r\n    return (\r\n        <div className=\"bg-img\">\r\n\r\n            <div >\r\n                <form onSubmit={handelSubmit} className=\"container1\">\r\n                    <h2 className=\"header\"><b> התחברות  </b></h2>\r\n                    <small>{validUser}</small>\r\n                    <InputForm\r\n                        nameComp=\"תעודת זהות\"\r\n                        type={\"text\"}\r\n                        validationFunction={(data) => { return validUserId(data, saveDetails); }}\r\n                        sumbited={sumbit}\r\n                        wasSuccess={() => { wasSuccessAdd(); }}\r\n                    />\r\n\r\n                    <InputForm\r\n                        nameComp=\"סיסמה\"\r\n                        type={\"password\"}\r\n                        validationFunction={(data) => { return validUserPassword(data, saveDetails); }}\r\n                        sumbited={sumbit}\r\n                        wasSuccess={() => { wasSuccessAdd(); }}\r\n                    />\r\n\r\n                    <button type=\"submit\" className=\"btn1\">התחבר</button>\r\n\r\n                    <div className=\"password-recovery\" onClick={() => { setShowModal(true); }}>\r\n                        <small>שכחת סיסמה?</small>\r\n                    </div>\r\n                </form>\r\n\r\n                <div className=\"password-recovery-modal\">\r\n                    <Modal\r\n                        show={showModal}\r\n                        onHide={() => {\r\n                            setShowModal(false);\r\n                        }}\r\n                        size=\"gr\"\r\n                        aria-labelledby=\"example-modal-sizes-title-gr\"\r\n                        className=\"recov-modal\"\r\n                    >\r\n                        <Modal.Body className=\"recov-body\">\r\n\r\n                            {!emailSend && <div>\r\n                                <h4 className=\"recov-title\">שיחזור סיסמה</h4>\r\n                                <div className=\"input-recov\">\r\n                                    <InputForm\r\n                                        nameComp=\"מספר תעודת הזהות באמצעותו נרשמת לאתר\"\r\n                                        type={\"text\"}\r\n                                        validationFunction={(data) => { return validModalId(data); }}\r\n                                        sumbited={sumbitModal}\r\n                                        wasSuccess={() => { wasSuccessModal(); }}\r\n                                    />\r\n                                </div>\r\n                                {!existUser && <h6>משתמש לא קיים במערכת</h6>}\r\n\r\n                                <button onClick={() => { setSumbitModal(true); }} >שלח לי סיסמה</button>\r\n                            </div>}\r\n\r\n                            {emailSend && <div>\r\n                                <h4>נשלחה אליך סיסמה חדשה במייל</h4>\r\n                            </div>}\r\n\r\n                        </Modal.Body>\r\n                    </Modal>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\nexport default Login","C:\\Users\\tamsu\\Desktop\\לימודים\\תשפא\\סמסטר א\\טכנולוגיות ווב\\פרוייקט סופי\\הפרוייקט 2\\src\\components\\Header\\Header.js",["441","442"],"import React, { useState, useRef, useEffect } from \"react\";\r\nimport { Link, NavLink } from \"react-router-dom\";\r\nimport logo from \"../../asset/FURNISH.png\";\r\nimport \"./Header.css\";\r\nimport { OverlayTrigger, Popover } from 'react-bootstrap';\r\nimport UserAccount from '../UserAccount/UserAccount'\r\nimport Cart from '../Cart/Cart'\r\nimport { useHistory } from \"react-router-dom\";\r\n\r\nexport default function Header(props) {\r\n    const myUserNow = props.userNow;\r\n    const changeUser = props.changeUser;\r\n    let setUrl = props.setUrl;\r\n    const [myUrl, setMyUrl] = useState(props.url);\r\n    const [respon, setRespon] = useState(false)\r\n    let ref = useRef(null);\r\n    let history = useHistory();\r\n    \r\n    useEffect(() => {\r\n        setMyUrl(props.url);\r\n    }, [props.url])\r\n\r\n    const userPopover = (\r\n        <Popover id=\"popover-contained\" className=\"popover-user\" >\r\n            <Popover.Title as=\"h3\" className=\"title\">פרטי חשבון</Popover.Title>\r\n            <Popover.Content>\r\n                <UserAccount\r\n                    userNow={myUserNow}\r\n                    changeUser={changeUser}\r\n                    closePopover={closePopover}\r\n                    setUrl={(url) => { setUrl(url); }}\r\n                    root=\"header\" />\r\n            </Popover.Content>\r\n        </Popover>\r\n    );\r\n\r\n\r\n    const cartPopover = (\r\n\r\n        <Popover id=\"popover-contained\" className=\"popover-cart\" >\r\n            <Popover.Title as=\"h3\" className=\"title\">עגלת הקניות</Popover.Title>\r\n            <Popover.Content>\r\n                <Cart\r\n                    userNow={myUserNow}\r\n                    closePopover={closePopover}\r\n                    setUrl={(url) => { setUrl(url); }} />\r\n            </Popover.Content>\r\n        </Popover>\r\n    );\r\n\r\n    function closePopover() {\r\n        document.body.click();\r\n    }\r\n\r\n    function change() {\r\n        setRespon(!respon);\r\n    }\r\n\r\n\r\n    return (\r\n        <div className=\"header\" >\r\n            <div className=\"logoAndUser\">\r\n                <div className=\"logo-div\">\r\n                    <img src={logo} alt=\"logo\" className=\"logo\" onClick={() => {\r\n                        setUrl(\"/\");\r\n                        history.push(\"/\");\r\n                    }\r\n                    } />\r\n                </div>\r\n\r\n                <div ref={ref} className=\"user\">\r\n                    <span className=\"userIcon\">\r\n                        <i className=\"far fa-user-circle\"> </i>\r\n                    </span>\r\n\r\n                    {(myUserNow.id === \"\" || myUserNow === null) && (\r\n                        <Link\r\n                            to={\"/LoginSign\"}\r\n                            style={{ textDecoration: \"none\" }}\r\n                            className=\"login\"\r\n                        >\r\n                            <h6 className={\"signin-h6\"} onClick={() => { setUrl(\"/LoginSign\") }}>התחבר\\הרשם </h6>\r\n                        </Link>\r\n                    )}\r\n                    {myUserNow.id !== \"\" && (\r\n                        <OverlayTrigger\r\n                            ref={r => (ref = r)}\r\n                            container={ref.current}\r\n                            trigger=\"click\"\r\n                            placement=\"auto\"\r\n                            overlay={userPopover}\r\n                            rootClose\r\n                        >\r\n                            <h6 className={\"login-h6\"}>{myUserNow.firstName} </h6>\r\n                        </OverlayTrigger>\r\n                    )}\r\n\r\n                </div>\r\n                <div className=\"line\"></div>\r\n                <div ref={ref} className=\"bag\">\r\n                    <span className=\"bagIcon\">\r\n                        <i className=\"fas fa-shopping-bag\"></i>\r\n                    </span>\r\n\r\n                    <OverlayTrigger\r\n                        ref={r => (ref = r)}\r\n                        container={ref.current}\r\n                        trigger=\"click\"\r\n                        placement=\"auto\"\r\n                        overlay={cartPopover}\r\n                        rootClose\r\n                    >\r\n                        <h6 className=\"my-cart\" >עגלת הקניות </h6>\r\n                    </OverlayTrigger>\r\n                </div>\r\n\r\n                <div className={(respon === true) ? \"responsive\" : \"nav-bar\"}>\r\n                    <ul >\r\n                        <li>\r\n                            <NavLink\r\n                                exact\r\n                                to=\"/\"\r\n                                className=\"navlink\"\r\n                                onClick={() => { setUrl(\"/\"); }}\r\n                                id={myUrl === \"/\" ? \"active\" : \"\"}>\r\n                                דף הבית\r\n                            </NavLink>\r\n                        </li>\r\n\r\n                        <li>\r\n                            <NavLink\r\n                                exact\r\n                                to=\"/closet\"\r\n                                className=\"navlink\"\r\n                                onClick={() => { setUrl(\"/closet\"); }}\r\n                                id={myUrl === \"/closet\" ? \"active\" : \"\"}>\r\n                                ארונות\r\n                            </NavLink>\r\n                        </li>\r\n                        <li>\r\n                            <NavLink\r\n                                exact\r\n                                to=\"/bed\"\r\n                                className=\"navlink\"\r\n                                onClick={() => { setUrl(\"/bed\"); }}\r\n                                id={myUrl === \"/bed\" ? \"active\" : \"\"}>\r\n                                מיטות\r\n                            </NavLink></li>\r\n                        <li>\r\n                            <NavLink\r\n                                exact\r\n                                to=\"/table\"\r\n                                className=\"navlink\"\r\n                                onClick={() => { setUrl(\"/table\"); }}\r\n                                id={myUrl === \"/table\" ? \"active\" : \"\"}>\r\n                                שולחנות\r\n                            </NavLink>\r\n                        </li>\r\n\r\n                        <li>\r\n                            <NavLink\r\n                                exact\r\n                                to=\"/sofa\"\r\n                                className=\"navlink\"\r\n                                onClick={() => { setUrl(\"/sofa\"); }}\r\n                                id={myUrl === \"/sofa\" ? \"active\" : \"\"}>\r\n                                ספות\r\n                            </NavLink>\r\n                        </li>\r\n\r\n                        <li>\r\n                            <NavLink\r\n                                exact\r\n                                to=\"/chair\"\r\n                                className=\"navlink\"\r\n                                onClick={() => { setUrl(\"/chair\"); }}\r\n                                id={myUrl === \"/chair\" ? \"active\" : \"\"}>\r\n                                כסאות\r\n                            </NavLink>\r\n                        </li>\r\n\r\n                        <li>\r\n                            <NavLink\r\n                                exact\r\n                                to=\"/about\"\r\n                                onClick={() => { setUrl(\"/about\"); }}\r\n                                className=\"navlink\"\r\n                                id={myUrl === \"/about\" ? \"active\" : \"\"}\r\n                            >\r\n                                אודות\r\n                            </NavLink>\r\n                        </li>\r\n                        <a href=\"javascript:void(0);\" className=\"icon\" onClick={() => { change(); }}>\r\n                            <i className=\"fa fa-bars\"></i>\r\n                        </a>\r\n                    </ul>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n","C:\\Users\\tamsu\\Desktop\\לימודים\\תשפא\\סמסטר א\\טכנולוגיות ווב\\פרוייקט סופי\\הפרוייקט 2\\src\\components\\Home\\Home.js",[],"C:\\Users\\tamsu\\Desktop\\לימודים\\תשפא\\סמסטר א\\טכנולוגיות ווב\\פרוייקט סופי\\הפרוייקט 2\\src\\components\\Product\\Product.js",["443","444","445","446","447","448","449","450","451"],"import React, { useState, useEffect } from 'react'\r\nimport { getData, getElement } from '../Shared/AccessToDB'\r\nimport './Product.css'\r\nimport ProductBig from './ProductBig/ProductBig'\r\n\r\nfunction Product(props) {\r\n\r\n    const productDetails = props.productDetails;\r\n    const sellerDetails = props.sellerDetails;\r\n    const type = props.type;\r\n    const userNow = props.userNow;\r\n    const errorProducts = props.errorProducts;\r\n    const [size, setSize] = useState(props.size);\r\n    const [orders, setOrders] = useState([]);\r\n    const [myOrder, setMyOrder] = useState(null);\r\n    const [user, setUser] = useState(null);\r\n    const [showModal, setShowModal] = useState(false)\r\n\r\n    useEffect(async () => {\r\n\r\n        let tempOrders = await getData(\"orders\");\r\n        setOrders(tempOrders);\r\n        if (type === \"sent\" || type === \"paid\") await findOrder(productDetails.id);\r\n\r\n    }, [])\r\n\r\n    const handleShow = () => {\r\n        setShowModal(true);\r\n    }\r\n\r\n    useEffect(async () => {\r\n        if (type === \"sent\" || type === \"paid\") await findOrder(productDetails.id);\r\n    }, [type, productDetails, sellerDetails, size])\r\n\r\n    useEffect(async () => {\r\n        let tempOrders = await getData(\"orders\");\r\n        setOrders(tempOrders);\r\n    }, [userNow])\r\n\r\n\r\n\r\n    function changeSize() {\r\n\r\n        switch (size) {\r\n            case \"smallest\":\r\n                handleShow();\r\n                setSize(\"bigWithOutBtn1\");\r\n                break;\r\n            case \"small1\":\r\n                handleShow();\r\n                setSize(\"bigWithOutBtn2\");\r\n                break;\r\n            case \"small2\":\r\n                handleShow();\r\n                setSize(\"bigWithBtn\");\r\n                break;\r\n            case \"bigWithOutBtn1\":\r\n                setSize(\"smallest\");\r\n                break;\r\n            case \"bigWithOutBtn2\":\r\n                setSize(\"small1\");\r\n                break;\r\n            case \"bigWithBtn\":\r\n                setSize(\"small2\");\r\n                break;\r\n            default:\r\n                break;\r\n        }\r\n    }\r\n\r\n    const findOrder = async (idProduct) => {\r\n        for (let i = 0; i < orders.length; i++) {\r\n            if (orders[i].idItem === idProduct && orders[i].city !== \"\") {\r\n                let user = await getElement(\"users\", orders[i].idClient);\r\n                setMyOrder(orders[i]);\r\n                setUser(user);\r\n                return true;\r\n            }\r\n        }\r\n    }\r\n\r\n    //Shortens the text if it is longer than the space assigned to it in the small card\r\n    function makeShortText(text, maxLength) {\r\n        if (text === null || text === undefined) return \"\";\r\n        if (text.length <= maxLength) return text;\r\n        let array = text.split(\" \");\r\n        let newText = \"\";\r\n        let returnText = \"\";\r\n        for (let i = 0; i < array.length; i++) {\r\n            if ((newText + \" \" + array[i]).length <= maxLength - 3) {\r\n                newText = newText + \" \" + array[i];\r\n                returnText = newText;\r\n            }\r\n            else {\r\n                newText = \"...\" + newText;\r\n                returnText = newText;\r\n                break;\r\n            }\r\n        }\r\n\r\n        if (returnText === \"...\") returnText = \"...\" + text.slice(0, maxLength - 3);\r\n        return returnText;\r\n    }\r\n\r\n    return (\r\n        <div className=\"product\">\r\n\r\n            {\r\n                productDetails.id !== \"\" && sellerDetails.id !== \"\" && (size === \"smallest\" || size === \"bigWithOutBtn1\") &&\r\n                <div onClick={() => changeSize()} className=\"card\">\r\n                    <div className={\"card-body\", \"small-body\"}>\r\n                        <h4 className={\"card-title\", \"small2h4\"}>{productDetails.name}</h4>\r\n\r\n                        <p className={\"card-text\", \"small2p\"}>\r\n                            {makeShortText(productDetails.description, 103)}\r\n                        </p>\r\n\r\n\r\n                        <p className={\"price2\"}>&#8362; {productDetails.price}</p>\r\n                        {\r\n                            type === \"cart\" && errorProducts.includes(productDetails.id) &&\r\n                            <small>המוצר הוסר ע\"י המוכר ואינו זמין יותר לרכישה</small>\r\n                        }\r\n                    </div>\r\n                </div>\r\n            }\r\n            {\r\n                productDetails.id !== \"\" &&\r\n                sellerDetails.id !== \"\" &&\r\n                (size === \"small1\" || size === \"small2\" || size === \"bigWithOutBtn2\" || size === \"bigWithBtn\") &&\r\n                <div onClick={() => changeSize()} className=\"card\">\r\n                    <img src={productDetails.mainImgSrc} className={\"card-img-top\"} />\r\n                    <div className=\"card-body\">\r\n                        <h4 className=\"card-title\">{makeShortText(productDetails.name, 23)}</h4>\r\n                        <p className=\"price\">&#8362; {productDetails.price}</p>\r\n                    </div>\r\n                </div>\r\n            }\r\n            {\r\n                productDetails.id !== \"\" && sellerDetails.id !== \"\" &&\r\n                (size === \"bigWithOutBtn1\" || size === \"bigWithOutBtn2\" || size === \"bigWithBtn\") &&\r\n\r\n                <ProductBig\r\n                    userNow={userNow}\r\n                    user={user}\r\n                    productDetails={productDetails}\r\n                    type={type}\r\n                    sellerDetails={sellerDetails}\r\n                    errorProducts={errorProducts}\r\n                    myOrder={myOrder}\r\n                    showModal={showModal}\r\n                    setShowModal={(show) => { setShowModal(show); }}\r\n                    size={size}\r\n                    changeSize={()=>{changeSize();}} />\r\n            }\r\n\r\n            {\r\n                (productDetails.id === \"\" || sellerDetails.id === \"\") &&\r\n                <div>\r\n                    <h3>מוצר לא נמצא</h3>\r\n                </div>\r\n            }\r\n\r\n        </div >\r\n    );\r\n}\r\n\r\nexport default Product","C:\\Users\\tamsu\\Desktop\\לימודים\\תשפא\\סמסטר א\\טכנולוגיות ווב\\פרוייקט סופי\\הפרוייקט 2\\src\\components\\SignUp\\SignUpClient.js",["452","453"],"import React, { useState, useEffect } from 'react'\r\n\r\nimport { validId, validMail, validName, validPasswords, validPhone } from '../InputForm/Validation.js'\r\nimport { useHistory } from \"react-router-dom\";\r\nimport { saveData } from '../Shared/UsesFunction'\r\nimport { addData, getElement, updateData } from '../Shared/AccessToDB'\r\nimport InputForm from '../InputForm/InputForm'\r\nimport Message from '../Message/Message'\r\nimport './SignUpClient.css'\r\n\r\nfunction SignUpClient(props) {\r\n    let changeUser = props.changeUser;\r\n    let mode = props.mode || \"\";\r\n    let userNow = props.userNow || \"\";\r\n    let setUrl = props.setUrl;\r\n\r\n    const [showAlert, setShowAlert] = useState(false);\r\n    const [message, setMessage] = useState(\"\");\r\n    const [sumbit, setSumbit] = useState(false);\r\n\r\n    const numInputs = 8;\r\n    let numSuccess = 0;\r\n    let history = useHistory();\r\n    let clientData = {\r\n        id: \"\",\r\n        firstName: \"\",\r\n        lastName: \"\",\r\n        phone: \"\",\r\n        email: \"\",\r\n        city: \"\",\r\n        password: \"\",\r\n        bankNumber: \"\",\r\n        bankAccount: \"\",\r\n        branchNumber: \"\",\r\n        address: \"\",\r\n        buildingNumber: \"\",\r\n        homeNumber: \"\",\r\n        cityDel: \"\"\r\n    };\r\n\r\n    useEffect(async () => {\r\n        if (sumbit === true) {\r\n            //returns the sumbit to false for allow pressing the button again\r\n            setSumbit(false);\r\n            //if all the inputs return ok- no errors\r\n            if (numSuccess === numInputs && mode === \"\") {\r\n                addUser();\r\n            }\r\n            else if (numSuccess === numInputs && mode === \"update\") {\r\n                updateUser();\r\n            }\r\n        }\r\n\r\n    }, [sumbit])\r\n\r\n\r\n    const handelSubmit = (event) => {\r\n\r\n        event.preventDefault();\r\n        setSumbit(true);\r\n    }\r\n\r\n\r\n    function wasSuccessAdd() {\r\n        numSuccess++;\r\n    }\r\n\r\n    //check if the user is exist in the Site data\r\n    const checkExistUser = async (id) => {\r\n\r\n        let user = await getElement(\"users\", id);\r\n        if (user) return true;\r\n        return false;\r\n    }\r\n\r\n    //add user to the json file\r\n    async function addUser() {\r\n        let exist = await checkExistUser(clientData.id);\r\n        if (exist) {\r\n            setMessage(\"משתמש קיים במערכת, עליך להתחבר\");\r\n            setShowAlert(true);\r\n        }\r\n        else {\r\n            changeUser(clientData);\r\n            addData(clientData, \"users\");\r\n            history.push(\"/\");\r\n            setUrl(\"/\");\r\n        }\r\n    }\r\n\r\n    //update the user details in json file\r\n    async function updateUser() {\r\n        clientData.id = userNow.id;\r\n        clientData.bankNumber = userNow.bankNumber;\r\n        clientData.bankAccount = userNow.bankAccount;\r\n        clientData.branchNumber = userNow.branchNumber;\r\n        if (clientData.firstName === \"\") clientData.firstName = userNow.firstName;\r\n        if (clientData.lastName === \"\") clientData.lastName = userNow.lastName;\r\n        if (clientData.phone === \"\") clientData.phone = userNow.phone;\r\n        if (clientData.city === \"\") clientData.city = userNow.city;\r\n        if (clientData.password === \"\") clientData.password = userNow.password;\r\n        changeUser(clientData);\r\n        updateData(clientData, \"users\", clientData.id);\r\n        setMessage(\"עודכן בהצלחה\");\r\n        setShowAlert(true);\r\n    }\r\n\r\n\r\n\r\n    return (\r\n        <div className=\"SignUpClient\">\r\n\r\n            <form onSubmit={handelSubmit} className=\"container1\">\r\n                <h2 className=\"header\"><b> פרטי משתמש </b></h2>\r\n                <InputForm\r\n                    nameComp=\"שם פרטי\"\r\n                    value={userNow.firstName}\r\n                    type={\"text\"}\r\n                    validationFunction={(data) => {\r\n                        let message = validName(data);\r\n                        if (message === \"\") saveData(clientData, \"firstName\", data);\r\n                        return message\r\n                    }\r\n                    }\r\n                    sumbited={sumbit}\r\n                    wasSuccess={() => { wasSuccessAdd(); }}\r\n                />\r\n                <InputForm\r\n                    nameComp=\"שם משפחה\"\r\n                    type={\"text\"}\r\n                    value={userNow.lastName}\r\n                    validationFunction={(data) => {\r\n                        let message = validName(data);\r\n                        if (message === \"\") saveData(clientData, \"lastName\", data);\r\n                        return message\r\n                    }\r\n                    }\r\n                    sumbited={sumbit}\r\n                    wasSuccess={() => { wasSuccessAdd(); }}\r\n                />\r\n                <InputForm\r\n                    nameComp=\"תעודת זהות\"\r\n                    type={\"text\"}\r\n                    value={userNow.id}\r\n                    validationFunction={(data) => {\r\n                        let message = validId(data);\r\n                        if (message === \"\") saveData(clientData, \"id\", data);\r\n                        return message\r\n                    }\r\n                    }\r\n                    disabled={mode === \"update\" ? true : false}\r\n                    sumbited={sumbit}\r\n                    wasSuccess={() => { wasSuccessAdd(); }}\r\n                />\r\n                <InputForm\r\n                    nameComp=\"פלאפון\"\r\n                    type={\"text\"}\r\n                    value={userNow.phone}\r\n                    validationFunction={(data) => {\r\n                        let message = validPhone(data);\r\n                        if (message === \"\") saveData(clientData, \"phone\", data);\r\n                        return message\r\n                    }\r\n                    }\r\n                    sumbited={sumbit}\r\n                    wasSuccess={() => { wasSuccessAdd(); }}\r\n                />\r\n                <InputForm\r\n                    nameComp=\"כתובת אימייל\"\r\n                    type={\"text\"}\r\n                    value={userNow.email}\r\n                    validationFunction={(data) => {\r\n                        let message = validMail(data);\r\n                        if (message === \"\") saveData(clientData, \"email\", data);\r\n                        return message\r\n                    }\r\n                    }\r\n                    sumbited={sumbit}\r\n                    wasSuccess={() => { wasSuccessAdd(); }}\r\n                />\r\n                <InputForm\r\n                    nameComp=\"עיר\"\r\n                    type={\"text\"}\r\n                    value={userNow.city}\r\n                    validationFunction={(data) => {\r\n                        let message = validName(data);\r\n                        if (message === \"\") saveData(clientData, \"city\", data);\r\n                        return message\r\n                    }\r\n                    }\r\n                    sumbited={sumbit}\r\n                    wasSuccess={() => { wasSuccessAdd(); }}\r\n                />\r\n                <InputForm\r\n                    nameComp=\"סיסמה\"\r\n                    type={\"password\"}\r\n                    value={userNow.password}\r\n                    validationFunction={(data) => { return validPasswords(data, \"Password\"); }}\r\n                    sumbited={sumbit}\r\n                    wasSuccess={() => { wasSuccessAdd(); }}\r\n                />\r\n                <InputForm\r\n                    nameComp=\"ודא סיסמה\"\r\n                    type={\"password\"}\r\n                    validationFunction={(data) => {\r\n                        let message = validPasswords(data, \"Verify Password\");\r\n                        if (message === \"\") saveData(clientData, \"password\", data);\r\n                        return message\r\n                    }\r\n                    }\r\n                    sumbited={sumbit}\r\n                    wasSuccess={() => { wasSuccessAdd(); }}\r\n                />\r\n\r\n                <button type=\"submit\" className=\"btn1\">{mode === \"\" ? \"הרשם\" : \"עדכן\"}</button>\r\n            </form>\r\n\r\n            {\r\n                showAlert && <Message\r\n                    showAlert={showAlert}\r\n                    message={message}\r\n                    onClose={() => {\r\n                        setShowAlert(false);\r\n                        if (mode === \"\") {\r\n                            history.push(\"/LoginSign\");\r\n                            setUrl(\"/LoginSign\");\r\n                        }\r\n                    }\r\n                    }\r\n                    type={mode === \"\" ? \"\" : \"success\"}\r\n                />\r\n            }\r\n        </div>\r\n\r\n    );\r\n\r\n}\r\nexport default SignUpClient\r\n","C:\\Users\\tamsu\\Desktop\\לימודים\\תשפא\\סמסטר א\\טכנולוגיות ווב\\פרוייקט סופי\\הפרוייקט 2\\src\\components\\Payment\\Payment.js",["454","455","456"],"import React, { useState, useEffect } from 'react'\r\n\r\nimport { validId, validCreditCard, validYear, validMonth, valid3Digit } from '../InputForm/Validation.js'\r\nimport InputForm from '../InputForm/InputForm'\r\nimport { useHistory } from \"react-router-dom\";\r\nimport Paypal from \"../Paypal/Paypal\";\r\nimport { addData, getData, getElement, updateData } from '../Shared/AccessToDB'\r\nimport { saveData } from '../Shared/UsesFunction'\r\nimport './Payment.css'\r\nimport Message from '../Message/Message'\r\nimport emailjs from 'emailjs-com';\r\n\r\nfunction Payment(props) {\r\n    let setUrl = props.setUrl;\r\n    const userNow = props.userNow;\r\n    const [myOrders, setMyOrders] = useState([]);\r\n    const [products, setProducts] = useState([]);\r\n    const [sumbit, setSumbit] = useState(false);\r\n    const [creditDetail, setCreditDetail] = useState({ id: userNow.id, idCredit: \"\", number: \"\", year: \"\", month: \"\", digit: \"\" });\r\n    const [signal, setSignal] = useState(null);\r\n    const [showAlert, setShowAlert] = useState(false);\r\n    const [message, setMessage] = useState(\"\");\r\n    const [checked, setChecked] = useState(false);\r\n\r\n    let history = useHistory();\r\n    let creditDetailTemp = { id: userNow.id, idCredit: \"\", number: \"\", year: \"\", month: \"\", digit: \"\" };\r\n    let numSuccess = 0;\r\n    const numInputs = 5;\r\n\r\n\r\n\r\n    useEffect(() => {\r\n        let isCanceled = false;\r\n        const abortController = new AbortController();\r\n        let signalTemp = abortController.signal;\r\n        setSignal(signalTemp);\r\n        async function loadData() {\r\n            try {\r\n                if (!isCanceled) {\r\n                    let allOrders = await getData(\"orders\", signalTemp);\r\n                    let productsTemp = await getData(\"products\", signalTemp);\r\n                    setMyOrders(allOrders.filter(filterOrders));\r\n                    setProducts(productsTemp);\r\n                    await checkHaveCreditSaved();\r\n                }\r\n            }\r\n            catch (e) {\r\n                if (!isCanceled && abortController.signal.aborted) throw e;\r\n            }\r\n\r\n        }\r\n\r\n        loadData();\r\n\r\n        return function cleanUp() {\r\n            isCanceled = true;\r\n            abortController.abort();\r\n        };\r\n\r\n    }, [userNow])\r\n\r\n    useEffect(async () => {\r\n        if (sumbit === true) {\r\n            setSumbit(false);\r\n            if (numSuccess === numInputs || (creditDetail.idCredit !== \"\" && numSuccess === 1)) {\r\n\r\n                await updateProducts();\r\n                await updateOrders();\r\n                if (!checkHaveCreditSaved())\r\n                    await addData(creditDetailTemp, \"creditDetails\");\r\n                if (checked) await updateData(creditDetailTemp, \"creditDetails\", userNow.id);\r\n\r\n                setMessage(\"התשלום התקבל בהצלחה\");\r\n                setShowAlert(true);\r\n            }\r\n        }\r\n\r\n    }, [sumbit])\r\n\r\n\r\n    function filterOrders(order) {\r\n        if (order.idClient === userNow.id && order.status === \"cart\") return true;\r\n        return false;\r\n    }\r\n\r\n    const handelSubmit = (event) => {\r\n        event.preventDefault();\r\n        setSumbit(true);\r\n    }\r\n\r\n\r\n    function wasSuccessAdd() {\r\n        numSuccess++;\r\n    }\r\n\r\n    function getPrice(id) {\r\n        let price = 0;\r\n        products.forEach(product => {\r\n            if (product.id === id) price = product.price;\r\n        });\r\n        return price;\r\n    }\r\n\r\n    function sumOrders() {\r\n        let sum = 0;\r\n        myOrders.forEach(order => {\r\n            sum += Number(getPrice(order.idItem));\r\n        });\r\n        return sum;\r\n    }\r\n\r\n    //Sends an email to the seller to let him know that his product has been ordered from him\r\n    const sendMail = async (productDetails) => {\r\n\r\n        let seller = await getElement(\"users\", productDetails.idSeller);\r\n\r\n        emailjs.send('service_7qj5uac', 'delivery_confirmation',\r\n            {\r\n                customer_address: seller.email,\r\n                subject: \"הזמנת מוצר\",\r\n                first_line: \"התקבלה הזמנה למוצר שלך-\" + productDetails.name,\r\n                to_name: seller.firstName + ' ' + seller.lastName,\r\n                seller_name: userNow.firstName + ' ' + userNow.lastName,\r\n                seller_phone: userNow.phone,\r\n                type: \"לקוח\"\r\n            }\r\n            , 'user_UEyyAFk0B8jnArGMnfUsl')\r\n            .then((result) => {\r\n                console.log(result.text);\r\n            }, (error) => {\r\n                console.log(error.text);\r\n            });\r\n    }\r\n\r\n\r\n    //updates that the products have been sold so that they are no longer for sale\r\n    const updateProducts = async () => {\r\n        return new Promise(async (resolve, reject) => {\r\n\r\n            for (let i = 0; i < myOrders.length; i++) {\r\n\r\n                let product;\r\n                product = await getElement(\"products\", myOrders[i].idItem, signal);\r\n                product.status = \"false\";\r\n                await updateData(product, \"products\", myOrders[i].idItem);\r\n                await sendMail(product);\r\n            }\r\n            \r\n            resolve(\"true\")\r\n        })\r\n    }\r\n\r\n    //Updates that the order has already been paid so that it will no longer be displayed in the cart\r\n    const updateOrders = async () => {\r\n        return new Promise(async (resolve, reject) => {\r\n\r\n            for (let i = 0; i < myOrders.length; i++) {\r\n                myOrders[i].status = \"paid\";\r\n                console.log(\"i try to change paid \" + myOrders[i].id);\r\n                await updateData(myOrders[i], \"orders\", myOrders[i].id);\r\n\r\n            }\r\n            resolve(\"true\")\r\n        })\r\n    }\r\n\r\n    //Checks whether payment details are stored in the system to upload them to the user\r\n    const checkHaveCreditSaved = async () => {\r\n        let creditDetailTemp1 = await getElement(\"creditDetails\", userNow.id, signal);\r\n        if (creditDetailTemp1) {\r\n            setCreditDetail(creditDetailTemp1);\r\n            return true;\r\n        }\r\n        else return false;\r\n    }\r\n\r\n    const makePay = async () => {\r\n        await updateProducts();\r\n        await updateOrders();\r\n        setMessage(\"התשלום התקבל בהצלחה\");\r\n        setShowAlert(true);\r\n    }\r\n\r\n    return (\r\n        <div className=\"payment\">\r\n\r\n            {userNow.id !== \"\" &&\r\n                <div className=\"container1\">\r\n                    <h3 className=\"header-pay\"><b> תשלום </b></h3>\r\n                    <div className=\"paypal-button\">\r\n                        <Paypal history={history} total={sumOrders()} makePay={() => { makePay(); }} />\r\n                    </div>\r\n                    <h4 className=\"or\">-או-</h4>\r\n                    {\r\n                        creditDetail.idCredit !== \"\" && !checked &&\r\n                        <form onSubmit={handelSubmit}>\r\n\r\n                            <label>מספר אשראי</label>\r\n                            <input type=\"text\" value={creditDetail.number} disabled></input>\r\n                            <InputForm\r\n                                nameComp=\"תעודת זהות בעל הכרטיס\"\r\n                                type={\"text\"}\r\n                                validationFunction={(data) => {\r\n                                    let message = validId(data);\r\n                                    if (message === \"\" && data !== creditDetail.id) message = \"תעודת הזהות אינה מתאימה לכרטיס\";\r\n                                    return message\r\n                                }\r\n                                }\r\n                                sumbited={sumbit}\r\n                                wasSuccess={() => { wasSuccessAdd(); }}\r\n                            />\r\n                            <h5 className=\"pay\">לתשלום: &#8362;{sumOrders()} </h5>\r\n                            <small onClick={() => { setChecked(true); }} className=\"change-pay\">לשינוי אמצעי תשלום</small>\r\n                            <button type=\"submit\" className=\"btn1\">אישור</button>\r\n                        </form>\r\n                    }\r\n\r\n\r\n                    {(creditDetail.idCredit === \"\" || checked) &&\r\n\r\n                        <form onSubmit={handelSubmit}>\r\n\r\n\r\n                            <InputForm\r\n                                nameComp=\"תעודת זהות בעל הכרטיס\"\r\n                                type={\"text\"}\r\n                                validationFunction={(data) => {\r\n                                    let message = validId(data);\r\n                                    if (message === \"\") saveData(creditDetailTemp, \"idCredit\", data);\r\n                                    return message\r\n                                }\r\n                                }\r\n                                sumbited={sumbit}\r\n                                wasSuccess={() => { wasSuccessAdd(); }}\r\n                            />\r\n                            <InputForm\r\n                                nameComp=\"מספר אשראי\"\r\n                                type={\"text\"}\r\n                                validationFunction={(data) => {\r\n                                    let message = validCreditCard(data);\r\n                                    if (message === \"\") saveData(creditDetailTemp, \"number\", data);\r\n                                    return message\r\n                                }\r\n                                }\r\n                                sumbited={sumbit}\r\n                                wasSuccess={() => { wasSuccessAdd(); }}\r\n                            />\r\n                            <InputForm\r\n                                nameComp=\"שנה\"\r\n                                type={\"text\"}\r\n                                validationFunction={(data) => {\r\n                                    let message = validYear(data);\r\n                                    if (message === \"\") saveData(creditDetailTemp, \"year\", data);\r\n                                    return message\r\n                                }\r\n                                }\r\n                                sumbited={sumbit}\r\n                                wasSuccess={() => { wasSuccessAdd(); }}\r\n                            />\r\n\r\n                            <InputForm\r\n                                nameComp=\"חודש\"\r\n                                type={\"text\"}\r\n                                validationFunction={(data) => {\r\n                                    let message = validMonth(data);\r\n                                    if (message === \"\") saveData(creditDetailTemp, \"month\", data);\r\n                                    return message\r\n                                }\r\n                                }\r\n                                sumbited={sumbit}\r\n                                wasSuccess={() => { wasSuccessAdd(); }}\r\n                            />\r\n\r\n                            <InputForm\r\n                                nameComp=\"3 ספרות בגב הכרטיס\"\r\n                                type={\"text\"}\r\n                                validationFunction={(data) => {\r\n                                    let message = valid3Digit(data);\r\n                                    if (message === \"\") saveData(creditDetailTemp, \"digit\", data);\r\n                                    return message\r\n                                }\r\n                                }\r\n                                sumbited={sumbit}\r\n                                wasSuccess={() => { wasSuccessAdd(); }}\r\n                            />\r\n                            <h5 className=\"pay\">לתשלום: &#8362;{sumOrders()} </h5>\r\n                            <button type=\"submit\" className=\"btn1\">בצע תשלום</button>\r\n                        </form>\r\n                    }\r\n\r\n                </div>\r\n            }\r\n            {\r\n                showAlert && <Message\r\n                    showAlert={showAlert}\r\n                    message={message}\r\n                    onClose={() => {\r\n                        setShowAlert(false);\r\n                        history.push(\"/personalArea\");\r\n                        setUrl(\"/personalArea\");\r\n                    }\r\n                    }\r\n                    type=\"success\" />\r\n            }\r\n            {userNow.id === \"\" &&\r\n                <div className=\"container1\">\r\n                    <h5>עליך להיות מחובר כדי לשלם</h5>\r\n                </div>\r\n            }\r\n        </div>\r\n    );\r\n\r\n}\r\nexport default Payment","C:\\Users\\tamsu\\Desktop\\לימודים\\תשפא\\סמסטר א\\טכנולוגיות ווב\\פרוייקט סופי\\הפרוייקט 2\\src\\components\\UserAccount\\UserAccount.js",[],"C:\\Users\\tamsu\\Desktop\\לימודים\\תשפא\\סמסטר א\\טכנולוגיות ווב\\פרוייקט סופי\\הפרוייקט 2\\src\\components\\Shared\\AccessToDB.js",[],"C:\\Users\\tamsu\\Desktop\\לימודים\\תשפא\\סמסטר א\\טכנולוגיות ווב\\פרוייקט סופי\\הפרוייקט 2\\src\\components\\ShippingDetails\\ShippingDetails.js",["457","458","459","460"],"import React, { useState, useEffect } from 'react'\r\nimport { validNum, validName } from '../InputForm/Validation.js'\r\nimport { useHistory } from \"react-router-dom\";\r\nimport { getData, updateData } from '../Shared/AccessToDB'\r\nimport InputForm from '../InputForm/InputForm'\r\nimport { saveData } from '../Shared/UsesFunction'\r\nimport './ShippingDetails.css'\r\n\r\n\r\nexport default function ShippingDetails(props) {\r\n    let userNow = props.userNow;\r\n    let setUrl = props.setUrl;\r\n    const [Orders, setOrders] = useState([]);\r\n    const [checked, setChecked] = useState(false);\r\n    const [sumbit, setSumbit] = useState(false);\r\n\r\n    let numSuccess = 0;\r\n    const numInputs = 4;\r\n    let history = useHistory();\r\n    let shippingDetails = { city: \"\", address: \"\", BuildingNumber: \"\", homeNumber: \"\" };\r\n\r\n    useEffect(async () => {\r\n        let allOrdersTemp = await getData(\"orders\");\r\n        setOrders(allOrdersTemp.filter(filterOrders));\r\n    }, [userNow])\r\n\r\n    function filterOrders(order) {\r\n        if (order.idClient === userNow.id) return true;\r\n        return false;\r\n    }\r\n\r\n    const handelSubmit = (event) => {\r\n\r\n        event.preventDefault();\r\n        setSumbit(true);\r\n    }\r\n\r\n    function wasSuccessAdd() {\r\n        numSuccess++;\r\n    }\r\n\r\n    //update the orders with the current shiping details\r\n    const updateOrders = async () => {\r\n        let orderWithFullDetails;\r\n        Orders.forEach(async (order) => {\r\n            if (order.city === \"\") {\r\n                orderWithFullDetails = order;\r\n                orderWithFullDetails.city = shippingDetails.city;\r\n                orderWithFullDetails.buildingNumber = shippingDetails.buildingNumber;\r\n                orderWithFullDetails.homeNumber = shippingDetails.homeNumber;\r\n                orderWithFullDetails.address = shippingDetails.address;\r\n                await updateData(orderWithFullDetails, \"orders\", order.id);\r\n            }\r\n        });\r\n    }\r\n\r\n    useEffect(async () => {\r\n        if (sumbit === true) {\r\n            //returns the sumbit to false for allow pressing the button again\r\n            setSumbit(false);\r\n            //if all the inputs return ok- no errors\r\n            if (numSuccess === numInputs) {\r\n                await updateOrders();\r\n                //if the user apply to save the data to the other times\r\n                if (checked) {\r\n                    userNow.cityDel = shippingDetails.city;\r\n                    userNow.address = shippingDetails.address;\r\n                    userNow.buildingNumber = shippingDetails.buildingNumber;\r\n                    userNow.homeNumber = shippingDetails.homeNumber;\r\n                    await updateData(userNow, \"users\", userNow.id);\r\n                }\r\n                history.push(\"/Payment\");\r\n                setUrl(\"/Payment\");\r\n\r\n            }\r\n        }\r\n\r\n    }, [sumbit])\r\n\r\n\r\n    return (\r\n        <div className=\"ShippingDetails\">\r\n            {userNow.id !== \"\" &&\r\n                <form onSubmit={handelSubmit}>\r\n                    <h3 className=\"header\"><b> פרטי משלוח </b></h3>\r\n                    <div className=\"form\">\r\n                        <InputForm\r\n                            nameComp=\"עיר\"\r\n                            type={\"text\"}\r\n                            value={userNow.cityDel}\r\n                            validationFunction={(data) => {\r\n                                let message = validName(data);\r\n                                if (message === \"\") saveData(shippingDetails, \"city\", data);\r\n                                return message\r\n                            }\r\n                            }\r\n                            sumbited={sumbit}\r\n                            wasSuccess={() => { wasSuccessAdd(); }}\r\n                        />\r\n                        <InputForm\r\n                            nameComp=\"רחוב\"\r\n                            type={\"text\"}\r\n                            value={userNow.address}\r\n                            validationFunction={(data) => {\r\n                                let message = validName(data);\r\n                                if (message === \"\") saveData(shippingDetails, \"address\", data);\r\n                                return message\r\n                            }\r\n                            }\r\n                            sumbited={sumbit}\r\n                            wasSuccess={() => { wasSuccessAdd(); }}\r\n                        />\r\n                        <InputForm\r\n                            nameComp=\"מספר בניין\"\r\n                            type={\"text\"}\r\n                            value={userNow.buildingNumber}\r\n                            validationFunction={(data) => {\r\n                                let message = validNum(data, [3, \"upto\"]);\r\n                                if (message === \"\") saveData(shippingDetails, \"buildingNumber\", data);\r\n                                return message\r\n                            }\r\n                            }\r\n                            sumbited={sumbit}\r\n                            wasSuccess={() => { wasSuccessAdd(); }}\r\n                        />\r\n                        <InputForm\r\n                            nameComp=\"מספר בית\"\r\n                            type={\"text\"}\r\n                            value={userNow.homeNumber}\r\n                            validationFunction={(data) => {\r\n                                let message = validNum(data, [3, \"upto\"]);\r\n                                if (message === \"\") saveData(shippingDetails, \"homeNumber\", data);\r\n                                return message\r\n                            }\r\n                            }\r\n                            sumbited={sumbit}\r\n                            wasSuccess={() => { wasSuccessAdd(); }}\r\n                        />\r\n\r\n                        <label className=\"container-check\">האם לשמור את פרטי המשלוח לפעמים הבאות?\r\n                            <input\r\n                                type=\"checkbox\"\r\n                                onChange={() => { setChecked(true); }}\r\n                            />\r\n                            <span className=\"checkmark\"></span>\r\n                        </label>\r\n                        <button type=\"submit\" className=\"btn1\"><span>המשך</span></button>\r\n\r\n                    </div>\r\n                </form>\r\n            }\r\n            {userNow.id === \"\" &&\r\n                <div className=\"container1\">\r\n                    <h5>עליך להיות מחובר כדי לבצע הזמנה</h5>\r\n                </div>\r\n            }\r\n        </div >\r\n    );\r\n\r\n}\r\n\r\n","C:\\Users\\tamsu\\Desktop\\לימודים\\תשפא\\סמסטר א\\טכנולוגיות ווב\\פרוייקט סופי\\הפרוייקט 2\\src\\components\\LoginSign\\LoginSign.js",[],"C:\\Users\\tamsu\\Desktop\\לימודים\\תשפא\\סמסטר א\\טכנולוגיות ווב\\פרוייקט סופי\\הפרוייקט 2\\src\\components\\ViewOrderAndUpdate\\ViewOrderAndUpdate.js",["461"],"import emailjs from 'emailjs-com';\r\nimport React, { useState, useEffect } from 'react'\r\nimport ProductList from '../ProductsList/ProductsList.js'\r\nimport { getData, updateData, getElement } from '../Shared/AccessToDB'\r\nimport './ViewOrderAndUpdate.css'\r\n\r\n\r\nexport default function ViewOrderAndUpdate(props) {\r\n\r\n    const type = props.type;\r\n    const updateValue = props.updateValue;\r\n    const filterOrders = props.filterOrders;\r\n    const userNow = props.userNow;\r\n\r\n    const [myOrders, setMyOrders] = useState([]);\r\n    const [products, setProducts] = useState([]);\r\n    const [Users, setUsers] = useState([]);\r\n\r\n    //load data\r\n    useEffect(async () => {\r\n\r\n        let allOrdersTemp = await getData(\"orders\");\r\n        setMyOrders(allOrdersTemp.filter(filterOrders));\r\n        let tempProducts = await getData(\"products\");\r\n        setProducts(tempProducts);\r\n        let myUsers = await getData(\"users\");\r\n        setUsers(myUsers);\r\n    }, [userNow, type, updateValue, filterOrders])\r\n\r\n    //send mail to client\r\n    const sendMail = async (productId) => {\r\n        let clientId = findClientId(productId);\r\n        let client = await getElement(\"users\", clientId);\r\n        let product = await getElement(\"products\", productId);\r\n\r\n        emailjs.send('service_7qj5uac', 'delivery_confirmation',\r\n            {\r\n                customer_address: client.email,\r\n                subject: \"אישור שליחה\",\r\n                first_line: \"-המוצר שהזמנת\" + product.name + \"נשלח על ידי המוכר\",\r\n                to_name: client.firstName + ' ' + client.lastName,\r\n                seller_name: userNow.firstName + ' ' + userNow.lastName,\r\n                seller_phone: userNow.phone,\r\n                type: \"מוכר\"\r\n            }\r\n            , 'user_UEyyAFk0B8jnArGMnfUsl')\r\n            .then((result) => {\r\n                console.log(result.text);\r\n            }, (error) => {\r\n                console.log(error.text);\r\n            });\r\n    }\r\n\r\n    function findClientId(productId) {\r\n        for (let i = 0; i < myOrders.length; i++) {\r\n            if (myOrders[i].idItem === productId) return myOrders[i].idClient;\r\n        }\r\n    }\r\n\r\n    function find(idItem) {\r\n        for (let i = 0; i < myOrders.length; i++) {\r\n            if (myOrders[i].idItem === idItem) return myOrders[i];\r\n        }\r\n        return false;\r\n    }\r\n\r\n    function filterProducts(product) {\r\n\r\n        if (find(product.id) !== false)\r\n            return true;\r\n        return false;\r\n    }\r\n\r\n    //update that the order status\r\n    const updateRecieveProduct = async (prodcutId) => {\r\n        let order = find(prodcutId);\r\n        order.status = updateValue;\r\n        await updateData(order, \"orders\", order.id);\r\n        let allOrdersTemp = await getData(\"orders\");\r\n        setMyOrders(allOrdersTemp.filter(filterOrders));\r\n        let tempProducts = await getData(\"products\");\r\n        setProducts(tempProducts);\r\n        if (updateValue === \"deliever\") {\r\n            sendMail(prodcutId);\r\n        }\r\n    }\r\n\r\n\r\nreturn (\r\n\r\n    <div className=\"ViewOrderAndUpdate\">\r\n\r\n\r\n        {myOrders.length !== 0 && products.filter(filterProducts).length !== 0 &&\r\n            <div>\r\n                <ProductList\r\n                    productDetailsArray={products.filter(filterProducts)}\r\n                    sellerDetailsArray={Users}\r\n                    size=\"smallest\"\r\n                    userNow={userNow}\r\n                    type={type}\r\n                    functionButton={(id) => { updateRecieveProduct(id); }}\r\n                />\r\n            </div>\r\n        }\r\n\r\n        {\r\n            (myOrders.length === 0 || products.filter(filterProducts).length === 0) &&\r\n            <h5>אין לך מוצרים כאן</h5>\r\n        }\r\n    </div>\r\n)\r\n}\r\n","C:\\Users\\tamsu\\Desktop\\לימודים\\תשפא\\סמסטר א\\טכנולוגיות ווב\\פרוייקט סופי\\הפרוייקט 2\\src\\components\\Client\\Client.js",[],"C:\\Users\\tamsu\\Desktop\\לימודים\\תשפא\\סמסטר א\\טכנולוגיות ווב\\פרוייקט סופי\\הפרוייקט 2\\src\\components\\Seller\\Seller.js",["462","463"],"import React, { useEffect, useState } from 'react'\r\nimport ViewOrderAndUpdate from '../ViewOrderAndUpdate/ViewOrderAndUpdate'\r\nimport ProductList from '../ProductsList/ProductsList.js'\r\nimport { getData } from '../Shared/AccessToDB'\r\nimport { useHistory } from \"react-router-dom\";\r\nimport './Seller.css'\r\n\r\n\r\nexport default function Seller(props) {\r\n\r\n    const userNow = props.userNow;\r\n    let setUrl = props.setUrl;\r\n    const [products, setProducts] = useState([]);\r\n    const [orders, setOrders] = useState([]);\r\n    let history = useHistory();\r\n    let myOrders;\r\n\r\n    useEffect(async () => {\r\n        let ordersTemp = await getData(\"orders\");\r\n        myOrders = ordersTemp.filter(findMyOrders);\r\n        setOrders(myOrders);\r\n        let productsTemp = await getData(\"products\");\r\n        let filterMyProduct = productsTemp.filter(filterMyItems);\r\n        setProducts(filterMyProduct);\r\n    }, [userNow])\r\n\r\n    //filter the products that the userNow sells\r\n    function filterMyItems(item) {\r\n        if (item.idSeller === userNow.id) {\r\n            if (item.status === \"false\") return itemInOrder(item.id);\r\n            else if (item.status === \"true\") return true;\r\n            else return false;\r\n        }\r\n        else return false;\r\n    }\r\n\r\n    //filter the orders that ordered from the userNow\r\n    function filterOrdersFromMe(order) {\r\n        return order.idSeller === userNow.id && order.status === \"paid\"\r\n    }\r\n\r\n\r\n    function findMyOrders(order) {\r\n        return order.idSeller === userNow.id && (order.status !== \"received\")\r\n    }\r\n\r\n    function itemInOrder(productId) {\r\n        for (let i = 0; i < orders.length; i++) {\r\n            if (orders[i].idItem === productId && orders[i].status === \"deliever\")\r\n                return false;\r\n        }\r\n        if (orders.length === 0) return false;\r\n        return true;\r\n    }\r\n\r\n    \r\n    function goToUpdateProduct(id) {\r\n        history.push({\r\n            pathname: '/updateProduct',\r\n            id: id\r\n        });\r\n        setUrl(\"/updateProduct\");\r\n    }\r\n\r\n    function goToAddProduct() {\r\n        if (userNow.bankNumber === \"\") {\r\n            history.push(\"/signAccount\");\r\n            setUrl(\"/signAccount\");\r\n        }\r\n        else {\r\n            history.push(\"/ProductDetails\");\r\n            setUrl(\"/ProductDetails\");\r\n        }\r\n    }\r\n\r\n    return (\r\n        <div className=\"Seller\">\r\n            <div className=\"order\">\r\n                <h4 className=\"h4-seller\">מוצרים שהוזמנו ממני</h4>\r\n                <div className=\"ordered\">\r\n                    <ViewOrderAndUpdate\r\n                        type=\"sent\"\r\n                        updateValue=\"deliever\"\r\n                        filterOrders={(order) => { return filterOrdersFromMe(order); }}\r\n                        userNow={userNow}\r\n                    />\r\n\r\n                </div>\r\n\r\n            </div>\r\n\r\n            <div className=\"all\">\r\n                <h4 className=\"h4-seller\">כל המוצרים שאני מוכר</h4>\r\n\r\n                <ProductList\r\n                    productDetailsArray={products}\r\n                    sellerDetailsArray={[userNow]}\r\n                    type=\"seller\"\r\n                    functionButton={(id) => { goToUpdateProduct(id); }}\r\n                    size=\"small1\"\r\n                    userNow={userNow}\r\n                />\r\n\r\n\r\n\r\n                <div className=\"add\">\r\n\r\n                    <button className=\"add-button\" onClick={() => { goToAddProduct(); }}>\r\n                        <span className=\"add-icon\">\r\n                            <i className=\"fas fa-plus\"></i>\r\n                        </span>\r\n                        <p>הוסף</p>\r\n                    </button>\r\n\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n","C:\\Users\\tamsu\\Desktop\\לימודים\\תשפא\\סמסטר א\\טכנולוגיות ווב\\פרוייקט סופי\\הפרוייקט 2\\src\\components\\ProductDetails\\ProductDetails.js",["464","465","466","467","468","469","470","471","472","473","474","475","476","477","478"],"import React, { useState, useEffect } from 'react'\r\n\r\nimport { validNum } from '../InputForm/Validation.js'\r\nimport { addData, getData, getElement, updateData } from '../Shared/AccessToDB'\r\nimport { useHistory } from \"react-router-dom\";\r\nimport InputForm from '../InputForm/InputForm'\r\nimport './ProductDetails.css'\r\nimport Message from '../Message/Message'\r\n\r\nfunction ProductDetails(props) {\r\n\r\n    let userNow = props.userNow;\r\n    let idProduct = props.location.id || \"\";\r\n\r\n    const [sumbit, setSumbit] = useState(false);\r\n    const numInputs = 8;\r\n    const [productData, setProductData] = useState({\r\n        id: \"\",\r\n        idSeller: userNow.id,\r\n        name: \"\",\r\n        description: \"\",\r\n        category: \"\",\r\n        mainImgSrc: \"\",\r\n        type: \"\",\r\n        color: \"\",\r\n        price: \"\",\r\n        status: \"true\"\r\n    });\r\n    const [showAlert, setShowAlert] = useState(false);\r\n    const [message, setMessage] = useState(\"\");\r\n    const [products, setProducts] = useState([]);\r\n\r\n    let categoryOption = [\"בחר קטגוריה\", \"ארונות\", \"שולחנות\", \"מיטות\", \"ספות\", \"כיסאות\"];\r\n    const [category, setCategory] = useState(productData.category || \"\");\r\n\r\n    const [typeOption, setTypeOption] = useState(getTypeOption());\r\n    const [type, setType] = useState(productData.type || \"\");\r\n\r\n    let colorsOption = [\"בחר צבע\", \"לבן\", \"שחור\", \"אפור\", \"אדום\", \"כחול\", \"סגול\", \"ורוד\", \"עץ\", \"חום\", \"ירוק\", \"צהוב\", \"כתום\", \"תכלת\", \"צבעוני\"];\r\n    const [color, setColor] = useState(productData.color || \"\");\r\n\r\n    let qualityOption = [\"בחר מצב מוצר\", \"חדש\", \"דרוש תיקון\", \"מצב טוב\", \"כמו חדש\"];\r\n    const [quality, setQuality] = useState(productData.quality || \"\");\r\n\r\n    let setUrl = props.setUrl;\r\n    let history = useHistory();\r\n    let numSuccess = 0;\r\n    let tempProductData = {\r\n        id: \"\",\r\n        idSeller: userNow.id,\r\n        name: \"\",\r\n        description: \"\",\r\n        category: \"\",\r\n        mainImgSrc: \"\",\r\n        type: \"\",\r\n        color: \"\",\r\n        price: \"\",\r\n        quality: \"\",\r\n        status: \"true\"\r\n    }\r\n\r\n\r\n    useEffect(() => {\r\n        setColor(productData.color);\r\n        setType(productData.type);\r\n        setCategory(productData.category);\r\n        setQuality(productData.quality);\r\n    }, [productData.category, productData.color, productData.type, productData.quality])\r\n\r\n    //load data\r\n    useEffect(async () => {\r\n        let allProductsTemp = await getData(\"products\");\r\n        setProducts(allProductsTemp);\r\n        if (idProduct !== null) {\r\n            let productDataTemp = await getElement(\"products\", idProduct);\r\n            setProductData(productDataTemp);\r\n        }\r\n    }, [])\r\n\r\n    //load the type option according the category choosed\r\n    useEffect(() => {\r\n        setTypeOption(getTypeOption());\r\n    }, [category])\r\n\r\n    //check the validity of the data and store it in the json file\r\n    useEffect(async () => {\r\n        if (sumbit === true) {\r\n\r\n            //returns the sumbit to false for allow pressing the button again\r\n            setSumbit(false);\r\n            if (numSuccess === numInputs && idProduct == \"\") {\r\n                addProduct();\r\n                setMessage(\"המוצר נוסף בהצלחה\");\r\n                setShowAlert(true);\r\n\r\n            }\r\n\r\n            if (numSuccess === numInputs && idProduct !== \"\") {\r\n                updateProduct();\r\n                setMessage(\"המוצר עודכן בהצלחה\");\r\n                setShowAlert(true);\r\n\r\n            }\r\n        }\r\n\r\n    }, [sumbit])\r\n\r\n\r\n    function getTypeOption() {\r\n        let types = [];\r\n        switch (category) {\r\n            case \"\", undefined, \"בחר קטגוריה\":\r\n                types = [\"בחר סוג\"];\r\n                break;\r\n            case \"שולחנות\":\r\n                types = [\"בחר סוג\", \"שולחן כתיבה\", \"שולחן אוכל\", \"שולחן קפה\"];\r\n                break;\r\n            case \"ארונות\":\r\n                types = [\"בחר סוג\", \"סיפרייה\", \"מזנון\", \"ארון הזזה\", \"ארון מטבח\", \"ארון בגדים\"];\r\n                break;\r\n            case \"מיטות\":\r\n                types = [\"בחר סוג\", \"ספפה\", \"מיטה נפתחת\", \"מיטת תינוק\", \"מיטת קומותיים\", \"מיטה זוגית\", \"מיטת ילדים\", \"מיטת יחיד\"];\r\n                break;\r\n            case \"ספות\":\r\n                types = [\"בחר סוג\", \"ספפה\", \"כורסה\", \"ספה פינתית\", \"ספה 2+3\",\"ספה 3 מושבים\",\"ספה לילדים\", \"ספה דו מושבית\"];\r\n                break;\r\n            case \"כיסאות\":\r\n                types = [\"בחר סוג\", \"כסאות אוכל\", \"כסאות בר\", \"כסא משרדי\", \"כסא ילדים\", \"כסא חצר\", \"כסאות ים\", \"כסא לסלון\",\"כסא נדנדה\"];\r\n                break;\r\n        }\r\n        return types;\r\n    }\r\n\r\n\r\n    const handelSubmit = (event) => {\r\n        event.preventDefault();\r\n        setSumbit(true);\r\n    }\r\n\r\n    function saveData(inputName, data) {\r\n        switch (inputName) {\r\n            case \"category\":\r\n                setCategory(data);\r\n                break;\r\n            case \"type\":\r\n                setType(data);\r\n                break;\r\n            case \"quality\":\r\n                setQuality(data);\r\n                break;\r\n            case \"color\":\r\n                setColor(data);\r\n                break;\r\n            default:\r\n                tempProductData[inputName] = data;\r\n                break;\r\n        }\r\n    }\r\n\r\n    function wasSuccessAdd() {\r\n        numSuccess++;\r\n    }\r\n\r\n    const findMaxId = async () => {\r\n\r\n        if (products.length === 0) return 1;\r\n        return products[products.length - 1].id;\r\n    }\r\n\r\n    const addProduct = async () => {\r\n        let id = String(Number(await findMaxId()) + 1);\r\n        tempProductData.id = id;\r\n        tempProductData.category = category;\r\n        tempProductData.color = color;\r\n        tempProductData.type = type;\r\n        tempProductData.quality = quality;\r\n        addData(tempProductData, \"products\");\r\n    }\r\n\r\n    function updateTempData() {\r\n        tempProductData.category = category;\r\n        tempProductData.type = type;\r\n        tempProductData.color = color;\r\n        tempProductData.quality = quality;\r\n        if (tempProductData.name === \"\") tempProductData.name = productData.name;\r\n        if (tempProductData.description === \"\") tempProductData.description = productData.description;\r\n        if (tempProductData.price === \"\") tempProductData.price = productData.price;\r\n        if (tempProductData.mainImgSrc === \"\") tempProductData.mainImgSrc = productData.mainImgSrc;\r\n        tempProductData.id = productData.id;\r\n    }\r\n\r\n    const updateProduct = async () => {\r\n        updateTempData();\r\n        updateData(tempProductData, \"products\", tempProductData.id);\r\n    }\r\n\r\n    const deleteProduct = async () => {\r\n        tempProductData = productData;\r\n        tempProductData.status = \"deleted\";\r\n        updateData(tempProductData, \"products\", tempProductData.id);\r\n        setMessage(\"המוצר נמחק בהצלחה\");\r\n        setShowAlert(true);\r\n    }\r\n\r\n\r\n\r\n\r\n    return (\r\n        <div className=\"ProductDetails\">\r\n            <div>\r\n\r\n\r\n                {\r\n                    userNow.id !== \"\" && <div >\r\n                        <form onSubmit={handelSubmit} className=\"container1\">\r\n                            <h2 className=\"PD-h2\"><b> פרטי מוצר </b></h2>\r\n                            <InputForm\r\n                                nameComp=\"שם המוצר\"\r\n                                type=\"text\"\r\n                                value={productData.name}\r\n                                validationFunction={(data) => {\r\n                                    let message = \"\";\r\n                                    if (data == undefined || data == \"\") message = \"שדה נדרש\";\r\n                                    saveData(\"name\", data);\r\n                                    return message\r\n                                }\r\n                                }\r\n                                sumbited={sumbit}\r\n                                wasSuccess={() => { wasSuccessAdd(); }}\r\n                            />\r\n                            <InputForm\r\n                                nameComp=\"תיאור המוצר\"\r\n                                type=\"textarea\"\r\n                                value={productData.description}\r\n                                validationFunction={(data) => {\r\n                                    let message = \"\";\r\n                                    if (data == undefined || data == \"\") message = \"שדה נדרש\";\r\n                                    saveData(\"description\", data);\r\n                                    return message\r\n                                }\r\n                                }\r\n                                sumbited={sumbit}\r\n                                wasSuccess={() => { wasSuccessAdd(); }}\r\n                            />\r\n\r\n                            <InputForm\r\n                                nameComp=\"קטגוריה\"\r\n                                value={productData.category}\r\n                                type=\"select\"\r\n                                sumbited={sumbit}\r\n                                saveData={(data) => { saveData(\"category\", data); }}\r\n                                wasSuccess={() => { wasSuccessAdd(); }}\r\n                                arrayOption={categoryOption}\r\n                            />\r\n\r\n\r\n                            <InputForm\r\n                                nameComp=\" קישור לכתובת התמונה (התמונה צריכה להיות שמורה ברשת)\"\r\n                                type=\"text\"\r\n                                value={productData.mainImgSrc}\r\n                                validationFunction={(data) => {\r\n                                    let message = \"\";\r\n                                    if (data == undefined || data == \"\") message = \"שדה נדרש\";\r\n                                    saveData(\"mainImgSrc\", data);\r\n                                    return message\r\n                                }\r\n                                }\r\n                                sumbited={sumbit}\r\n                                wasSuccess={() => { wasSuccessAdd(); }}\r\n                            />\r\n\r\n                            <InputForm\r\n                                nameComp=\"מחיר\"\r\n                                type=\"text\"\r\n                                value={productData.price}\r\n                                validationFunction={(data) => {\r\n                                    let message = validNum(data, [5, \"upto\"]);\r\n                                    saveData(\"price\", data);\r\n                                    return message\r\n                                }\r\n                                }\r\n                                sumbited={sumbit}\r\n                                wasSuccess={() => { wasSuccessAdd(); }}\r\n                            />\r\n\r\n\r\n                            <InputForm\r\n                                nameComp=\"צבע מרכזי\"\r\n                                type=\"select\"\r\n                                value={productData.color}\r\n                                sumbited={sumbit}\r\n                                saveData={(data) => { saveData(\"color\", data); }}\r\n                                wasSuccess={() => { wasSuccessAdd(); }}\r\n                                arrayOption={colorsOption}\r\n                            />\r\n\r\n                            <InputForm\r\n                                nameComp=\"מצב המוצר\"\r\n                                type=\"select\"\r\n                                value={productData.quality}\r\n                                sumbited={sumbit}\r\n                                saveData={(data) => { saveData(\"quality\", data); }}\r\n                                wasSuccess={() => { wasSuccessAdd(); }}\r\n                                arrayOption={qualityOption}\r\n                            />\r\n\r\n                            <InputForm\r\n                                nameComp=\"סוג\"\r\n                                type=\"select\"\r\n                                value={productData.type}\r\n                                sumbited={sumbit}\r\n                                saveData={(data) => { saveData(\"type\", data); }}\r\n                                wasSuccess={() => { wasSuccessAdd(); }}\r\n                                arrayOption={typeOption}\r\n                            />\r\n\r\n                            <div className=\"buttons\">\r\n                                {\r\n                                    idProduct === \"\" &&\r\n                                    <button type=\"submit\" className=\"btn1\">\r\n                                        <span className=\"plus-icon\">\r\n                                            <i className=\"fas fa-plus\"></i>\r\n                                        </span>\r\n                                    </button>\r\n                                }\r\n\r\n\r\n                                {idProduct !== \"\" &&\r\n                                    <div className=\"buttons2\">\r\n                                        <button type=\"submit\" className={\"btn1\", \"v-btn\"}>\r\n                                            <span className=\"v-icon\">\r\n                                                <i className=\"fas fa-clipboard-check\"></i>\r\n                                            </span>\r\n                                        </button>\r\n                                        <div className=\"trash-icon-container\">\r\n                                            <span className=\"trash-icon\" onClick={() => { deleteProduct(); }}>\r\n                                                <i className=\"far fa-trash-alt\"></i>\r\n                                            </span>\r\n                                        </div>\r\n                                    </div>\r\n                                }\r\n                            </div>\r\n                        </form>\r\n                        {\r\n                            showAlert && <Message\r\n                                showAlert={showAlert}\r\n                                message={message}\r\n                                onClose={() => {\r\n                                    setShowAlert(false);\r\n                                    history.push(\"/PersonalArea\");\r\n                                    setUrl(\"/PersonalArea\");\r\n                                }\r\n                                }\r\n                                type=\"success\" />\r\n                        }\r\n                    </div>\r\n\r\n                }\r\n                {userNow.id === \"\" &&\r\n                    <div className=\"container1\">\r\n                        <h5>עליך להיות מחובר כדי להוסיף או לעדכן מוצר</h5>\r\n                    </div>\r\n                }\r\n            </div>\r\n        </div>\r\n    );\r\n\r\n}\r\nexport default ProductDetails\r\n","C:\\Users\\tamsu\\Desktop\\לימודים\\תשפא\\סמסטר א\\טכנולוגיות ווב\\פרוייקט סופי\\הפרוייקט 2\\src\\components\\Paypal\\Paypal.js",["479"],"import React from 'react';\r\nimport PaypalExpressBtn from 'react-paypal-express-checkout';\r\n//take from https://www.npmjs.com/package/react-paypal-express-checkout\r\nexport default class MyApp extends React.Component {\r\n    render() {\r\n        const onSuccess = (payment) => {\r\n            // Congratulation, it came here means everything's fine!\r\n            this.props.makePay();\r\n            console.log(\"The payment was succeeded!\", payment);\r\n            // You can bind the \"payment\" object's value to your state or props or whatever here, please see below for sample returned data\r\n        }\r\n\r\n        const onCancel = (data) => {\r\n            // User pressed \"cancel\" or close Paypal's popup!\r\n            console.log('The payment was cancelled!', data);\r\n            // You can bind the \"data\" object's value to your state or props or whatever here, please see below for sample returned data\r\n        }\r\n\r\n        const onError = (err) => {\r\n            // The main Paypal's script cannot be loaded or somethings block the loading of that script!\r\n            console.log(\"Error!\", err);\r\n            // Because the Paypal's main script is loaded asynchronously from \"https://www.paypalobjects.com/api/checkout.js\"\r\n            // => sometimes it may take about 0.5 second for everything to get set, or for the button to appear\r\n        }\r\n\r\n        let env = 'sandbox'; // you can set here to 'production' for production\r\n        let currency = 'ILS'; // or you can set this value from your props or state\r\n        let total = 1; // same as above, this is the total amount (based on currency) to be paid by using Paypal express checkout\r\n        // Document on Paypal's currency code: https://developer.paypal.com/docs/classic/api/currency_codes/\r\n\r\n        const client = {\r\n            sandbox: 'AXDJ7_PtbScsY7_OXa0N6Lfanc7IjpJy_UsPK6cDpm-BP5vCP_0sauPT0xSrgrWXodIvf7ok-yqDkgx1',\r\n            production: 'YOUR-PRODUCTION-APP-ID',\r\n        }\r\n        // In order to get production's app-ID, you will have to send your app to Paypal for approval first\r\n        // For sandbox app-ID (after logging into your developer account, please locate the \"REST API apps\" section, click \"Create App\"):\r\n        //   => https://developer.paypal.com/docs/classic/lifecycle/sb_credentials/\r\n        // For production app-ID:\r\n        //   => https://developer.paypal.com/docs/classic/lifecycle/goingLive/\r\n\r\n        // NB. You can also have many Paypal express checkout buttons on page, just pass in the correct amount and they will work!\r\n        return (\r\n            <PaypalExpressBtn env={env} client={client} currency={currency} total={this.props.total} onError={onError} onSuccess={onSuccess} onCancel={onCancel} />\r\n        );\r\n    }\r\n}","C:\\Users\\tamsu\\Desktop\\לימודים\\תשפא\\סמסטר א\\טכנולוגיות ווב\\פרוייקט סופי\\הפרוייקט 2\\src\\components\\SignAccount\\SignAccount.js",["480","481"],"import React, { useState, useEffect } from 'react'\r\nimport { validBankBranch, validAccount } from '../InputForm/Validation.js'\r\nimport { useHistory } from \"react-router-dom\";\r\nimport { getElement, updateData } from '../Shared/AccessToDB'\r\nimport InputForm from '../InputForm/InputForm'\r\nimport { saveData } from '../Shared/UsesFunction'\r\nimport './SignAccount.css'\r\nimport Message from '../Message/Message'\r\n\r\nfunction SignAccount(props) {\r\n    let userNow = props.userNow;\r\n    let mode = props.mode || \"\";\r\n    let setUrl = props.setUrl;\r\n\r\n    const [sumbit, setSumbit] = useState(false);\r\n    const [showAlert, setShowAlert] = useState(false);\r\n    const [message, setMessage] = useState(\"\");\r\n\r\n    let accountData = { bankNumber: \"\", branchNumber: \"\", bankAccount: \"\" };\r\n    let numSuccess = 0;\r\n    const numInputs = 3;\r\n    let history = useHistory();\r\n\r\n    useEffect(async () => {\r\n        if (sumbit === true) {\r\n            //returns the sumbit to false for allow pressing the button again\r\n            setSumbit(false);\r\n            //if all the inputs return ok- no errors\r\n            if (numSuccess === numInputs && mode === \"\") {\r\n                await apdudeAccount();\r\n                setMessage(\"החשבון נשמר בהצלחה\");\r\n                setShowAlert(true);\r\n            }\r\n            else if (numSuccess === numInputs && mode === \"update\") {\r\n                await apdudeAccount();\r\n                setMessage(\"החשבון עודכן בהצלחה\");\r\n                setShowAlert(true);\r\n            }\r\n        }\r\n\r\n    }, [sumbit])\r\n\r\n    const handelSubmit = (event) => {\r\n        event.preventDefault();\r\n        setSumbit(true);\r\n    }\r\n\r\n\r\n    function wasSuccessAdd() {\r\n        numSuccess++;\r\n    }\r\n\r\n    //update the account details in the user details in json file\r\n    async function apdudeAccount() {\r\n        let user = await getElement(\"users\", userNow.id);\r\n        user.bankAccount = accountData.bankAccount;\r\n        user.bankNumber = accountData.bankNumber;\r\n        user.branchNumber = accountData.branchNumber;\r\n        await updateData(user, \"users\", userNow.id);\r\n    }\r\n\r\n\r\n\r\n\r\n    return (\r\n        <div className=\"SignAccount\">\r\n\r\n\r\n            {userNow.id !== \"\" && <form onSubmit={handelSubmit} className=\"container1\">\r\n                <h2 className=\"centered\"><b> פרטי בנק</b></h2>\r\n                <p className=\"centered\">כדי להוסיף מוצר עליך לשמור פרטי חשבון בנק, לצורך קבלת הכסף ממכירת הפריטים</p>\r\n\r\n                <InputForm\r\n                    nameComp=\"מספר בנק\"\r\n                    type={\"text\"}\r\n                    value={userNow.bankNumber}\r\n                    validationFunction={(data) => {\r\n                        let message = validBankBranch(data);\r\n                        if (message === \"\") saveData(accountData, \"bankNumber\", data);\r\n                        return message\r\n                    }\r\n                    }\r\n                    sumbited={sumbit}\r\n                    wasSuccess={() => { wasSuccessAdd(); }}\r\n                />\r\n                <InputForm\r\n                    nameComp=\"מספר סניף\"\r\n                    type={\"text\"}\r\n                    value={userNow.branchNumber}\r\n                    validationFunction={(data) => {\r\n                        let message = validBankBranch(data);\r\n                        if (message === \"\") saveData(accountData, \"branchNumber\", data);\r\n                        return message\r\n                    }\r\n                    }\r\n                    sumbited={sumbit}\r\n                    wasSuccess={() => { wasSuccessAdd(); }}\r\n                />\r\n                <InputForm\r\n                    nameComp=\"מספר חשבון בנק\"\r\n                    type={\"text\"}\r\n                    value={userNow.bankAccount}\r\n                    validationFunction={(data) => {\r\n                        let message = validAccount(data);\r\n                        if (message === \"\") saveData(accountData, \"bankAccount\", data);\r\n                        return message\r\n                    }\r\n                    }\r\n                    sumbited={sumbit}\r\n                    wasSuccess={() => { wasSuccessAdd(); }}\r\n                />\r\n\r\n                <button type=\"submit\" className=\"btn1\">{mode === \"\" ? \"שמור\" : \"עדכן\"}</button>\r\n            </form>}\r\n            {userNow.id === \"\" &&\r\n                <div className=\"container1\">\r\n                    <h5>עליך להיות מחובר כדי להוסיף פרטי חשבון</h5>\r\n                </div>\r\n            }\r\n            {\r\n                showAlert && <Message\r\n                    showAlert={showAlert}\r\n                    message={message}\r\n                    onClose={() => {\r\n                        setShowAlert(false);\r\n                        if (mode === \"\") {\r\n                            history.push(\"/ProductDetails\");\r\n                            setUrl(\"/ProductDetails\");\r\n                        }\r\n                    }\r\n                    }\r\n                    type=\"success\" />\r\n            }\r\n\r\n        </div>\r\n    );\r\n\r\n}\r\nexport default SignAccount\r\n","C:\\Users\\tamsu\\Desktop\\לימודים\\תשפא\\סמסטר א\\טכנולוגיות ווב\\פרוייקט סופי\\הפרוייקט 2\\src\\components\\PersonalArea\\PersonalArea.js",[],"C:\\Users\\tamsu\\Desktop\\לימודים\\תשפא\\סמסטר א\\טכנולוגיות ווב\\פרוייקט סופי\\הפרוייקט 2\\src\\components\\Message\\Message.js",[],"C:\\Users\\tamsu\\Desktop\\לימודים\\תשפא\\סמסטר א\\טכנולוגיות ווב\\פרוייקט סופי\\הפרוייקט 2\\src\\components\\About\\About.js",[],"C:\\Users\\tamsu\\Desktop\\לימודים\\תשפא\\סמסטר א\\טכנולוגיות ווב\\פרוייקט סופי\\הפרוייקט 2\\src\\components\\UpdateUser\\UpdateUser.js",[],"C:\\Users\\tamsu\\Desktop\\לימודים\\תשפא\\סמסטר א\\טכנולוגיות ווב\\פרוייקט סופי\\הפרוייקט 2\\src\\components\\NotFound\\NotFound.js",[],"C:\\Users\\tamsu\\Desktop\\לימודים\\תשפא\\סמסטר א\\טכנולוגיות ווב\\פרוייקט סופי\\הפרוייקט 2\\src\\components\\CategoryProduct\\CategoryProductB\\CategoryProductB.js",["482","483"],"import React, { useEffect, useState } from 'react'\r\nimport { getData, getElement } from '../../Shared/AccessToDB'\r\nimport FilterB from '../Filter/FilterB'\r\nimport Furinture from '../Furniture/Furinture'\r\nimport './CategoryProductB.css'\r\nexport default function CategoryProductB(props) {\r\n\r\n    let userNow = props.userNow;\r\n    let categoryShow = props.category;\r\n    const [category, setCategory] = useState(categoryShow);\r\n    const [cities, setCities] = useState([]);\r\n    const [types, setTypes] = useState([]);\r\n    const [colors, setColors] = useState([]);\r\n    const [quality, setQuality] = useState([]);\r\n    const [price, setPrice] = useState([]);\r\n\r\n    const [citiesChecked, setCitiesChecked] = useState([]);\r\n    const [typesChecked, setTypesChecked] = useState([]);\r\n    const [colorsChecked, setColorsChecked] = useState([]);\r\n    const [qualityChecked, setQualityChecked] = useState([]);\r\n    const [priceChecked, setPriceChecked] = useState([]);\r\n\r\n    //load the filter parameters according to the category and rellevant products\r\n    useEffect(async () => {\r\n\r\n        let products = await getData(\"products\")\r\n        products = products.filter((product) => {\r\n            return (product.category === categoryShow && product.status === \"true\");\r\n        });;\r\n        let citiesTemp = [];\r\n        let typesTemp = [];\r\n        let colorsTemp = [];\r\n        let qualityTemp = [];\r\n        let maxPrice = 0;\r\n\r\n        for (let i = 0; i < products.length; i++) {\r\n            let city = await getCity(products[i]);\r\n            if (!citiesTemp.includes(city)) {\r\n                citiesTemp.push(city);\r\n            }\r\n            if (!typesTemp.includes(products[i].type)) {\r\n                typesTemp.push(products[i].type);\r\n            }\r\n            if (!colorsTemp.includes(products[i].color)) {\r\n                colorsTemp.push(products[i].color);\r\n            }\r\n            if (!qualityTemp.includes(products[i].quality)) {\r\n                qualityTemp.push(products[i].quality);\r\n            }\r\n            if (Number(products[i].price) > maxPrice) maxPrice = Number(products[i].price);\r\n        }\r\n        setCities(citiesTemp);\r\n        setTypes(typesTemp);\r\n        setColors(colorsTemp);\r\n        setPrice([0, maxPrice]);\r\n        setQuality(qualityTemp);\r\n        setCategory(props.category);\r\n\r\n    }, [props.category])\r\n\r\n    const getCity = async (product) => {\r\n        let myUser = await getElement(\"users\", product.idSeller);\r\n        return myUser.city;\r\n    }\r\n\r\n\r\n    function changeArrays(cities, types, colors, price, quality) {\r\n        setCitiesChecked(cities.slice());\r\n        setColorsChecked(colors.slice());\r\n        setTypesChecked(types.slice());\r\n        setPriceChecked(price.slice());\r\n        setQualityChecked(quality.slice());\r\n    }\r\n\r\n    return (\r\n        <div className=\"categoryProduct\">\r\n            <div className=\"filter\">\r\n                <FilterB\r\n                    changeArrays={(cities, types, colors, price, quality) => { changeArrays(cities, types, colors, price, quality); }}\r\n                    category={category}\r\n                    cities={cities}\r\n                    types={types}\r\n                    colors={colors}\r\n                    price={price}\r\n                    quality={quality}\r\n                    citiesChecked={citiesChecked}\r\n                    colorsChecked={colorsChecked}\r\n                    typesChecked={typesChecked}\r\n                    priceChecked={priceChecked}\r\n                    qualityChecked={qualityChecked}\r\n                />\r\n            </div>\r\n            <div className=\"furniture\">\r\n                <Furinture\r\n                    userNow={userNow}\r\n                    category={category}\r\n                    cities={citiesChecked}\r\n                    price={priceChecked}\r\n                    types={typesChecked}\r\n                    colors={colorsChecked}\r\n                    quality={qualityChecked} />\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n","C:\\Users\\tamsu\\Desktop\\לימודים\\תשפא\\סמסטר א\\טכנולוגיות ווב\\פרוייקט סופי\\הפרוייקט 2\\src\\components\\CategoryProduct\\Furniture\\Furinture.js",["484","485"],"import React, { useState, useEffect } from 'react'\r\nimport { getData, getElement } from '../../Shared/AccessToDB'\r\nimport ProductList from '../../ProductsList/ProductsList.js'\r\n\r\nexport default function Furinture(props) {\r\n\r\n    let category = props.category;\r\n    let types = props.types;\r\n    let cities = props.cities;\r\n    let colors = props.colors;\r\n    let price = props.price;\r\n    let quality = props.quality;\r\n    let userNow = props.userNow;\r\n    const [products, setProducts] = useState([]);\r\n    const [users, setUsers] = useState([]);\r\n\r\n    //load data\r\n    useEffect(async () => {\r\n        let products = await getData(\"products\");\r\n        products = products.filter((product) => {\r\n            return (product.category === category && product.status === \"true\");\r\n        });;\r\n        let foundProducts = await myFilter(products, filterProduct);\r\n        setProducts(foundProducts);\r\n        let users = await getData(\"users\");\r\n        setUsers(users);\r\n\r\n    }, [category, cities, types, colors, price, quality]);\r\n\r\n    //async filter\r\n    const myFilter = async (array, filterFunction) => {\r\n        let newArray = [];\r\n        for (let i = 0; i < array.length; i++) {\r\n            let res = await filterFunction(array[i]);\r\n            if (res === true)\r\n                newArray.push(array[i]);\r\n        }\r\n        return newArray;\r\n\r\n    }\r\n\r\n    //filter the product \r\n    const filterProduct = async (product) => {\r\n        let city = await getCity(product);\r\n        return (product.status === \"true\") &&\r\n            (category === (product.category)) &&\r\n            (types.length === 0 || types.includes(product.type)) &&\r\n            (colors.length === 0 || colors.includes(product.color)) &&\r\n            (cities.length === 0 || cities.includes(city)) &&\r\n            (quality.length === 0 || quality.includes(product.quality)) &&\r\n            (price.length === 0 || (Number(product.price) <= price[1] && Number(product.price) >= price[0]))\r\n    }\r\n\r\n    const getCity = async (product) => {\r\n        let myUser = await getElement(\"users\", product.idSeller);\r\n        return myUser.city;\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <ProductList userNow={userNow} productDetailsArray={products} sellerDetailsArray={users} size=\"small2\" />\r\n        </div>\r\n    )\r\n}\r\n","C:\\Users\\tamsu\\Desktop\\לימודים\\תשפא\\סמסטר א\\טכנולוגיות ווב\\פרוייקט סופי\\הפרוייקט 2\\src\\components\\CategoryProduct\\Filter\\FilterB.js",[],"C:\\Users\\tamsu\\Desktop\\לימודים\\תשפא\\סמסטר א\\טכנולוגיות ווב\\פרוייקט סופי\\הפרוייקט 2\\src\\components\\ProductsList\\ProductsList.js",[],"C:\\Users\\tamsu\\Desktop\\לימודים\\תשפא\\סמסטר א\\טכנולוגיות ווב\\פרוייקט סופי\\הפרוייקט 2\\src\\components\\Product\\ProductBig\\ProductBig.js",["486","487"],"import React, { useState } from 'react'\r\nimport Modal from 'react-bootstrap/Modal'\r\nimport { getData, addData } from '../../Shared/AccessToDB'\r\n\r\nimport Message from '../../Message/Message'\r\nimport '../Product.css'\r\n\r\nexport default function ProductBig(props) {\r\n\r\n    const productDetails = props.productDetails;\r\n    const sellerDetails = props.sellerDetails;\r\n    const type = props.type;\r\n    const userNow = props.userNow;\r\n    const errorProducts = props.errorProducts;\r\n    const user = props.user;\r\n    const myOrder = props.myOrder;\r\n    const showModal = props.showModal;\r\n    const setShowModal = props.setShowModal;\r\n    const size = props.size;\r\n    const changeSize = props.changeSize;\r\n    const [showAlert, setShowAlert] = useState(false);\r\n    const [message, setMessage] = useState(\"\");\r\n    const [typeMessage, setTypeMessage] = useState(\"\");\r\n\r\n\r\n    const handleClose = () => {\r\n        setShowModal(false);\r\n        \r\n    }\r\n\r\n\r\n   \r\n    const findMaxId = async () => {\r\n        let allOrders = [];\r\n        allOrders = await getData(\"orders\");\r\n        if (allOrders.length === 0) return 1;\r\n        return Number(allOrders[allOrders.length - 1].id) + 1;\r\n    }\r\n\r\n    const makeOrder = async () => {\r\n        //save the orders details in json file\r\n        if (userNow.id === \"\") {\r\n            handleClose();\r\n            setMessage(\"אינך מחובר לאתר\");\r\n            setShowAlert(true);\r\n            return;\r\n        }\r\n        let id = String(await findMaxId());\r\n        let newOrder = {\r\n            id: id,\r\n            idItem: \"\",\r\n            idSeller: \"\",\r\n            idClient: \"\",\r\n            city: \"\",\r\n            address: \"\",\r\n            buildingNumber: \"\",\r\n            homeNumber: \"\",\r\n            status: \"cart\"\r\n        };\r\n        newOrder.idItem = productDetails.id;\r\n        newOrder.idSeller = sellerDetails.id;\r\n        newOrder.idClient = userNow.id;\r\n        if (newOrder.idClient == newOrder.idSeller) {\r\n            handleClose();\r\n            setMessage(\"לא ניתן להזמין מוצר שאתה המוכר שלו\");\r\n            setShowAlert(true);\r\n            return;\r\n        }\r\n        let isExistOrder = await existOrder(newOrder.idItem);\r\n        if (isExistOrder) {\r\n            handleClose();\r\n            setMessage(\"מוצר זה כבר קיים בעגלה\");\r\n            setShowAlert(true);\r\n            return;\r\n        }\r\n        await addData(newOrder, \"orders\");\r\n        handleClose();\r\n        setMessage(\"המוצר נוסף בהצלחה\");\r\n        setShowAlert(true);\r\n        setTypeMessage(\"success\");\r\n    }\r\n\r\n    const existOrder = async (productId) => {\r\n        let allOrder = await getData(\"orders\");\r\n        for (let i = 0; i < allOrder.length; i++) {\r\n            if (allOrder[i].idClient === userNow.id && allOrder[i].idItem === productId) return true;\r\n        }\r\n        return false;\r\n    }\r\n\r\n    //return the products full details\r\n    return (\r\n        <div>\r\n\r\n            <Modal\r\n                show={showModal}\r\n                onHide={handleClose}\r\n                size=\"lg\"\r\n                aria-labelledby=\"contained-modal-title-vcenter\"\r\n                centered\r\n                className=\"modal\"\r\n            >\r\n                <Modal.Body className=\"product-modal-body\">\r\n                    <div className=\"card-modal\">\r\n                        <div>\r\n                            <img src={productDetails.mainImgSrc} className=\"card-modal-img\" />\r\n                        </div>\r\n                        <div className=\"card-modal-text\">\r\n                            <h4><b>{productDetails.name}</b></h4>\r\n                            <p className=\"desc\">{productDetails.description}</p>\r\n                            {type === \"sent\" && user !== null && myOrder !== null &&\r\n                                <div>\r\n                                    <h6>פרטי הזמנה</h6>\r\n                                    <p>\r\n                                        <b>פלאפון לקוח </b>\r\n                                        <div className=\"values\">{user.phone}</div>\r\n                                    </p>\r\n                                    <p>\r\n                                        <b>כתובת למשלוח </b>\r\n                                        <div className=\"values\">{myOrder.city}, {myOrder.address} {myOrder.buildingNumber} / {myOrder.homeNumber}</div>\r\n                                    </p>\r\n\r\n                                </div>\r\n                            }\r\n\r\n                            {type !== \"sent\" && < div >\r\n                                <p><b>עיר </b> <div className=\"values\">{sellerDetails.city}</div></p>\r\n                                <p><b>מצב המוצר </b> <div className=\"values\">{productDetails.quality}</div></p>\r\n                                <p><b>צבע </b> <div className=\"values\">{productDetails.color}</div></p>\r\n                                <h6>פרטי התקשרות עם המוכר </h6>\r\n                                <p><b>שם </b> <div className=\"values\">{sellerDetails.firstName} {sellerDetails.lastName}</div></p>\r\n                                <p><b>טלפון </b><div className=\"values\">{sellerDetails.phone}</div></p>\r\n\r\n                                {type === \"paid\" && myOrder !== null &&\r\n                                    <p><b>מצב הזמנה</b><div className=\"values\">\r\n                                        {(myOrder.status === \"paid\") ? \"שולם\" : (myOrder.status === \"deliever\") ? \"נשלח\" : \"\"}\r\n                                    </div></p>}\r\n                                <p className=\"price\"> {productDetails.price} &#8362;</p>\r\n\r\n                            </div>}\r\n                            {\r\n                                type === \"cart\" && errorProducts.includes(productDetails.id) &&\r\n                                <small>המוצר הוסר ע\"י המוכר ואינו זמין יותר לרכישה</small>\r\n                            }\r\n                        </div>\r\n                        {\r\n                            productDetails.id !== \"\" && sellerDetails.id !== \"\" && size === \"bigWithBtn\" &&\r\n                            <div className=\"button-container\">\r\n                                <button onClick={async () => { makeOrder(); }}>הוסף לעגלה</button>\r\n                            </div>\r\n                        }\r\n\r\n                    </div>\r\n                </Modal.Body>\r\n            </Modal>\r\n\r\n            {\r\n                showAlert && <Message\r\n                    showAlert={showAlert}\r\n                    message={message}\r\n                    onClose={() => {\r\n                        setShowAlert(false);\r\n                        setTypeMessage(\"\");\r\n                        changeSize();\r\n                    }\r\n                    }\r\n                    type={typeMessage} />\r\n            }\r\n\r\n        </div>\r\n    )\r\n}\r\n",["488","489"],"C:\\Users\\tamsu\\Desktop\\לימודים\\תשפא\\סמסטר א\\טכנולוגיות ווב\\פרוייקט סופי\\הפרוייקט 2\\src\\components\\Cart\\Cart.js",["490","491","492","493"],"import React, { useState, useEffect } from 'react'\r\nimport ProductList from '../ProductsList/ProductsList.js'\r\nimport { useHistory } from \"react-router-dom\";\r\nimport { getData, deleteData, updateData } from '../Shared/AccessToDB'\r\nimport './Cart.css'\r\n\r\nexport default function Cart(props) {\r\n    const [myOrders, setMyOrders] = useState([]);\r\n    const [allOrders, setAllOrders] = useState([]);\r\n    const [productsFiltered, setProductsFiltered] = useState([]);\r\n    const [Users, setUsers] = useState([]);\r\n    const [errorProducts, setErrorProduct] = useState([]);\r\n    const [signal, setSignal] = useState(null);\r\n\r\n    const userNow = props.userNow;\r\n    let closePopover = props.closePopover;\r\n    let history = useHistory();\r\n    let myOrdersTemp = [];\r\n    let allOrdersTemp = [];\r\n    let setUrl = props.setUrl;\r\n\r\n    //load data\r\n    useEffect(async () => {\r\n        let isCanceled = false;\r\n        const abortController = new AbortController();\r\n        let signalTemp = abortController.signal;\r\n        setSignal(signalTemp);\r\n        async function loadData() {\r\n            try {\r\n                if (!isCanceled && userNow.id !== \"\") {\r\n                    allOrdersTemp = await getData(\"orders\", signalTemp);\r\n                    setAllOrders(allOrdersTemp);\r\n                    myOrdersTemp = allOrdersTemp.filter(filterOrders)\r\n                    setMyOrders(myOrdersTemp);\r\n                    let tempProducts = await getData(\"products\", signalTemp);\r\n                    let myUsers = await getData(\"users\", signalTemp);\r\n                    setUsers(myUsers);\r\n                    let productsFilteredTemp = await myFilter(tempProducts, filterProducts, myOrdersTemp,allOrdersTemp);\r\n                    setProductsFiltered(productsFilteredTemp);\r\n                }\r\n            }\r\n            catch (e) {\r\n                if (!isCanceled && abortController.signal.aborted) throw e;\r\n            }\r\n\r\n        }\r\n\r\n        loadData();\r\n\r\n        return function cleanUp() {\r\n            isCanceled = true;\r\n            abortController.abort();\r\n        };\r\n    }, [userNow])\r\n\r\n\r\n    function filterOrders(order) {\r\n        if (order.idClient === userNow.id && (order.status === \"cart\" || order.status === \"error\")) return true;\r\n        return false;\r\n    }\r\n\r\n    function find(idItem, myOrdersTemp) {\r\n        for (let i = 0; i < myOrdersTemp.length; i++) {\r\n            if (myOrdersTemp[i].idItem === idItem) return myOrdersTemp[i];\r\n        }\r\n        return false;\r\n    }\r\n\r\n    async function filterProducts(product,myOrdersTemp,allOrdersTemp) {\r\n        let order = find(product.id,myOrdersTemp);\r\n        if (order !== false) {\r\n            if (product.status === \"true\")\r\n                return true;\r\n            if (order.status === \"error\") {\r\n                if (!errorProducts.includes(product.id)) {\r\n                    let errorProductsTemp = errorProducts;\r\n                    errorProductsTemp.push(product.id);\r\n                    setErrorProduct(errorProductsTemp.slice());\r\n                }\r\n                return true;\r\n            }\r\n            else if (notValidOrder(order, product,allOrdersTemp)) {\r\n                order.status = \"error\";\r\n                await updateData(order, \"orders\", order.id, signal);\r\n                if (!errorProducts.includes(product.id)) {\r\n                    let errorProductsTemp = errorProducts;\r\n                    errorProductsTemp.push(product.id);\r\n                    setErrorProduct(errorProductsTemp.slice());\r\n                }\r\n                return true;\r\n            }\r\n        }\r\n        return false;\r\n    }\r\n\r\n    //async filter\r\n    const myFilter = async (array, filterFunction,myOrdersTemp,allOrdersTemp) => {\r\n        let newArray = [];\r\n        for (let i = 0; i < array.length; i++) {\r\n            let res = await filterFunction(array[i],myOrdersTemp,allOrdersTemp);\r\n            if (res === true)\r\n                newArray.push(array[i]);\r\n        }\r\n        return newArray;\r\n\r\n    }\r\n\r\n    //chek if the order is not valid- \r\n    //the seller sold the product to other person\r\n    function notValidOrder(order, product,allOrdersTemp) {\r\n        if (product.status === \"deleted\") return true;\r\n        for (let i = 0; i < allOrdersTemp.length; i++) {\r\n            if (allOrdersTemp[i].idItem === product.id &&\r\n                order.status === \"cart\" &&\r\n                allOrdersTemp[i].status !== \"cart\" &&\r\n                allOrdersTemp[i].status !== \"error\")\r\n                return true;\r\n        }\r\n        return false;\r\n\r\n    }\r\n\r\n    const deleteOrder = async (id) => {\r\n        let idOrder = 0;\r\n        for (let i = 0; i < myOrders.length; i++) {\r\n            if (myOrders[i].idItem === id) {\r\n                idOrder = myOrders[i].id;\r\n                break;\r\n            }\r\n        }\r\n        await deleteData(\"orders\", idOrder, signal);\r\n        let allOrdersTemp = await getData(\"orders\", signal);\r\n        let myOrdersTemp=allOrdersTemp.filter(filterOrders);\r\n        setMyOrders(myOrdersTemp);\r\n        let tempProducts = await getData(\"products\");\r\n        let productsFilteredTemp = await myFilter(tempProducts, filterProducts, myOrdersTemp);\r\n        setProductsFiltered(productsFilteredTemp);\r\n        let myUsers = await getData(\"users\", signal);\r\n        setUsers(myUsers);\r\n    }\r\n\r\n\r\n    function validOrdersLength() {\r\n        let cnt = 0;\r\n        for (let i = 0; i < myOrders.length; i++) {\r\n            if (myOrders[i].status === \"cart\") cnt++;\r\n        }\r\n        return cnt;\r\n    }\r\n\r\n\r\n    function goToPay() {\r\n        if (closePopover !== undefined) closePopover();\r\n        history.push(\"/ShippingDetails\");\r\n        setUrl(\"/ShippingDetails\");\r\n    }\r\n\r\n\r\n    return (\r\n\r\n        <div className=\"cart\">\r\n            <div className=\"product-container\">\r\n                <ProductList\r\n                    productDetailsArray={productsFiltered}\r\n                    sellerDetailsArray={Users}\r\n                    size=\"smallest\"\r\n                    userNow={userNow}\r\n                    type={\"cart\"}\r\n                    functionButton={async (id) => { await deleteOrder(id); }}\r\n                    errorProducts={errorProducts}\r\n                />\r\n            </div>\r\n            {validOrdersLength() !== 0 && productsFiltered.length !== 0 &&\r\n                <button onClick={() => { goToPay(); }} className=\"pay-button\">לתשלום</button>}\r\n            {\r\n                (myOrders.length === 0  || productsFiltered.length === 0 ) &&\r\n                <h5>העגלה שלך ריקה</h5>\r\n            }\r\n        </div>\r\n    )\r\n}\r\n","C:\\Users\\tamsu\\Desktop\\לימודים\\תשפא\\סמסטר א\\טכנולוגיות ווב\\פרוייקט סופי\\הפרוייקט 2\\src\\components\\Shared\\UsesFunction.js",[],"C:\\Users\\tamsu\\Desktop\\לימודים\\תשפא\\סמסטר א\\טכנולוגיות ווב\\פרוייקט סופי\\הפרוייקט 2\\src\\components\\InputForm\\Validation.js",[],"C:\\Users\\tamsu\\Desktop\\לימודים\\תשפא\\סמסטר א\\טכנולוגיות ווב\\פרוייקט סופי\\הפרוייקט 2\\src\\components\\InputForm\\InputForm.js",["494","495","496","497","498","499"],"import React, { useState, useEffect } from 'react'\r\nimport './InputForm.css'\r\nfunction InputForm(props) {\r\n    const { nameComp, type, validationFunction, sumbited, wasSuccess, value, disabled, saveData, arrayOption } = props;\r\n    const [data, setData] = useState(value);\r\n    const [validData, setvalidData] = useState(\"\");\r\n\r\n\r\n    useEffect(() => {\r\n\r\n        if (sumbited === true) {\r\n            //checks whether the data entered is valid by the function sent to the component \r\n            let message;\r\n            if (type != \"select\") {\r\n                if (data === undefined) message = \"שדה נדרש\";\r\n                else message = validationFunction(data);\r\n            }\r\n            else message = validSelects(data);\r\n            setvalidData(message);\r\n            //returns to the parent component that the data is valid\r\n            if (message === \"\") wasSuccess();\r\n        }\r\n\r\n    }, [sumbited]);\r\n\r\n    useEffect(() => {\r\n        setData(value)\r\n    }, [value])\r\n\r\n\r\n    const changeValue = (event) => {\r\n        setData(event.target.value);\r\n        setvalidData(\"\");\r\n        if (type == \"select\") saveData(event.target.value);\r\n    }\r\n\r\n    function validSelects(value) {\r\n        if (value === null || value === undefined) return \"עליך לבחור\";\r\n        let split = value.split(\" \");\r\n        if (split[0] !== \"select\" && value !== \"\") {\r\n            return \"\";\r\n        }\r\n        return \"עליך לבחור\";\r\n    }\r\n\r\n\r\n    return (\r\n\r\n        <div className=\"inputForm1\">\r\n            <label htmlFor={nameComp}>{nameComp}</label>\r\n            {type === \"textarea\" &&\r\n                <div className=\"wrapper\">\r\n                    <div className=\"form-group\">\r\n                        <textarea className=\"form-control rounded-0\" id={nameComp} type={type} value={data} onChange={changeValue} rows=\"4\" cols=\"50\">\r\n                        </textarea>\r\n                    </div>\r\n                </div>\r\n            }\r\n            {\r\n                type == \"select\" &&\r\n                <select className=\"select\"\r\n                    onChange={(e) => {\r\n                        changeValue(e);\r\n                    }}\r\n                >\r\n                    {arrayOption.map((item, key) => {\r\n                        if (item == value) return <option selected id={key}>{item}</option>\r\n                        return <option id={key}>{item}</option>\r\n                    })}\r\n                </select>\r\n            }\r\n            {type !== \"textarea\" && type != \"select\" &&\r\n                <input id={nameComp} type={type} value={data} onChange={changeValue} disabled={disabled || false} />}\r\n            <small >{validData}</small>\r\n        </div>\r\n\r\n    );\r\n\r\n}\r\nexport default InputForm","C:\\Users\\tamsu\\Desktop\\לימודים\\תשפא\\סמסטר ב\\סרבר\\תרגילים\\פרוייקט סופי\\client\\src\\index.js",[],["500","501"],"C:\\Users\\tamsu\\Desktop\\לימודים\\תשפא\\סמסטר ב\\סרבר\\תרגילים\\פרוייקט סופי\\client\\src\\reportWebVitals.js",[],"C:\\Users\\tamsu\\Desktop\\לימודים\\תשפא\\סמסטר ב\\סרבר\\תרגילים\\פרוייקט סופי\\client\\src\\App.js",["502","503","504"],"\nimport './App.css';\nimport React, { useState, useEffect } from 'react'\nimport { Route, Switch } from 'react-router-dom'\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport LoginSign from './components/LoginSign/LoginSign'\nimport SignUpClient from './components/SignUp/SignUpClient'\nimport Header from './components/Header/Header'\nimport Home from './components/Home/Home'\nimport { validId } from './components/InputForm/Validation'\nimport CategoryProductB from './components/CategoryProduct/CategoryProductB/CategoryProductB'\nimport Payment from './components/Payment/Payment'\nimport ShippingDetails from './components/ShippingDetails/ShippingDetails'\nimport SignAccount from './components/SignAccount/SignAccount'\nimport ProductDetails from './components/ProductDetails/ProductDetails'\nimport PersonalArea from './components/PersonalArea/PersonalArea'\nimport About from './components/About/About'\nimport UpdateUser from './components/UpdateUser/UpdateUser'\nimport NotFound from './components/NotFound/NotFound'\n\nfunction App() {\n\n  const [userNow, setUserNow] = useState({\n    id: \"\",\n    firstName: \"\",\n    lastName: \"\",\n    phone: \"\",\n    email: \"\",\n    city: \"\",\n    password: \"\",\n    bankNumber: \"\",\n    bankAccount: \"\",\n    branchNumber: \"\",\n    address: \"\",\n    buildingNumber: \"\",\n    homeNumber: \"\",\n    cityDel: \"\"\n  });\n  const [url, setUrl] = useState(window.location.pathname);\n  const [isShabbos, setIsShabbos] = useState(false);\n\n  useEffect(async () => {\n    if (localStorage.getItem(\"idUserNow\") !== null && validId(localStorage.getItem(\"idUserNow\")) === \"\") {\n      let response = await fetch('http://localhost:27017/users/getUser/' + localStorage.getItem(\"idUserNow\"), {\n        method: 'GET',\n        headers: {\n          'Content-Type': 'application/json',\n        }\n      });\n\n      if (response.status == 200) {\n        let userNow = await response.json();\n        setUserNow(userNow);\n      }\n\n    }\n    chaeckIsShabbos();\n  }, [])\n\n  function changeUser(newUser) {\n    setUserNow(newUser);\n    localStorage.setItem(\"idUserNow\", newUser.id);\n  }\n\n  function chaeckIsShabbos() {\n    let date = new Date();\n    let day = date.getDay();\n    let hour = date.getHours();\n    if ((day === 5 && hour > 19) || (day === 6 && hour < 20)) setIsShabbos(true);\n    else setIsShabbos(false);\n    return;\n  }\n\n  return (\n\n    <div className=\"App\">\n      {!isShabbos &&\n        <div>\n          <Header userNow={userNow} url={url} setUrl={\n            (url) => {\n              setUrl(url);\n            }\n          } changeUser={\n            (newUser) => { changeUser(newUser); }}\n          />\n          <Switch>\n            <Route\n              exact path='/'\n              render={(props) => (<Home {...props}\n                setUrl={(url) => { setUrl(url); }}\n              />)}\n            />\n            <Route\n              path='/closet'\n              render={(props) => (<CategoryProductB {...props}\n                category=\"ארונות\"\n                userNow={userNow}\n              />)} />\n            <Route\n              path='/table'\n              render={(props) => (<CategoryProductB {...props}\n                category=\"שולחנות\"\n                userNow={userNow}\n              />)} />\n            <Route\n              path='/bed'\n              render={(props) => (<CategoryProductB {...props}\n                category=\"מיטות\"\n                userNow={userNow}\n\n              />)} />\n\n            <Route\n              path='/sofa'\n              render={(props) => (<CategoryProductB {...props}\n                category=\"ספות\"\n                userNow={userNow}\n\n              />)} />\n            <Route\n              path='/chair'\n              render={(props) => (<CategoryProductB {...props}\n                category=\"כיסאות\"\n                userNow={userNow}\n\n              />)} />\n            <Route\n              path='/SignUpClient'\n              render={(props) => (<SignUpClient {...props}\n                changeUser={(newUser) => { changeUser(newUser); }}\n                setUrl={(url) => { setUrl(url); }}\n              />)}\n\n            />\n            <Route\n              path='/UpdateUser'\n              render={(props) => (<UpdateUser {...props}\n                changeUser={(newUser) => { changeUser(newUser); }}\n                setUrl={(url) => { setUrl(url); }}\n                userNow={userNow} />)}\n\n            />\n            <Route\n              path='/LoginSign'\n              render={(props) => (<LoginSign {...props}\n                changeUser={(newUser) => { changeUser(newUser); }}\n                setUrl={(url) => { setUrl(url); }} />)}\n            />\n            <Route\n              path='/Payment'\n              render={(props) => (<Payment {...props}\n                userNow={userNow}\n                setUrl={(url) => { setUrl(url); }}\n              />)} />\n\n            <Route\n              path='/ShippingDetails'\n              render={(props) => (<ShippingDetails {...props}\n                userNow={userNow}\n                changeUser={(newUser) => { changeUser(newUser); }}\n                setUrl={(url) => { setUrl(url); }}\n              />)} />\n\n\n\n            <Route\n              path='/ProductDetails'\n              render={(props) => (<ProductDetails {...props}\n                userNow={userNow}\n                setUrl={(url) => { setUrl(url); }}\n              />)} />\n\n            <Route\n              path='/PersonalArea'\n              render={(props) => (<PersonalArea {...props}\n                userNow={userNow}\n                setUrl={(url) => { setUrl(url); }}\n                changeUser={(newUser) => { changeUser(newUser); }}\n              />)} />\n\n\n            <Route\n              path='/updateProduct'\n              render={(props) => (<ProductDetails {...props}\n                userNow={userNow}\n                setUrl={(url) => { setUrl(url); }}\n              />)} />\n\n            <Route\n              path='/signAccount'\n              render={(props) => (<SignAccount {...props}\n                userNow={userNow}\n                setUrl={(url) => { setUrl(url); }}\n              />)} />\n\n            <Route\n              path='/about'\n              render={(props) => (<About {...props}\n              />)} />\n\n            <Route\n              render={(props) => (<NotFound {...props}\n              />)} />\n\n          </Switch>\n        </div>\n      }\n      {\n        isShabbos &&\n        <div className=\"container1\">\n          <h4>אתר זה סגור בשבת</h4>\n          <p>\n            משתמש יקר, שמירת שבת הינה ערך עליון, ועל כן האתר חסום כעת.\n          </p>\n          <p>\n            נשמח לשרת אתכם לאחר השבת.\n          </p>\n          <p>\n            <a href=\"https://www.hidabroot.org/%D7%A9%D7%91%D7%AA\" target=\"_blank\">לפרטים נוספים</a>\n          </p>\n\n\n        </div>\n      }\n    </div >\n  );\n}\n\n\nexport default App;\n","C:\\Users\\tamsu\\Desktop\\לימודים\\תשפא\\סמסטר ב\\סרבר\\תרגילים\\פרוייקט סופי\\client\\src\\components\\SignUp\\SignUpClient.js",["505","506","507"],"import React, { useState, useEffect } from 'react'\r\n\r\nimport { validId, validMail, validName, validPasswords, validPhone } from '../InputForm/Validation.js'\r\nimport { useHistory } from \"react-router-dom\";\r\nimport { saveData } from '../Shared/UsesFunction'\r\nimport InputForm from '../InputForm/InputForm'\r\nimport Message from '../Message/Message'\r\nimport './SignUpClient.css'\r\n\r\nfunction SignUpClient(props) {\r\n    let changeUser = props.changeUser;\r\n    let mode = props.mode || \"\";\r\n    let userNow = props.userNow || \"\";\r\n    let setUrl = props.setUrl;\r\n\r\n    const [showAlert, setShowAlert] = useState(false);\r\n    const [message, setMessage] = useState(\"\");\r\n    const [sumbit, setSumbit] = useState(false);\r\n\r\n    const numInputs = 8;\r\n    let numSuccess = 0;\r\n    let history = useHistory();\r\n    let clientData = {\r\n        id: \"\",\r\n        firstName: \"\",\r\n        lastName: \"\",\r\n        phone: \"\",\r\n        email: \"\",\r\n        city: \"\",\r\n        password: \"\"\r\n    };\r\n\r\n    useEffect(async () => {\r\n        if (sumbit === true) {\r\n            //returns the sumbit to false for allow pressing the button again\r\n            setSumbit(false);\r\n            //if all the inputs return ok- no errors\r\n            if (numSuccess === numInputs && mode === \"\") {\r\n                addUser();\r\n            }\r\n            else if (numSuccess === numInputs && mode === \"update\") {\r\n                updateUser();\r\n            }\r\n        }\r\n\r\n    }, [sumbit])\r\n\r\n\r\n    const handelSubmit = (event) => {\r\n\r\n        event.preventDefault();\r\n        setSumbit(true);\r\n    }\r\n\r\n\r\n    function wasSuccessAdd() {\r\n        numSuccess++;\r\n    }\r\n\r\n\r\n    //add user to the db\r\n    async function addUser() {\r\n        let response = await fetch('http://localhost:27017/users/signUp', {\r\n            method: 'POST',\r\n            headers: {\r\n                'Content-Type': 'application/json',\r\n            },\r\n            body: JSON.stringify(clientData),\r\n        });\r\n        \r\n        let response2 = await response.text();\r\n        if (response2 === \"OK\") {\r\n            changeUser(clientData);\r\n            history.push(\"/\");\r\n            setUrl(\"/\");\r\n        }\r\n        else if (response2 == \"משתמש קיים\") {\r\n            setMessage(\"משתמש קיים במערכת, עליך להתחבר\");\r\n            setShowAlert(true);\r\n        }\r\n        else{\r\n            setMessage(response2);\r\n            setShowAlert(true);\r\n        }\r\n    }\r\n\r\n    //update the user details in the db\r\n    async function updateUser() {\r\n        clientData.id = userNow.id;\r\n        clientData.bankNumber = userNow.bankNumber;\r\n        clientData.bankAccount = userNow.bankAccount;\r\n        clientData.branchNumber = userNow.branchNumber;\r\n        if (clientData.firstName === \"\") clientData.firstName = userNow.firstName;\r\n        if (clientData.lastName === \"\") clientData.lastName = userNow.lastName;\r\n        if (clientData.phone === \"\") clientData.phone = userNow.phone;\r\n        if (clientData.city === \"\") clientData.city = userNow.city;\r\n        if (clientData.password === \"\") clientData.password = userNow.password;\r\n        \r\n        let response = await fetch('http://localhost:27017/users/updateUser', {\r\n            method: 'PUT',\r\n            headers: {\r\n                'Content-Type': 'application/json',\r\n            },\r\n            body: JSON.stringify(clientData)\r\n        });\r\n       \r\n        let response2 = await response.text();\r\n        if (response2 === \"OK\") {\r\n            changeUser(clientData);\r\n            setMessage(\"עודכן בהצלחה\");\r\n            setShowAlert(true);\r\n        }\r\n        else{\r\n            setMessage(\"ארעה שגיאה: \"+response2);\r\n            setShowAlert(true);\r\n        }\r\n    }\r\n\r\n\r\n\r\n    return (\r\n        <div className=\"SignUpClient\">\r\n\r\n            <form onSubmit={handelSubmit} className=\"container1\">\r\n                <h2 className=\"header\"><b> פרטי משתמש </b></h2>\r\n                <InputForm\r\n                    nameComp=\"שם פרטי\"\r\n                    value={userNow.firstName}\r\n                    type={\"text\"}\r\n                    validationFunction={(data) => {\r\n                        let message = validName(data);\r\n                        if (message === \"\") saveData(clientData, \"firstName\", data);\r\n                        return message\r\n                    }\r\n                    }\r\n                    sumbited={sumbit}\r\n                    wasSuccess={() => { wasSuccessAdd(); }}\r\n                />\r\n                <InputForm\r\n                    nameComp=\"שם משפחה\"\r\n                    type={\"text\"}\r\n                    value={userNow.lastName}\r\n                    validationFunction={(data) => {\r\n                        let message = validName(data);\r\n                        if (message === \"\") saveData(clientData, \"lastName\", data);\r\n                        return message\r\n                    }\r\n                    }\r\n                    sumbited={sumbit}\r\n                    wasSuccess={() => { wasSuccessAdd(); }}\r\n                />\r\n                <InputForm\r\n                    nameComp=\"תעודת זהות\"\r\n                    type={\"text\"}\r\n                    value={userNow.id}\r\n                    validationFunction={(data) => {\r\n                        let message = validId(data);\r\n                        if (message === \"\") saveData(clientData, \"id\", data);\r\n                        return message\r\n                    }\r\n                    }\r\n                    disabled={mode === \"update\" ? true : false}\r\n                    sumbited={sumbit}\r\n                    wasSuccess={() => { wasSuccessAdd(); }}\r\n                />\r\n                <InputForm\r\n                    nameComp=\"פלאפון\"\r\n                    type={\"text\"}\r\n                    value={userNow.phone}\r\n                    validationFunction={(data) => {\r\n                        let message = validPhone(data);\r\n                        if (message === \"\") saveData(clientData, \"phone\", data);\r\n                        return message\r\n                    }\r\n                    }\r\n                    sumbited={sumbit}\r\n                    wasSuccess={() => { wasSuccessAdd(); }}\r\n                />\r\n                <InputForm\r\n                    nameComp=\"כתובת אימייל\"\r\n                    type={\"text\"}\r\n                    value={userNow.email}\r\n                    validationFunction={(data) => {\r\n                        let message = validMail(data);\r\n                        if (message === \"\") saveData(clientData, \"email\", data);\r\n                        return message\r\n                    }\r\n                    }\r\n                    sumbited={sumbit}\r\n                    wasSuccess={() => { wasSuccessAdd(); }}\r\n                />\r\n                <InputForm\r\n                    nameComp=\"עיר\"\r\n                    type={\"text\"}\r\n                    value={userNow.city}\r\n                    validationFunction={(data) => {\r\n                        let message = validName(data);\r\n                        if (message === \"\") saveData(clientData, \"city\", data);\r\n                        return message\r\n                    }\r\n                    }\r\n                    sumbited={sumbit}\r\n                    wasSuccess={() => { wasSuccessAdd(); }}\r\n                />\r\n                <InputForm\r\n                    nameComp=\"סיסמה\"\r\n                    type={\"password\"}\r\n                    value={userNow.password}\r\n                    validationFunction={(data) => { return validPasswords(data, \"Password\"); }}\r\n                    sumbited={sumbit}\r\n                    wasSuccess={() => { wasSuccessAdd(); }}\r\n                />\r\n                <InputForm\r\n                    nameComp=\"ודא סיסמה\"\r\n                    type={\"password\"}\r\n                    validationFunction={(data) => {\r\n                        let message = validPasswords(data, \"Verify Password\");\r\n                        if (message === \"\") saveData(clientData, \"password\", data);\r\n                        return message\r\n                    }\r\n                    }\r\n                    sumbited={sumbit}\r\n                    wasSuccess={() => { wasSuccessAdd(); }}\r\n                />\r\n\r\n                <button type=\"submit\" className=\"btn1\">{mode === \"\" ? \"הרשם\" : \"עדכן\"}</button>\r\n            </form>\r\n\r\n            {\r\n                showAlert && <Message\r\n                    showAlert={showAlert}\r\n                    message={message}\r\n                    onClose={() => {\r\n                        setShowAlert(false);\r\n                        if (mode === \"\") {\r\n                            history.push(\"/LoginSign\");\r\n                            setUrl(\"/LoginSign\");\r\n                        }\r\n                    }\r\n                    }\r\n                    type={mode === \"\" ? \"\" : \"success\"}\r\n                />\r\n            }\r\n        </div>\r\n\r\n    );\r\n\r\n}\r\nexport default SignUpClient\r\n","C:\\Users\\tamsu\\Desktop\\לימודים\\תשפא\\סמסטר ב\\סרבר\\תרגילים\\פרוייקט סופי\\client\\src\\components\\Home\\Home.js",[],"C:\\Users\\tamsu\\Desktop\\לימודים\\תשפא\\סמסטר ב\\סרבר\\תרגילים\\פרוייקט סופי\\client\\src\\components\\PersonalArea\\PersonalArea.js",[],"C:\\Users\\tamsu\\Desktop\\לימודים\\תשפא\\סמסטר ב\\סרבר\\תרגילים\\פרוייקט סופי\\client\\src\\components\\Header\\Header.js",["508","509"],"C:\\Users\\tamsu\\Desktop\\לימודים\\תשפא\\סמסטר ב\\סרבר\\תרגילים\\פרוייקט סופי\\client\\src\\components\\LoginSign\\LoginSign.js",[],"C:\\Users\\tamsu\\Desktop\\לימודים\\תשפא\\סמסטר ב\\סרבר\\תרגילים\\פרוייקט סופי\\client\\src\\components\\SignAccount\\SignAccount.js",["510","511"],"import React, { useState, useEffect } from 'react'\r\nimport { validBankBranch, validAccount } from '../InputForm/Validation.js'\r\nimport { useHistory } from \"react-router-dom\";\r\nimport InputForm from '../InputForm/InputForm'\r\nimport { saveData } from '../Shared/UsesFunction'\r\nimport './SignAccount.css'\r\nimport Message from '../Message/Message'\r\n\r\nfunction SignAccount(props) {\r\n    let userNow = props.userNow;\r\n    let mode = props.mode || \"\";\r\n    let setUrl = props.setUrl;\r\n\r\n    const [sumbit, setSumbit] = useState(false);\r\n    const [showAlert, setShowAlert] = useState(false);\r\n    const [message, setMessage] = useState(\"\");\r\n\r\n    let accountData = { bankNumber: \"\", branchNumber: \"\", bankAccount: \"\" };\r\n    let numSuccess = 0;\r\n    const numInputs = 3;\r\n    let history = useHistory();\r\n\r\n    useEffect(async () => {\r\n        if (sumbit === true) {\r\n            //returns the sumbit to false for allow pressing the button again\r\n            setSumbit(false);\r\n            //if all the inputs return ok- no errors\r\n            if (numSuccess === numInputs) {\r\n                await apdudeAccount();\r\n            }\r\n        }\r\n\r\n    }, [sumbit])\r\n\r\n    const handelSubmit = (event) => {\r\n        event.preventDefault();\r\n        setSumbit(true);\r\n    }\r\n\r\n\r\n    function wasSuccessAdd() {\r\n        numSuccess++;\r\n    }\r\n\r\n    //update the account details in the user details in db\r\n    async function apdudeAccount() {\r\n        accountData = { ...accountData, id: userNow.id };\r\n        let response = await fetch('http://localhost:27017/users/updateAccount', {\r\n            method: 'PUT',\r\n            headers: {\r\n                'Content-Type': 'application/json',\r\n            },\r\n            body: JSON.stringify(accountData),\r\n        });\r\n        let response2 = await response.text();\r\n        if (response2 === \"OK\") {\r\n            if (mode === \"\") {\r\n                setMessage(\"החשבון נשמר בהצלחה\");\r\n            }\r\n            else {\r\n                setMessage(\"החשבון עודכן בהצלחה\");\r\n            }\r\n            setShowAlert(true);\r\n        }\r\n        else {\r\n            setMessage(response2);\r\n            setShowAlert(true);\r\n        }\r\n\r\n    }\r\n\r\n\r\n\r\n\r\n    return (\r\n        <div className=\"SignAccount\">\r\n\r\n\r\n            {userNow.id !== \"\" && <form onSubmit={handelSubmit} className=\"container1\">\r\n                <h2 className=\"centered\"><b> פרטי בנק</b></h2>\r\n                <p className=\"centered\">כדי להוסיף מוצר עליך לשמור פרטי חשבון בנק, לצורך קבלת הכסף ממכירת הפריטים</p>\r\n\r\n                <InputForm\r\n                    nameComp=\"מספר בנק\"\r\n                    type={\"text\"}\r\n                    value={userNow.bankNumber}\r\n                    validationFunction={(data) => {\r\n                        let message = validBankBranch(data);\r\n                        if (message === \"\") saveData(accountData, \"bankNumber\", data);\r\n                        return message\r\n                    }\r\n                    }\r\n                    sumbited={sumbit}\r\n                    wasSuccess={() => { wasSuccessAdd(); }}\r\n                />\r\n                <InputForm\r\n                    nameComp=\"מספר סניף\"\r\n                    type={\"text\"}\r\n                    value={userNow.branchNumber}\r\n                    validationFunction={(data) => {\r\n                        let message = validBankBranch(data);\r\n                        if (message === \"\") saveData(accountData, \"branchNumber\", data);\r\n                        return message\r\n                    }\r\n                    }\r\n                    sumbited={sumbit}\r\n                    wasSuccess={() => { wasSuccessAdd(); }}\r\n                />\r\n                <InputForm\r\n                    nameComp=\"מספר חשבון בנק\"\r\n                    type={\"text\"}\r\n                    value={userNow.bankAccount}\r\n                    validationFunction={(data) => {\r\n                        let message = validAccount(data);\r\n                        if (message === \"\") saveData(accountData, \"bankAccount\", data);\r\n                        return message\r\n                    }\r\n                    }\r\n                    sumbited={sumbit}\r\n                    wasSuccess={() => { wasSuccessAdd(); }}\r\n                />\r\n\r\n                <button type=\"submit\" className=\"btn1\">{mode === \"\" ? \"שמור\" : \"עדכן\"}</button>\r\n            </form>}\r\n            {userNow.id === \"\" &&\r\n                <div className=\"container1\">\r\n                    <h5>עליך להיות מחובר כדי להוסיף פרטי חשבון</h5>\r\n                </div>\r\n            }\r\n            {\r\n                showAlert && <Message\r\n                    showAlert={showAlert}\r\n                    message={message}\r\n                    onClose={() => {\r\n                        setShowAlert(false);\r\n                        if (mode === \"\") {\r\n                            history.push(\"/ProductDetails\");\r\n                            setUrl(\"/ProductDetails\");\r\n                        }\r\n                    }\r\n                    }\r\n                    type=\"success\" />\r\n            }\r\n\r\n        </div>\r\n    );\r\n\r\n}\r\nexport default SignAccount\r\n","C:\\Users\\tamsu\\Desktop\\לימודים\\תשפא\\סמסטר ב\\סרבר\\תרגילים\\פרוייקט סופי\\client\\src\\components\\InputForm\\Validation.js",[],"C:\\Users\\tamsu\\Desktop\\לימודים\\תשפא\\סמסטר ב\\סרבר\\תרגילים\\פרוייקט סופי\\client\\src\\components\\Payment\\Payment.js",["512","513","514","515"],"import React, { useState, useEffect } from 'react'\r\nimport { validId, validCreditCard, validYear, validMonth, valid3Digit } from '../InputForm/Validation.js'\r\nimport InputForm from '../InputForm/InputForm'\r\nimport { useHistory } from \"react-router-dom\";\r\nimport Paypal from \"../Paypal/Paypal\";\r\nimport { saveData } from '../Shared/UsesFunction'\r\nimport './Payment.css'\r\nimport Message from '../Message/Message'\r\n\r\nfunction Payment(props) {\r\n    let setUrl = props.setUrl;\r\n    const userNow = props.userNow;\r\n    const [sumbit, setSumbit] = useState(false);\r\n    const [creditDetail, setCreditDetail] = useState({ id: userNow.id, idCredit: \"\", number: \"\", year: \"\", month: \"\", digit: \"\" });\r\n    const [showAlert, setShowAlert] = useState(false);\r\n    const [message, setMessage] = useState(\"\");\r\n    const [checked, setChecked] = useState(false);\r\n    const [total, setTotal] = useState(0);\r\n\r\n    let history = useHistory();\r\n    let creditDetailTemp = { id: userNow.id, idCredit: \"\", number: \"\", year: \"\", month: \"\", digit: \"\" };\r\n    let numSuccess = 0;\r\n    const numInputs = 5;\r\n\r\n\r\n\r\n    useEffect(async() => {\r\n        await checkHaveCreditSaved();\r\n        await sumOrders();\r\n    }, [userNow])\r\n\r\n    useEffect(async () => {\r\n        if (sumbit === true) {\r\n            setSumbit(false);\r\n            if (numSuccess === numInputs || (creditDetail.idCredit !== \"\" && numSuccess === 1)) {\r\n               //save credit details\r\n                if (creditDetail.idCredit===\"\" || checked) {\r\n                    let response = await fetch('http://localhost:27017/users/changeCreditDetail', {\r\n                        method: 'PUT',\r\n                        headers: {\r\n                            'Content-Type': 'application/json',\r\n                        },\r\n                        body: JSON.stringify(creditDetailTemp)\r\n                    });\r\n\r\n                    if (response.status !== 200) {\r\n                        let response2=await response.text();\r\n                        setMessage(\"ארעה שגיאה בעת שמירת הנתונים: \"+response2);\r\n                        setShowAlert(true);\r\n                        return;\r\n                    }  \r\n                }\r\n\r\n                await makePay();\r\n            }\r\n        }\r\n    }, [sumbit])\r\n\r\n\r\n    const handelSubmit = (event) => {\r\n        event.preventDefault();\r\n        setSumbit(true);\r\n    }\r\n\r\n\r\n    function wasSuccessAdd() {\r\n        numSuccess++;\r\n    }\r\n\r\n    async function sumOrders() {\r\n        //get the total price of the products in the cart\r\n        let response = await fetch('http://localhost:27017/orders/getSumCart/' + userNow.id, {\r\n            method: 'GET',\r\n            headers: {\r\n                'Content-Type': 'application/json',\r\n            }\r\n        });\r\n        let response2 = await response.json();\r\n\r\n        if (response.status === 200) {\r\n            setTotal(Number(response2.res));\r\n        }\r\n        else{\r\n            console.log(response2.err);\r\n        }\r\n    }\r\n\r\n\r\n\r\n    //Checks whether payment details are stored in the system to upload them to the user\r\n    const checkHaveCreditSaved = async () => {\r\n        let response = await fetch('http://localhost:27017/users/getCreditDetails/' + userNow.id, {\r\n            method: 'GET',\r\n            headers: {\r\n                'Content-Type': 'application/json',\r\n            }\r\n        });\r\n\r\n        if (response.status === 200) {\r\n            let response2 = await response.json();\r\n            setCreditDetail(response2);\r\n        }\r\n        else return false;\r\n    }\r\n\r\n    const makePay = async () => {\r\n        \r\n        let response = await fetch('http://localhost:27017/orders/payment', {\r\n            method: 'PUT',\r\n            headers: {\r\n                'Content-Type': 'application/json',\r\n            },\r\n            body: JSON.stringify({idClient: userNow.id})\r\n        });\r\n\r\n        if (response.status === 200) {\r\n            setMessage(\"התשלום התקבל בהצלחה\");\r\n            setShowAlert(true);\r\n        }\r\n        else {\r\n            let response2 = response.text();\r\n            setMessage(\"ארעה שגיאה: \" + response2);\r\n            setShowAlert(true);\r\n        }\r\n\r\n    }\r\n\r\n    return (\r\n        <div className=\"payment\">\r\n\r\n            {userNow.id !== \"\" &&\r\n                <div className=\"container1\">\r\n                    <h3 className=\"header-pay\"><b> תשלום </b></h3>\r\n                    <div className=\"paypal-button\">\r\n                        <Paypal history={history} total={total} makePay={() => { makePay(); }} />\r\n                    </div>\r\n                    <h4 className=\"or\">-או-</h4>\r\n                    {\r\n                        creditDetail.idCredit !== \"\" && !checked &&\r\n                        <form onSubmit={handelSubmit}>\r\n\r\n                            <label>מספר אשראי</label>\r\n                            <input type=\"text\" value={creditDetail.number} disabled className=\"numCredit\"></input>\r\n                            <InputForm\r\n                                nameComp=\"תעודת זהות בעל הכרטיס\"\r\n                                type={\"text\"}\r\n                                validationFunction={(data) => {\r\n                                    let message = validId(data);\r\n                                    if (message === \"\" && data !== creditDetail.idCredit) message = \"תעודת הזהות אינה מתאימה לכרטיס\";\r\n                                    return message\r\n                                }\r\n                                }\r\n                                sumbited={sumbit}\r\n                                wasSuccess={() => { wasSuccessAdd(); }}\r\n                            />\r\n                            <h5 className=\"pay\">לתשלום: &#8362;{total} </h5>\r\n                            <small onClick={() => { setChecked(true); }} className=\"change-pay\">לשינוי אמצעי תשלום</small>\r\n                            <button type=\"submit\" className=\"btn1\">אישור</button>\r\n                        </form>\r\n                    }\r\n\r\n\r\n                    {(creditDetail.idCredit === \"\" || checked) &&\r\n\r\n                        <form onSubmit={handelSubmit}>\r\n\r\n\r\n                            <InputForm\r\n                                nameComp=\"תעודת זהות בעל הכרטיס\"\r\n                                type={\"text\"}\r\n                                validationFunction={(data) => {\r\n                                    let message = validId(data);\r\n                                    if (message === \"\") saveData(creditDetailTemp, \"idCredit\", data);\r\n                                    return message\r\n                                }\r\n                                }\r\n                                sumbited={sumbit}\r\n                                wasSuccess={() => { wasSuccessAdd(); }}\r\n                            />\r\n                            <InputForm\r\n                                nameComp=\"מספר אשראי\"\r\n                                type={\"text\"}\r\n                                validationFunction={(data) => {\r\n                                    let message = validCreditCard(data);\r\n                                    if (message === \"\") saveData(creditDetailTemp, \"number\", data);\r\n                                    return message\r\n                                }\r\n                                }\r\n                                sumbited={sumbit}\r\n                                wasSuccess={() => { wasSuccessAdd(); }}\r\n                            />\r\n                            <InputForm\r\n                                nameComp=\"שנה\"\r\n                                type={\"text\"}\r\n                                validationFunction={(data) => {\r\n                                    let message = validYear(data);\r\n                                    if (message === \"\") saveData(creditDetailTemp, \"year\", data);\r\n                                    return message\r\n                                }\r\n                                }\r\n                                sumbited={sumbit}\r\n                                wasSuccess={() => { wasSuccessAdd(); }}\r\n                            />\r\n\r\n                            <InputForm\r\n                                nameComp=\"חודש\"\r\n                                type={\"text\"}\r\n                                validationFunction={(data) => {\r\n                                    let message = validMonth(data);\r\n                                    if (message === \"\") saveData(creditDetailTemp, \"month\", data);\r\n                                    return message\r\n                                }\r\n                                }\r\n                                sumbited={sumbit}\r\n                                wasSuccess={() => { wasSuccessAdd(); }}\r\n                            />\r\n\r\n                            <InputForm\r\n                                nameComp=\"3 ספרות בגב הכרטיס\"\r\n                                type={\"text\"}\r\n                                validationFunction={(data) => {\r\n                                    let message = valid3Digit(data);\r\n                                    if (message === \"\") saveData(creditDetailTemp, \"digit\", data);\r\n                                    return message\r\n                                }\r\n                                }\r\n                                sumbited={sumbit}\r\n                                wasSuccess={() => { wasSuccessAdd(); }}\r\n                            />\r\n                            <h5 className=\"pay\">לתשלום: &#8362;{total} </h5>\r\n                            <button type=\"submit\" className=\"btn1\">בצע תשלום</button>\r\n                        </form>\r\n                    }\r\n\r\n                </div>\r\n            }\r\n            {\r\n                showAlert && <Message\r\n                    showAlert={showAlert}\r\n                    message={message}\r\n                    onClose={() => {\r\n                        setShowAlert(false);\r\n                        history.push(\"/personalArea\");\r\n                        setUrl(\"/personalArea\");\r\n                    }\r\n                    }\r\n                    type=\"success\" />\r\n            }\r\n            {userNow.id === \"\" &&\r\n                <div className=\"container1\">\r\n                    <h5>עליך להיות מחובר כדי לשלם</h5>\r\n                </div>\r\n            }\r\n        </div>\r\n    );\r\n\r\n}\r\nexport default Payment","C:\\Users\\tamsu\\Desktop\\לימודים\\תשפא\\סמסטר ב\\סרבר\\תרגילים\\פרוייקט סופי\\client\\src\\components\\About\\About.js",[],"C:\\Users\\tamsu\\Desktop\\לימודים\\תשפא\\סמסטר ב\\סרבר\\תרגילים\\פרוייקט סופי\\client\\src\\components\\NotFound\\NotFound.js",[],"C:\\Users\\tamsu\\Desktop\\לימודים\\תשפא\\סמסטר ב\\סרבר\\תרגילים\\פרוייקט סופי\\client\\src\\components\\UpdateUser\\UpdateUser.js",[],"C:\\Users\\tamsu\\Desktop\\לימודים\\תשפא\\סמסטר ב\\סרבר\\תרגילים\\פרוייקט סופי\\client\\src\\components\\ShippingDetails\\ShippingDetails.js",["516","517","518","519","520","521","522"],"import React, { useState, useEffect } from 'react'\r\nimport { validNum, validName } from '../InputForm/Validation.js'\r\nimport { useHistory } from \"react-router-dom\";\r\nimport InputForm from '../InputForm/InputForm'\r\nimport { saveData } from '../Shared/UsesFunction'\r\nimport Message from '../Message/Message.js';\r\nimport './ShippingDetails.css'\r\n\r\n\r\nexport default function ShippingDetails(props) {\r\n    let userNow = props.userNow;\r\n    let setUrl = props.setUrl;\r\n    const [checked, setChecked] = useState(false);\r\n    const [sumbit, setSumbit] = useState(false);\r\n    const [showAlert, setShowAlert] = useState(false);\r\n    const [message, setMessage] = useState(\"\");\r\n\r\n    let numSuccess = 0;\r\n    const numInputs = 4;\r\n    let history = useHistory();\r\n    const [shippingDetails, setShippingDetails] = useState({ city: \"\", address: \"\", buildingNumber: \"\", homeNumber: \"\" })\r\n    let shippingDetailsTemp = { city: \"\", address: \"\", buildingNumber: \"\", homeNumber: \"\" };\r\n\r\n    const handelSubmit = (event) => {\r\n\r\n        event.preventDefault();\r\n        setSumbit(true);\r\n    }\r\n\r\n    function wasSuccessAdd() {\r\n        numSuccess++;\r\n    }\r\n\r\n    useEffect(async () => {\r\n        //get the user ShippingDetails\r\n        if (userNow.id != \"\") {\r\n            let response = await fetch('http://localhost:27017/users/getShippingDetails/' + userNow.id, {\r\n                method: 'GET',\r\n                headers: {\r\n                    'Content-Type': 'application/json',\r\n                }\r\n            });\r\n\r\n            if (response.status == 200) {\r\n                let response2 = await response.json();\r\n                setShippingDetails(response2);\r\n            }\r\n        }\r\n    }, [userNow])\r\n\r\n    //update the orders with the current Shipping details\r\n    const updateOrders = async () => {\r\n        let response = await fetch('http://localhost:27017/orders/addShippingDetails', {\r\n            method: 'PUT',\r\n            headers: {\r\n                'Content-Type': 'application/json',\r\n            }\r\n            , body: JSON.stringify({\r\n                idClient: userNow.id, ...shippingDetailsTemp\r\n            })\r\n        });\r\n\r\n        if (response.status == 200) {\r\n            return true;\r\n\r\n        }\r\n        else {\r\n            let response2 = await response.json();\r\n            setMessage(response2.err);\r\n            setShowAlert(true);\r\n            return false;\r\n        }\r\n    }\r\n\r\n\r\n    //update the orders with the current Shipping details\r\n    const updateUser = async () => {\r\n        let shippingDetails2 = {};\r\n        shippingDetails2.cityDel = shippingDetailsTemp.city;\r\n        shippingDetails2.address = shippingDetailsTemp.address;\r\n        shippingDetails2.buildingNumber = shippingDetailsTemp.buildingNumber;\r\n        shippingDetails2.homeNumber = shippingDetailsTemp.homeNumber;\r\n\r\n        let response = await fetch('http://localhost:27017/users/updateAddress', {\r\n            method: 'PUT',\r\n            headers: {\r\n                'Content-Type': 'application/json',\r\n            }\r\n            , body: JSON.stringify({\r\n                id: userNow.id, ...shippingDetails2\r\n            })\r\n        });\r\n\r\n        if (response.status == 200) {\r\n            let response2 = await response.json();\r\n            console.log(response2);\r\n            props.changeUser(response2);\r\n            return true;\r\n\r\n        }\r\n        else {\r\n            let response2 = await response.json();\r\n            setMessage(response2.err);\r\n            setShowAlert(true);\r\n            return false;\r\n        }\r\n    }\r\n\r\n    useEffect(async () => {\r\n        if (sumbit === true) {\r\n            //returns the sumbit to false for allow pressing the button again\r\n            setSumbit(false);\r\n            //if all the inputs return ok- no errors\r\n            if (numSuccess === numInputs) {\r\n                shippingDetailsTemp.city = shippingDetailsTemp.city || shippingDetails.city;\r\n                shippingDetailsTemp.address = shippingDetailsTemp.address || shippingDetails.address;\r\n                shippingDetailsTemp.buildingNumber = shippingDetailsTemp.buildingNumber || shippingDetails.buildingNumber;\r\n                shippingDetailsTemp.homeNumber = shippingDetailsTemp.homeNumber || shippingDetails.homeNumber;\r\n                let success = await updateOrders();\r\n                let success2;\r\n                //if the user apply to save the data to the other times\r\n                if (checked && success) {\r\n                    success2 = await updateUser();\r\n                }\r\n                if (success && (!checked || success2)) {\r\n                    history.push(\"/Payment\");\r\n                    setUrl(\"/Payment\");\r\n                }\r\n            }\r\n        }\r\n\r\n    }, [sumbit])\r\n\r\n\r\n    return (\r\n        <div className=\"ShippingDetails\">\r\n            {userNow.id !== \"\" &&\r\n                <form onSubmit={handelSubmit}>\r\n                    <h3 className=\"header\"><b> פרטי משלוח </b></h3>\r\n                    <div className=\"form\">\r\n                        <InputForm\r\n                            nameComp=\"עיר\"\r\n                            type={\"text\"}\r\n                            value={shippingDetails.city}\r\n                            validationFunction={(data) => {\r\n                                let message = validName(data);\r\n                                if (message === \"\") saveData(shippingDetailsTemp, \"city\", data);\r\n                                return message\r\n                            }\r\n                            }\r\n                            sumbited={sumbit}\r\n                            wasSuccess={() => { wasSuccessAdd(); }}\r\n                        />\r\n                        <InputForm\r\n                            nameComp=\"רחוב\"\r\n                            type={\"text\"}\r\n                            value={shippingDetails.address}\r\n                            validationFunction={(data) => {\r\n                                let message = validName(data);\r\n                                if (message === \"\") saveData(shippingDetailsTemp, \"address\", data);\r\n                                return message\r\n                            }\r\n                            }\r\n                            sumbited={sumbit}\r\n                            wasSuccess={() => { wasSuccessAdd(); }}\r\n                        />\r\n                        <InputForm\r\n                            nameComp=\"מספר בניין\"\r\n                            type={\"text\"}\r\n                            value={shippingDetails.buildingNumber}\r\n                            validationFunction={(data) => {\r\n                                let message = validNum(data, [3, \"upto\"]);\r\n                                if (message === \"\") saveData(shippingDetailsTemp, \"buildingNumber\", data);\r\n                                return message\r\n                            }\r\n                            }\r\n                            sumbited={sumbit}\r\n                            wasSuccess={() => { wasSuccessAdd(); }}\r\n                        />\r\n                        <InputForm\r\n                            nameComp=\"מספר בית\"\r\n                            type={\"text\"}\r\n                            value={shippingDetails.homeNumber}\r\n                            validationFunction={(data) => {\r\n                                let message = validNum(data, [3, \"upto\"]);\r\n                                if (message === \"\") saveData(shippingDetailsTemp, \"homeNumber\", data);\r\n                                return message\r\n                            }\r\n                            }\r\n                            sumbited={sumbit}\r\n                            wasSuccess={() => { wasSuccessAdd(); }}\r\n                        />\r\n\r\n                        <label className=\"container-check\">האם לשמור את פרטי המשלוח לפעמים הבאות?\r\n                            <input\r\n                                type=\"checkbox\"\r\n                                onChange={() => { setChecked(true); }}\r\n                            />\r\n                            <span className=\"checkmark\"></span>\r\n                        </label>\r\n                        <button type=\"submit\" className=\"btn1\"><span>המשך</span></button>\r\n\r\n                    </div>\r\n                </form>\r\n            }\r\n            {userNow.id === \"\" &&\r\n\r\n                <h5>עליך להיות מחובר כדי לבצע הזמנה</h5>\r\n\r\n            }\r\n            {\r\n                showAlert && <Message\r\n                    showAlert={showAlert}\r\n                    message={message}\r\n                    onClose={() => {\r\n                        setShowAlert(false);\r\n                    }\r\n                    } />\r\n            }\r\n\r\n        </div >\r\n    );\r\n\r\n}\r\n\r\n","C:\\Users\\tamsu\\Desktop\\לימודים\\תשפא\\סמסטר ב\\סרבר\\תרגילים\\פרוייקט סופי\\client\\src\\components\\ProductDetails\\ProductDetails.js",["523","524","525","526","527","528","529","530","531","532","533","534","535","536"],"import React, { useState, useEffect } from 'react'\r\nimport { validNum } from '../InputForm/Validation.js'\r\nimport { useHistory } from \"react-router-dom\";\r\nimport InputForm from '../InputForm/InputForm'\r\nimport './ProductDetails.css'\r\nimport Message from '../Message/Message'\r\n\r\nfunction ProductDetails(props) {\r\n\r\n    let userNow = props.userNow;\r\n    let idProduct = props.location.id || \"\";\r\n\r\n    const [sumbit, setSumbit] = useState(false);\r\n    const numInputs = 8;\r\n    const [productData, setProductData] = useState({\r\n        _id: \"\",\r\n        idSeller: userNow.id,\r\n        name: \"\",\r\n        description: \"\",\r\n        category: \"\",\r\n        mainImgSrc: \"\",\r\n        type: \"\",\r\n        color: \"\",\r\n        price: 0,\r\n        quality: \"\",\r\n        status: \"true\"\r\n    });\r\n    const [showAlert, setShowAlert] = useState(false);\r\n    const [message, setMessage] = useState(\"\");\r\n\r\n    let categoryOption = [\"בחר קטגוריה\", \"ארונות\", \"שולחנות\", \"מיטות\", \"ספות\", \"כיסאות\"];\r\n    const [category, setCategory] = useState(productData.category || \"\");\r\n\r\n    const [typeOption, setTypeOption] = useState(getTypeOption());\r\n    const [type, setType] = useState(productData.type || \"\");\r\n\r\n    let colorsOption = [\"בחר צבע\", \"לבן\", \"שחור\", \"אפור\", \"אדום\", \"כחול\", \"סגול\", \"ורוד\", \"עץ\", \"חום\", \"ירוק\", \"צהוב\", \"כתום\", \"תכלת\", \"צבעוני\"];\r\n    const [color, setColor] = useState(productData.color || \"\");\r\n\r\n    let qualityOption = [\"בחר מצב מוצר\", \"חדש\", \"דרוש תיקון\", \"מצב טוב\", \"משומש\", \"כמו חדש\"];\r\n    const [quality, setQuality] = useState(productData.quality || \"\");\r\n\r\n    let setUrl = props.setUrl;\r\n    let history = useHistory();\r\n    let numSuccess = 0;\r\n    let tempProductData = {\r\n        _id: \"\",\r\n        idSeller: userNow.id,\r\n        name: \"\",\r\n        description: \"\",\r\n        category: \"\",\r\n        mainImgSrc: \"\",\r\n        type: \"\",\r\n        color: \"\",\r\n        price: 0,\r\n        quality: \"\"\r\n    }\r\n\r\n\r\n    useEffect(() => {\r\n        setColor(productData.color);\r\n        setType(productData.type);\r\n        setCategory(productData.category);\r\n        setQuality(productData.quality);\r\n    }, [productData.category, productData.color, productData.type, productData.quality])\r\n\r\n    //load data\r\n    useEffect(async () => {\r\n        if (idProduct !== null && idProduct !== \"\") {\r\n            let response = await fetch('http://localhost:27017/products/getProduct', {\r\n                method: 'POST',\r\n                headers: {\r\n                    'Content-Type': 'application/json',\r\n                },\r\n                body:JSON.stringify({id:idProduct,projectionProduct:\r\n                    {name:1,price:1,description:1,category:1,mainImgSrc:1,type:1,color:1,quality:1}})\r\n            });\r\n\r\n            let response2 = await response.json();\r\n            if (response.status === 200) {\r\n                setProductData(response2.product);\r\n            }\r\n\r\n            else {\r\n                setMessage(\"ארעה שגיאה: \" + response2.err);\r\n                setShowAlert(true);\r\n            }\r\n        }\r\n    }, [])\r\n\r\n    //load the type option according the category choosed\r\n    useEffect(() => {\r\n        setTypeOption(getTypeOption());\r\n    }, [category])\r\n\r\n    //check the validity of the data and store it in the db\r\n    useEffect(async () => {\r\n        if (sumbit === true) {\r\n\r\n            //returns the sumbit to false for allow pressing the button again\r\n            setSumbit(false);\r\n            if (numSuccess === numInputs && idProduct == \"\") {\r\n                addProduct();\r\n            }\r\n\r\n            if (numSuccess === numInputs && idProduct !== \"\") {\r\n                updateProduct();\r\n            }\r\n        }\r\n\r\n    }, [sumbit])\r\n\r\n\r\n    function getTypeOption() {\r\n        let types = [];\r\n        switch (category) {\r\n            case \"\": case undefined: case \"בחר קטגוריה\":\r\n                types = [\"בחר תחילה קטגוריה\"];\r\n                break;\r\n            case \"שולחנות\":\r\n                types = [\"בחר סוג\", \"שולחן כתיבה\", \"שולחן אוכל\", \"שולחן קפה\"];\r\n                break;\r\n            case \"ארונות\":\r\n                types = [\"בחר סוג\", \"סיפרייה\", \"מזנון\", \"ארון הזזה\", \"ארון מטבח\", \"ארון בגדים\"];\r\n                break;\r\n            case \"מיטות\":\r\n                types = [\"בחר סוג\", \"ספפה\", \"מיטה נפתחת\", \"מיטת תינוק\", \"מיטת קומותיים\", \"מיטה זוגית\", \"מיטת ילדים\", \"מיטת יחיד\"];\r\n                break;\r\n            case \"ספות\":\r\n                types = [\"בחר סוג\", \"ספפה\", \"כורסה\", \"ספה פינתית\", \"ספה 2+3\", \"ספה 3 מושבים\", \"ספה לילדים\", \"ספה דו מושבית\"];\r\n                break;\r\n            case \"כיסאות\":\r\n                types = [\"בחר סוג\", \"כסאות אוכל\", \"כסאות בר\", \"כסא משרדי\", \"כסא ילדים\", \"כסא חצר\", \"כסאות ים\", \"כסא לסלון\", \"כסא נדנדה\"];\r\n                break;\r\n        }\r\n        return types;\r\n    }\r\n\r\n\r\n    const handelSubmit = (event) => {\r\n        event.preventDefault();\r\n        setSumbit(true);\r\n    }\r\n\r\n    function saveData(inputName, data) {\r\n        switch (inputName) {\r\n            case \"category\":\r\n                setCategory(data);\r\n                break;\r\n            case \"type\":\r\n                setType(data);\r\n                break;\r\n            case \"quality\":\r\n                setQuality(data);\r\n                break;\r\n            case \"color\":\r\n                setColor(data);\r\n                break;\r\n            default:\r\n                tempProductData[inputName] = data;\r\n                break;\r\n        }\r\n    }\r\n\r\n    function wasSuccessAdd() {\r\n        numSuccess++;\r\n    }\r\n\r\n    const addProduct = async () => {\r\n        //add new product\r\n        tempProductData.category = category;\r\n        tempProductData.color = color;\r\n        tempProductData.type = type;\r\n        tempProductData.quality = quality;\r\n\r\n        let response = await fetch('http://localhost:27017/products/addProduct', {\r\n            method: 'POST',\r\n            headers: {\r\n                'Content-Type': 'application/json',\r\n            },\r\n            body: JSON.stringify(tempProductData)\r\n        });\r\n\r\n        let response2 = await response.text();\r\n        if (response2 === \"OK\") {\r\n            setMessage(\"המוצר נוסף בהצלחה\");\r\n            setShowAlert(true);\r\n        }\r\n        else {\r\n            setMessage(\"ארעה שגיאה: \" + response2);\r\n            setShowAlert(true);\r\n        }\r\n\r\n    }\r\n\r\n    function updateTempData() {\r\n        tempProductData.category = category;\r\n        tempProductData.type = type;\r\n        tempProductData.color = color;\r\n        tempProductData.quality = quality;\r\n        if (tempProductData.name === \"\") tempProductData.name = productData.name;\r\n        if (tempProductData.description === \"\") tempProductData.description = productData.description;\r\n        if (tempProductData.price === \"\") tempProductData.price = Number(productData.price);\r\n        if (tempProductData.mainImgSrc === \"\") tempProductData.mainImgSrc = productData.mainImgSrc;\r\n        tempProductData._id = productData._id;\r\n    }\r\n\r\n    const updateProduct = async () => {\r\n        //update product\r\n        updateTempData();\r\n        let response = await fetch('http://localhost:27017/products/updateProduct', {\r\n            method: 'PUT',\r\n            headers: {\r\n                'Content-Type': 'application/json',\r\n            },\r\n            body: JSON.stringify(tempProductData)\r\n        });\r\n\r\n        let response2 = await response.text();\r\n        if (response2 === \"OK\") {\r\n            setMessage(\"המוצר עודכן בהצלחה\");\r\n            setShowAlert(true);\r\n        }\r\n        else {\r\n            setMessage(\"ארעה שגיאה: \" + response2);\r\n            setShowAlert(true);\r\n        }\r\n    }\r\n\r\n    const deleteProduct = async () => {\r\n    \r\n        tempProductData = productData;\r\n        let response = await fetch('http://localhost:27017/products/deleteProduct', {\r\n            method: 'PUT',\r\n            headers: {\r\n                'Content-Type': 'application/json',\r\n            },\r\n            body: JSON.stringify({ id: tempProductData._id })\r\n        });\r\n\r\n        let response2 = await response.text();\r\n        if (response2 === \"OK\") {\r\n            setMessage(\"המוצר נמחק בהצלחה\");\r\n            setShowAlert(true);\r\n        }\r\n        else {\r\n            setMessage(\"ארעה שגיאה: \" + response2);\r\n            setShowAlert(true);\r\n        }\r\n    }\r\n\r\n\r\n\r\n\r\n    return (\r\n        <div className=\"ProductDetails\">\r\n            <div>\r\n\r\n\r\n                {\r\n                    userNow.id !== \"\" && <div >\r\n                        <form onSubmit={handelSubmit} className=\"container1\">\r\n                            <h2 className=\"PD-h2\"><b> פרטי מוצר </b></h2>\r\n                            <InputForm\r\n                                nameComp=\"שם המוצר\"\r\n                                type=\"text\"\r\n                                value={productData.name}\r\n                                validationFunction={(data) => {\r\n                                    let message = \"\";\r\n                                    if (data == undefined || data == \"\") message = \"שדה נדרש\";\r\n                                    saveData(\"name\", data);\r\n                                    return message\r\n                                }\r\n                                }\r\n                                sumbited={sumbit}\r\n                                wasSuccess={() => { wasSuccessAdd(); }}\r\n                            />\r\n                            <InputForm\r\n                                nameComp=\"תיאור המוצר\"\r\n                                type=\"textarea\"\r\n                                value={productData.description}\r\n                                validationFunction={(data) => {\r\n                                    let message = \"\";\r\n                                    if (data == undefined || data == \"\") message = \"שדה נדרש\";\r\n                                    saveData(\"description\", data);\r\n                                    return message\r\n                                }\r\n                                }\r\n                                sumbited={sumbit}\r\n                                wasSuccess={() => { wasSuccessAdd(); }}\r\n                            />\r\n\r\n                            <InputForm\r\n                                nameComp=\"קטגוריה\"\r\n                                value={productData.category}\r\n                                type=\"select\"\r\n                                sumbited={sumbit}\r\n                                saveData={(data) => { saveData(\"category\", data); }}\r\n                                wasSuccess={() => { wasSuccessAdd(); }}\r\n                                arrayOption={categoryOption}\r\n                            />\r\n\r\n\r\n                            <InputForm\r\n                                nameComp=\" קישור לכתובת התמונה (התמונה צריכה להיות שמורה ברשת)\"\r\n                                type=\"text\"\r\n                                value={productData.mainImgSrc}\r\n                                validationFunction={(data) => {\r\n                                    let message = \"\";\r\n                                    if (data == undefined || data == \"\") message = \"שדה נדרש\";\r\n                                    saveData(\"mainImgSrc\", data);\r\n                                    return message\r\n                                }\r\n                                }\r\n                                sumbited={sumbit}\r\n                                wasSuccess={() => { wasSuccessAdd(); }}\r\n                            />\r\n\r\n                            <InputForm\r\n                                nameComp=\"מחיר\"\r\n                                type=\"text\"\r\n                                value={productData.price}\r\n                                validationFunction={(data) => {\r\n                                    let message = validNum(data, [5, \"upto\"]);\r\n                                    saveData(\"price\", Number(data));\r\n                                    return message\r\n                                }\r\n                                }\r\n                                sumbited={sumbit}\r\n                                wasSuccess={() => { wasSuccessAdd(); }}\r\n                            />\r\n\r\n\r\n                            <InputForm\r\n                                nameComp=\"צבע מרכזי\"\r\n                                type=\"select\"\r\n                                value={productData.color}\r\n                                sumbited={sumbit}\r\n                                saveData={(data) => { saveData(\"color\", data); }}\r\n                                wasSuccess={() => { wasSuccessAdd(); }}\r\n                                arrayOption={colorsOption}\r\n                            />\r\n\r\n                            <InputForm\r\n                                nameComp=\"מצב המוצר\"\r\n                                type=\"select\"\r\n                                value={productData.quality}\r\n                                sumbited={sumbit}\r\n                                saveData={(data) => { saveData(\"quality\", data); }}\r\n                                wasSuccess={() => { wasSuccessAdd(); }}\r\n                                arrayOption={qualityOption}\r\n                            />\r\n\r\n                            <InputForm\r\n                                nameComp=\"סוג\"\r\n                                type=\"select\"\r\n                                value={productData.type}\r\n                                sumbited={sumbit}\r\n                                saveData={(data) => { saveData(\"type\", data); }}\r\n                                wasSuccess={() => { wasSuccessAdd(); }}\r\n                                arrayOption={typeOption}\r\n                            />\r\n\r\n                            <div className=\"buttons\">\r\n                                {\r\n                                    idProduct === \"\" &&\r\n                                    <button type=\"submit\" className=\"btn1\">\r\n                                        <span className=\"plus-icon\">\r\n                                            <i className=\"fas fa-plus\"></i>\r\n                                        </span>\r\n                                    </button>\r\n                                }\r\n\r\n\r\n                                {idProduct !== \"\" &&\r\n                                    <div className=\"buttons2\">\r\n                                        <button type=\"submit\" className={\"btn1\", \"v-btn\"}>\r\n                                            <span className=\"v-icon\">\r\n                                                <i className=\"fas fa-clipboard-check\"></i>\r\n                                            </span>\r\n                                        </button>\r\n                                        <div className=\"trash-icon-container\">\r\n                                            <span className=\"trash-icon\" onClick={() => { deleteProduct(); }}>\r\n                                                <i className=\"far fa-trash-alt\"></i>\r\n                                            </span>\r\n                                        </div>\r\n                                    </div>\r\n                                }\r\n                            </div>\r\n                        </form>\r\n                        {\r\n                            showAlert && <Message\r\n                                showAlert={showAlert}\r\n                                message={message}\r\n                                onClose={() => {\r\n                                    setShowAlert(false);\r\n                                    history.push(\"/PersonalArea\");\r\n                                    setUrl(\"/PersonalArea\");\r\n                                }\r\n                                }\r\n                                type=\"success\" />\r\n                        }\r\n                    </div>\r\n\r\n                }\r\n                {userNow.id === \"\" &&\r\n                    <div className=\"container1\">\r\n                        <h5>עליך להיות מחובר כדי להוסיף או לעדכן מוצר</h5>\r\n                    </div>\r\n                }\r\n            </div>\r\n        </div>\r\n    );\r\n\r\n}\r\nexport default ProductDetails\r\n","C:\\Users\\tamsu\\Desktop\\לימודים\\תשפא\\סמסטר ב\\סרבר\\תרגילים\\פרוייקט סופי\\client\\src\\components\\CategoryProduct\\CategoryProductB\\CategoryProductB.js",["537","538"],"import React, { useEffect, useState } from 'react'\r\nimport FilterB from '../Filter/FilterB'\r\nimport Furinture from '../Furniture/Furinture'\r\n\r\nimport './CategoryProductB.css'\r\nexport default function CategoryProductB(props) {\r\n\r\n    let userNow = props.userNow;\r\n    let categoryShow = props.category;\r\n    const [category, setCategory] = useState(categoryShow);\r\n    const [cities, setCities] = useState([]);\r\n    const [types, setTypes] = useState([]);\r\n    const [colors, setColors] = useState([]);\r\n    const [quality, setQuality] = useState([]);\r\n    const [price, setPrice] = useState([]);\r\n\r\n    const [citiesChecked, setCitiesChecked] = useState([]);\r\n    const [typesChecked, setTypesChecked] = useState([]);\r\n    const [colorsChecked, setColorsChecked] = useState([]);\r\n    const [qualityChecked, setQualityChecked] = useState([]);\r\n    const [priceChecked, setPriceChecked] = useState([]);\r\n    const [isLoad, setIsLoad] = useState(false);\r\n\r\n    //load the filter parameters according to the category and rellevant products\r\n    useEffect(async () => {\r\n        setIsLoad(false);\r\n        setCategory(props.category);\r\n        let response = await fetch('http://localhost:27017/products/filterProducts', {\r\n            method: 'POST',\r\n            headers: {\r\n                'Content-Type': 'application/json',\r\n            },\r\n            body: JSON.stringify({\r\n                category: categoryShow,\r\n                statusArray: [\"true\"],\r\n                projectionProduct: { category: 1, type: 1, color: 1, price: 1, quality: 1, idSeller: 1 },\r\n                projectionSeller:{_id:0,city:1}\r\n            })\r\n        });\r\n        if(response.status!==200) return;\r\n        let products = await response.json()\r\n        products=products.productsList;\r\n        let citiesTemp = [];\r\n        let typesTemp = [];\r\n        let colorsTemp = [];\r\n        let qualityTemp = [];\r\n        let maxPrice = 0;\r\n\r\n        for (let i = 0; i < products.length; i++) {\r\n            let city = products[i].sellerDetails.city;\r\n            if (!citiesTemp.includes(city)) {\r\n                citiesTemp.push(city);\r\n            }\r\n            if (!typesTemp.includes(products[i].product.type)) {\r\n                typesTemp.push(products[i].product.type);\r\n            }\r\n            if (!colorsTemp.includes(products[i].product.color)) {\r\n                colorsTemp.push(products[i].product.color);\r\n            }\r\n            if (!qualityTemp.includes(products[i].product.quality)) {\r\n                qualityTemp.push(products[i].product.quality);\r\n            }\r\n            if (Number(products[i].product.price) > maxPrice) maxPrice = Number(products[i].product.price);\r\n        }\r\n        setCities(citiesTemp);\r\n        setTypes(typesTemp);\r\n        setColors(colorsTemp);\r\n        setPrice([0, maxPrice]);\r\n        setQuality(qualityTemp);     \r\n\r\n    }, [props.category])\r\n\r\n    function changeArrays(cities, types, colors, price, quality) {\r\n        setCitiesChecked(cities.slice());\r\n        setColorsChecked(colors.slice());\r\n        setTypesChecked(types.slice());\r\n        setPriceChecked(price.slice());\r\n        setQualityChecked(quality.slice());\r\n    }\r\n\r\n  \r\n\r\n    return (\r\n        <div className=\"categoryProduct\">\r\n         \r\n\r\n            <div className=\"filter\">\r\n                <FilterB\r\n                    changeArrays={(cities, types, colors, price, quality) => { changeArrays(cities, types, colors, price, quality); }}\r\n                    category={category}\r\n                    cities={cities}\r\n                    types={types}\r\n                    colors={colors}\r\n                    price={price}\r\n                    quality={quality}\r\n                    citiesChecked={citiesChecked}\r\n                    colorsChecked={colorsChecked}\r\n                    typesChecked={typesChecked}\r\n                    priceChecked={priceChecked}\r\n                    qualityChecked={qualityChecked}\r\n                    setIsLoad={(bool) => { setIsLoad(bool); }} \r\n                    isLoad={isLoad}               \r\n                />\r\n            </div>\r\n            <div className=\"furniture\">\r\n                <Furinture\r\n                    userNow={userNow}\r\n                    category={category}\r\n                    cities={citiesChecked}\r\n                    price={priceChecked}\r\n                    types={typesChecked}\r\n                    colors={colorsChecked}\r\n                    quality={qualityChecked}\r\n                   \r\n                    />\r\n            </div>\r\n           \r\n        </div>\r\n    )\r\n}\r\n","C:\\Users\\tamsu\\Desktop\\לימודים\\תשפא\\סמסטר ב\\סרבר\\תרגילים\\פרוייקט סופי\\client\\src\\components\\Shared\\UsesFunction.js",[],"C:\\Users\\tamsu\\Desktop\\לימודים\\תשפא\\סמסטר ב\\סרבר\\תרגילים\\פרוייקט סופי\\client\\src\\components\\InputForm\\InputForm.js",["539","540","541","542","543","544"],"import React, { useState, useEffect } from 'react'\r\nimport './InputForm.css'\r\nfunction InputForm(props) {\r\n    const { nameComp, type, validationFunction, sumbited, wasSuccess, value, disabled, saveData, arrayOption } = props;\r\n    const [data, setData] = useState(value);\r\n    const [validData, setvalidData] = useState(\"\");\r\n\r\n\r\n    useEffect(() => {\r\n\r\n        if (sumbited === true) {\r\n            //checks whether the data entered is valid by the function sent to the component \r\n            let message;\r\n            if (type != \"select\") {\r\n                if (data === undefined) message = \"שדה נדרש\";\r\n                else message = validationFunction(data);\r\n            }\r\n            else message = validSelects(data);\r\n            setvalidData(message);\r\n            //returns to the parent component that the data is valid\r\n            if (message === \"\") wasSuccess();\r\n        }\r\n\r\n    }, [sumbited]);\r\n\r\n    useEffect(() => {\r\n        setData(value)\r\n    }, [value])\r\n\r\n\r\n    const changeValue = (event) => {\r\n        setData(event.target.value);\r\n        setvalidData(\"\");\r\n        if (type == \"select\") saveData(event.target.value);\r\n    }\r\n\r\n    function validSelects(value) {\r\n        //check if the select value is valid\r\n        if (value === null || value === undefined) return \"עליך לבחור\";\r\n        let split = value.split(\" \");\r\n        if (split[0] !== \"בחר\" && value !== \"\") {\r\n            return \"\";\r\n        }\r\n        return \"עליך לבחור\";\r\n    }\r\n\r\n\r\n    return (\r\n\r\n        <div className=\"inputForm1\">\r\n            <label htmlFor={nameComp}>{nameComp}</label>\r\n            {type === \"textarea\" &&\r\n                <div className=\"wrapper\">\r\n                    <div className=\"form-group\">\r\n                        <textarea className=\"form-control rounded-0\" id={nameComp} type={type} value={data} onChange={changeValue} rows=\"4\" cols=\"50\">\r\n                        </textarea>\r\n                    </div>\r\n                </div>\r\n            }\r\n            {\r\n                type == \"select\" &&\r\n                <select className=\"select\"\r\n                    onChange={(e) => {\r\n                        changeValue(e);\r\n                    }}\r\n                >\r\n                    {arrayOption.map((item, key) => {\r\n                        if (item == value) return <option selected id={key}>{item}</option>\r\n                        return <option id={key}>{item}</option>\r\n                    })}\r\n                </select>\r\n            }\r\n            {type !== \"textarea\" && type != \"select\" &&\r\n                <input id={nameComp} type={type} value={data} onChange={changeValue} disabled={disabled || false} />}\r\n            <small >{validData}</small>\r\n        </div>\r\n\r\n    );\r\n\r\n}\r\nexport default InputForm","C:\\Users\\tamsu\\Desktop\\לימודים\\תשפא\\סמסטר ב\\סרבר\\תרגילים\\פרוייקט סופי\\client\\src\\components\\Message\\Message.js",[],"C:\\Users\\tamsu\\Desktop\\לימודים\\תשפא\\סמסטר ב\\סרבר\\תרגילים\\פרוייקט סופי\\client\\src\\components\\Paypal\\Paypal.js",["545"],"C:\\Users\\tamsu\\Desktop\\לימודים\\תשפא\\סמסטר ב\\סרבר\\תרגילים\\פרוייקט סופי\\client\\src\\components\\Cart\\Cart.js",["546","547"],"import React, { useState, useEffect } from 'react'\r\nimport ProductList from '../ProductsList/ProductsList.js'\r\nimport { useHistory } from \"react-router-dom\";\r\nimport './Cart.css'\r\n\r\nexport default function Cart(props) {\r\n    const [productsFiltered, setProductsFiltered] = useState([]);\r\n    const [errorProducts, setErrorProduct] = useState([]);\r\n    const [validOrders, setValidOrders] = useState([])\r\n    const userNow = props.userNow;\r\n    const [isLoad, setisLoad] = useState(false)\r\n    let closePopover = props.closePopover;\r\n    let history = useHistory();\r\n    let setUrl = props.setUrl;\r\n\r\n    //load data\r\n    useEffect(async () => {\r\n\r\n        if (userNow.id !== \"\") {\r\n            let response = await fetch('http://localhost:27017/orders/filterOrders', {\r\n                method: 'POST',\r\n                headers: {\r\n                    'Content-Type': 'application/json',\r\n                },\r\n                body: JSON.stringify({ id: userNow.id, type: \"client\", status: [\"cart\", \"error\"] })\r\n            });\r\n\r\n            let response2 = await response.json();\r\n            if (response.status === 200) {\r\n                setProductsFiltered(response2);\r\n            }\r\n\r\n            //check wich of the orders are with \"error\" status\r\n            let tempErr = [];\r\n            let tempValidOrders = [];\r\n\r\n            response2.forEach(order => {\r\n                if (order.order.status === \"error\" && !tempErr.includes(order.order.idItem)) {\r\n                    tempErr.push(order.order.idItem);\r\n                }\r\n                else if (order.order.status === \"cart\") {\r\n                    tempValidOrders.push(order);\r\n                }\r\n            });\r\n\r\n            setErrorProduct(tempErr);\r\n            setValidOrders(tempValidOrders);\r\n            setisLoad(true);\r\n\r\n        }\r\n\r\n\r\n    }, [userNow])\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n    const deleteOrder = async (id) => {\r\n        //delete order from the db and from the cart in view\r\n        await fetch('http://localhost:27017/orders/deleteOrderByProduct', {\r\n            method: 'DELETE',\r\n            headers: {\r\n                'Content-Type': 'application/json',\r\n            },\r\n            body: JSON.stringify({ idItem: id, idClient: userNow.id })\r\n        });\r\n\r\n        let index = validOrders.findIndex((elem) => elem.order.idItem === id);\r\n        validOrders.splice(index, 1);\r\n        let tempValidOrders = [...validOrders]\r\n\r\n        index = productsFiltered.findIndex((elem) => elem.order.idItem === id);\r\n        productsFiltered.splice(index, 1);\r\n        let tempProducts = [...productsFiltered]\r\n        setProductsFiltered(tempProducts);\r\n        setValidOrders(tempValidOrders);\r\n        setisLoad(true);\r\n    }\r\n\r\n    //go to payment\r\n    function goToPay() {\r\n        if (closePopover !== undefined) closePopover();\r\n        history.push(\"/ShippingDetails\");\r\n        setUrl(\"/ShippingDetails\");\r\n    }\r\n\r\n\r\n    return (\r\n\r\n        <div className=\"cart\">\r\n            {userNow.id != \"\" &&\r\n                <div>\r\n                    {!isLoad && <div className=\"loader\"></div>}\r\n                    <div className=\"product-container\">\r\n                        <ProductList\r\n                            productDetailsArray={productsFiltered}\r\n                            size=\"smallest\"\r\n                            userNow={userNow}\r\n                            type={\"cart\"}\r\n                            functionButton={async (id) => { await deleteOrder(id); }}\r\n                            errorProducts={errorProducts}\r\n                        />\r\n                    </div>\r\n                    {validOrders.length !== 0 && productsFiltered.length !== 0 &&\r\n                        <button onClick={() => { goToPay(); }} className=\"pay-button\">לתשלום</button>}\r\n                    {\r\n                        ( productsFiltered.length === 0&& isLoad) &&\r\n                        <h5>העגלה שלך ריקה</h5>\r\n                    }\r\n                </div>\r\n            }\r\n            {userNow.id === \"\" &&\r\n\r\n                <h5>אינך מחובר</h5>\r\n            }\r\n\r\n        </div>\r\n    )\r\n}\r\n","C:\\Users\\tamsu\\Desktop\\לימודים\\תשפא\\סמסטר ב\\סרבר\\תרגילים\\פרוייקט סופי\\client\\src\\components\\Seller\\Seller.js",["548","549","550","551","552"],"import React, { useEffect, useState } from 'react'\r\nimport ProductList from '../ProductsList/ProductsList.js'\r\nimport Message from '../Message/Message.js';\r\nimport { useHistory } from \"react-router-dom\";\r\nimport './Seller.css'\r\n\r\n\r\nexport default function Seller(props) {\r\n\r\n    const userNow = props.userNow;\r\n    let setUrl = props.setUrl;\r\n    let history = useHistory();\r\n\r\n    const [myProducts, setMyProducts] = useState([]);\r\n    const [productsInOrder, setProductsInOrder] = useState([]);\r\n    const [isLoad1, setIsLoad1] = useState(false);\r\n    const [isLoad2, setIsLoad2] = useState(false);\r\n    const [showAlert, setShowAlert] = useState(false);\r\n    const [message, setMessage] = useState(\"\");\r\n\r\n    useEffect(async () => {\r\n        setIsLoad1(false);\r\n        setIsLoad2(false);\r\n        if (userNow.id != \"\") {\r\n            //filter the orders from the seller\r\n            let response = await fetch('http://localhost:27017/orders/filterOrders', {\r\n                method: 'POST',\r\n                headers: {\r\n                    'Content-Type': 'application/json',\r\n                }\r\n                , body: JSON.stringify({ id: userNow.id, type: \"seller\", status: [\"paid\"] })\r\n            });\r\n\r\n            let response2 = await response.json();\r\n            if (response.status === 200) {\r\n                setProductsInOrder(response2);\r\n                setIsLoad1(true);\r\n            }\r\n\r\n            else {\r\n                setMessage(response2.err);\r\n                setShowAlert(true);\r\n            }\r\n\r\n            //get all the products the seller sells\r\n            response = await fetch('http://localhost:27017/products/getProductsByUser/' + userNow.id, {\r\n                method: 'GET',\r\n                headers: {\r\n                    'Content-Type': 'application/json',\r\n                }\r\n            });\r\n\r\n            response2 = await response.json();\r\n            if (response.status === 200) {\r\n                setMyProducts(response2);\r\n                setIsLoad2(true);\r\n            }\r\n            else {\r\n                setMessage(response2.err);\r\n                setShowAlert(true);\r\n            }\r\n\r\n        }\r\n    }, [userNow])\r\n\r\n    async function updateDelieverProduct(id) {\r\n        //update the product deliever to the user\r\n        let response = await fetch('http://localhost:27017/orders/updateOrder', {\r\n            method: 'PUT',\r\n            headers: {\r\n                'Content-Type': 'application/json',\r\n            }\r\n            , body: JSON.stringify({\r\n                status: \"deliever\",\r\n                idSeller: userNow.id,\r\n                idItem: id\r\n            })\r\n        });\r\n\r\n        if (response.status == 200) {\r\n            let index = productsInOrder.findIndex((elem) => elem.order.idItem === id);\r\n            productsInOrder.splice(index, 1);\r\n            let tempProductsInOrder = [...productsInOrder];\r\n            setProductsInOrder(tempProductsInOrder);\r\n            setIsLoad1(true);\r\n        }\r\n        else {\r\n            let response2 = await response.json();\r\n            setMessage(response2.err);\r\n            setShowAlert(true);\r\n        }\r\n    }\r\n\r\n\r\n\r\n    function goToUpdateProduct(id) {\r\n        history.push({\r\n            pathname: '/updateProduct',\r\n            id: id\r\n        });\r\n        setUrl(\"/updateProduct\");\r\n    }\r\n\r\n    function goToAddProduct() {\r\n        if (userNow.bankNumber === \"\") {\r\n            history.push(\"/signAccount\");\r\n            setUrl(\"/signAccount\");\r\n        }\r\n        else {\r\n            history.push(\"/ProductDetails\");\r\n            setUrl(\"/ProductDetails\");\r\n        }\r\n    }\r\n\r\n    return (\r\n        <div className=\"Seller\">\r\n            <div className=\"order\">\r\n                <h4 className=\"h4-seller\">מוצרים שהוזמנו ממני</h4>\r\n                <div className=\"ordered\">\r\n                    {!isLoad1 &&\r\n                        <div className=\"loaderContaine\">\r\n                            <div className=\"loader\"></div>\r\n                        </div>\r\n                    }\r\n                    <ProductList\r\n                        type=\"sent\"\r\n                        functionButton={async (id) => { await updateDelieverProduct(id); }}\r\n                        productDetailsArray={productsInOrder}\r\n                        size=\"smallest\"\r\n                        userNow={userNow}\r\n                    />\r\n                    {productsInOrder.length == 0 && isLoad1 &&\r\n                        <h5 className=\"h5-seller\">אין מוצרים שהוזמנו ממך</h5>\r\n                    }\r\n\r\n                </div>\r\n            </div>\r\n\r\n            <div className=\"all\">\r\n                <h4 className=\"h4-seller\">כל המוצרים שאני מוכר</h4>\r\n                {!isLoad2 && <div className=\"loader\"></div>}\r\n                <ProductList\r\n                    productDetailsArray={myProducts}\r\n                    type=\"seller\"\r\n                    functionButton={(id) => { goToUpdateProduct(id); }}\r\n                    size=\"small1\"\r\n                    userNow={userNow}\r\n                />\r\n                {myProducts.length == 0 && isLoad2 &&\r\n                    <h5 className=\"h5-seller\">חבל :( עדיין לא העלית מוצרים לאתר</h5>\r\n                }\r\n                <div className=\"add\">\r\n\r\n                    <button className=\"add-button\" onClick={() => { goToAddProduct(); }}>\r\n                        <span className=\"add-icon\">\r\n                            <i className=\"fas fa-plus\"></i>\r\n                        </span>\r\n                        <p>הוסף</p>\r\n                    </button>\r\n\r\n                </div>\r\n            </div>\r\n\r\n            {\r\n                showAlert && <Message\r\n                    showAlert={showAlert}\r\n                    message={message}\r\n                    onClose={() => {\r\n                        setShowAlert(false);\r\n                    }\r\n                    } />\r\n            }\r\n\r\n        </div>\r\n    )\r\n}\r\n","C:\\Users\\tamsu\\Desktop\\לימודים\\תשפא\\סמסטר ב\\סרבר\\תרגילים\\פרוייקט סופי\\client\\src\\components\\UserAccount\\UserAccount.js",[],"C:\\Users\\tamsu\\Desktop\\לימודים\\תשפא\\סמסטר ב\\סרבר\\תרגילים\\פרוייקט סופי\\client\\src\\components\\Client\\Client.js",["553","554","555","556"],"import React, { useEffect, useState } from 'react'\r\nimport ProductList from '../ProductsList/ProductsList'\r\nimport Cart from '../Cart/Cart'\r\nimport './Client.css'\r\nimport Message  from '../Message/Message'\r\n\r\nexport default function Client(props) {\r\n    let userNow = props.userNow;\r\n    let setUrl = props.setUrl;\r\n    const [productsInOrder, setProductsInOrder] = useState([]);\r\n    const [isLoad, setIsLoad] = useState(false);\r\n    const [showAlert, setShowAlert] = useState(false);\r\n    const [message, setMessage] = useState(\"\");\r\n    //load the data\r\n    useEffect(async () => {\r\n        setIsLoad(false);\r\n        if (userNow.id != \"\") {\r\n            //get the orders that the client wait for\r\n            let response = await fetch('http://localhost:27017/orders/filterOrders', {\r\n                method: 'POST',\r\n                headers: {\r\n                    'Content-Type': 'application/json',\r\n                }\r\n                , body: JSON.stringify({ id: userNow.id, type: \"client\", status: [\"paid\",\"deliever\"] })\r\n            });\r\n\r\n            let response2 = await response.json();\r\n            if (response.status === 200) {\r\n                setProductsInOrder(response2);\r\n            }\r\n\r\n            else {\r\n                setMessage(response2.err);\r\n                setShowAlert(true);\r\n            }\r\n            setIsLoad(true);\r\n        }\r\n    }, [userNow.id])\r\n\r\n    //update that the order complate- arrive to the user\r\n    async function updateRecieveProduct(id) {\r\n        let response = await fetch('http://localhost:27017/orders/updateOrder', {\r\n            method: 'PUT',\r\n            headers: {\r\n                'Content-Type': 'application/json',\r\n            }\r\n            , body: JSON.stringify({\r\n                status: \"received\",\r\n                idClient: userNow.id,\r\n                idItem: id\r\n            })\r\n        });\r\n\r\n        if (response.status == 200) {\r\n            let index = productsInOrder.findIndex((elem) => elem.order.idItem === id);\r\n            productsInOrder.splice(index, 1);\r\n            let tempProductsInOrder = [...productsInOrder];\r\n            setProductsInOrder(tempProductsInOrder);\r\n            setIsLoad(true);\r\n        }\r\n        else{\r\n            let response2=await response.json();\r\n            setMessage(response2.err);\r\n            setShowAlert(true);\r\n        }\r\n    }\r\n\r\n    return (\r\n        <div className=\"Client\">\r\n            <div className=\"cart-container\">\r\n                <h4 className=\"Client-h4\">עגלת הקניות</h4>\r\n                <div className=\"cart-client\">\r\n                    <Cart userNow={userNow} className=\"cart-client\" setUrl={(url) => { setUrl(url); }} />\r\n                </div>\r\n            </div>\r\n            <div className=\"order-container\">\r\n                <h4 className=\"Client-h4\">מוצרים בהזמנה</h4>\r\n                <div className=\"ordered-client\">\r\n                    {!isLoad && <div className=\"loader\"></div>}\r\n                    <ProductList\r\n                        type=\"paid\"\r\n                        functionButton={async (id) => { await updateRecieveProduct(id); }}\r\n                        productDetailsArray={productsInOrder}\r\n                        size=\"smallest\"\r\n                        userNow={userNow}\r\n                    />\r\n                     {productsInOrder.length == 0 && isLoad &&\r\n                        <h5 className=\"h5-seller\">אין לך מוצרים באמצע הזמנה</h5>\r\n                    }\r\n\r\n                </div>\r\n\r\n            </div>\r\n\r\n            {\r\n                showAlert && <Message\r\n                    showAlert={showAlert}\r\n                    message={message}\r\n                    onClose={() => {\r\n                        setShowAlert(false);\r\n                    }\r\n                    }/>\r\n            }\r\n\r\n        </div>\r\n    )\r\n}\r\n","C:\\Users\\tamsu\\Desktop\\לימודים\\תשפא\\סמסטר ב\\סרבר\\תרגילים\\פרוייקט סופי\\client\\src\\components\\Login\\Login.js",["557","558","559","560"],"import React, { useState, useEffect } from 'react'\r\nimport Modal from 'react-bootstrap/Modal';\r\nimport { useHistory } from \"react-router-dom\";\r\nimport { validUserPassword, validUserId, validId } from '../InputForm/Validation.js'\r\n\r\nimport InputForm from '../InputForm/InputForm'\r\n\r\nimport './Login.css'\r\n\r\nfunction Login(props) {\r\n\r\n    let changeUser = props.changeUser;\r\n    let setUrl = props.setUrl;\r\n\r\n    const [showModal, setShowModal] = useState(false);\r\n    const [sumbit, setSumbit] = useState(false);\r\n    const [sumbitModal, setSumbitModal] = useState(false);\r\n    const [validUser, setValidUser] = useState(\"\");\r\n    let history = useHistory();\r\n    //varieble to store and validate the data of login\r\n    const numInputs = 2;\r\n    let numSuccess = 0;\r\n    let dataIdPassword = [\"\", \"\"];\r\n\r\n    //variable to store and validate the data of password recover\r\n    let idRecover = \"\";\r\n    let successModal = false;\r\n    const [existUser, setExistUser] = useState(true);\r\n    const [emailSend, setEmailSend] = useState(false)\r\n\r\n    useEffect(async () => {\r\n        if (sumbit === true) {\r\n            //returns the sumbit to false for allow pressing the button again\r\n            setSumbit(false);\r\n            //if all the inputs return ok- no errors\r\n            if (numSuccess === numInputs) {\r\n                let response = await fetch('http://localhost:27017/users/login', {\r\n                    method: 'GET',\r\n                    headers: {\r\n                        'Content-Type': 'application/json',\r\n                        id: dataIdPassword[0],\r\n                        password: dataIdPassword[1]\r\n                    }\r\n                });\r\n\r\n                let responseMessage = await response.json();\r\n                if (response.status === 200) {\r\n                    changeUser(responseMessage);\r\n                    history.push(\"/\");\r\n                    setUrl(\"/\");\r\n                }\r\n                else {\r\n                    if (responseMessage.err === \"idError\") {\r\n                        setValidUser(\"משתמש לא קיים, עליך להרשם תחילה\");\r\n                    }\r\n                    else if (responseMessage.err === \"passwordError\") {\r\n                        setValidUser(\"סיסמה לא נכונה\");\r\n                    }\r\n                }\r\n            }\r\n        }\r\n\r\n    }, [sumbit])\r\n\r\n    useEffect(async () => {\r\n        //make password recovery\r\n        if (sumbitModal === true) {\r\n            setSumbitModal(false);\r\n            if (successModal) {\r\n                let response = await fetch('http://localhost:27017/users/passwordRecovery', {\r\n                    method: 'PUT',\r\n                    headers: {\r\n                        'Content-Type': 'application/json'\r\n                    },\r\n                    body: JSON.stringify({id:idRecover})\r\n                });\r\n\r\n                if (response.status === 200) {\r\n                    setEmailSend(true);\r\n                }\r\n                else {\r\n                    setExistUser(false);\r\n                    return;\r\n                }\r\n                \r\n            }\r\n        }\r\n\r\n    }, [sumbitModal])\r\n\r\n\r\n    const handelSubmit = (event) => {\r\n        event.preventDefault();\r\n        setSumbit(true);\r\n    }\r\n\r\n    function wasSuccessAdd() {\r\n        numSuccess++;\r\n    }\r\n\r\n    function wasSuccessModal() {\r\n        successModal = true;\r\n    }\r\n\r\n    function validModalId(data) {\r\n        let validIdData = validId(data);\r\n        if (validIdData !== \"\") return validIdData;\r\n        idRecover = data;\r\n        return \"\";\r\n    }\r\n\r\n    function saveDetails(data, nameInput) {\r\n        if (nameInput === \"Id\") dataIdPassword[0] = data;\r\n        else dataIdPassword[1] = data;\r\n    }\r\n\r\n\r\n    return (\r\n        <div className=\"bg-img\">\r\n\r\n            <div >\r\n                <form onSubmit={handelSubmit} className=\"container1\">\r\n                    <h2 className=\"header\"><b> התחברות  </b></h2>\r\n                    <small>{validUser}</small>\r\n                    <InputForm\r\n                        nameComp=\"תעודת זהות\"\r\n                        type={\"text\"}\r\n                        validationFunction={(data) => { return validUserId(data, saveDetails); }}\r\n                        sumbited={sumbit}\r\n                        wasSuccess={() => { wasSuccessAdd(); }}\r\n                    />\r\n\r\n                    <InputForm\r\n                        nameComp=\"סיסמה\"\r\n                        type={\"password\"}\r\n                        validationFunction={(data) => { return validUserPassword(data, saveDetails); }}\r\n                        sumbited={sumbit}\r\n                        wasSuccess={() => { wasSuccessAdd(); }}\r\n                    />\r\n\r\n                    <button type=\"submit\" className=\"btn1\">התחבר</button>\r\n\r\n                    <div className=\"password-recovery\" onClick={() => { setShowModal(true); }}>\r\n                        <small>שכחת סיסמה?</small>\r\n                    </div>\r\n                </form>\r\n\r\n                <div className=\"password-recovery-modal\">\r\n                    <Modal\r\n                        show={showModal}\r\n                        onHide={() => {\r\n                            setShowModal(false);\r\n                            if(emailSend){\r\n                                setEmailSend(false);\r\n                            }\r\n                        }}\r\n                        size=\"gr\"\r\n                        aria-labelledby=\"example-modal-sizes-title-gr\"\r\n                        className=\"recov-modal\"\r\n                    >\r\n                        <Modal.Body className=\"recov-body\">\r\n\r\n                            {!emailSend && <div>\r\n                                <h4 className=\"recov-title\">שיחזור סיסמה</h4>\r\n                                <div className=\"input-recov\">\r\n                                    <InputForm\r\n                                        nameComp=\"מספר תעודת הזהות באמצעותו נרשמת לאתר\"\r\n                                        type={\"text\"}\r\n                                        validationFunction={(data) => { return validModalId(data); }}\r\n                                        sumbited={sumbitModal}\r\n                                        wasSuccess={() => { wasSuccessModal(); }}\r\n                                    />\r\n                                </div>\r\n                                {!existUser && <h6>משתמש לא קיים במערכת</h6>}\r\n\r\n                                <button onClick={() => { setSumbitModal(true); }} >שלח לי סיסמה</button>\r\n                            </div>}\r\n\r\n                            {emailSend && <div>\r\n                                <h4>נשלחה אליך סיסמה חדשה במייל</h4>\r\n                            </div>}\r\n\r\n                        </Modal.Body>\r\n                    </Modal>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\nexport default Login","C:\\Users\\tamsu\\Desktop\\לימודים\\תשפא\\סמסטר ב\\סרבר\\תרגילים\\פרוייקט סופי\\client\\src\\components\\CategoryProduct\\Filter\\FilterB.js",["561"],"import React, { useEffect, useState } from 'react'\r\nimport Slider from '@material-ui/core/Slider';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport './FilterB.css'\r\nexport default function FilterB(props) {\r\n\r\n    const [colors, setColors] = useState(props.colors);\r\n    const [types, setTypes] = useState(props.types);\r\n    const [cities, setCities] = useState(props.cities);\r\n    const [quality, setQuality] = useState(props.quality);\r\n    const changeArrays = props.changeArrays;\r\n    const [priceAdd, setPriceAdd] = useState(props.price);\r\n\r\n    let maxPrice = props.price[1];\r\n    const [typesAdd, setTypesAdd] = useState(props.typesChecked);\r\n    const [citiesAdd, setCitiesAdd] = useState(props.citiesChecked);\r\n    const [colorsAdd, setColorsAdd] = useState(props.colorsChecked);\r\n    const [qualityAdd, setQualityAdd] = useState(props.qualityChecked);\r\n    const isLoad=props.isLoad;\r\n    \r\n    useEffect(() => {\r\n        setColors(props.colors);\r\n        setTypes(props.types);\r\n        setCities(props.cities);\r\n        setPriceAdd(props.price);\r\n        setQuality(props.quality);\r\n        props.setIsLoad(true);\r\n    }, [props.colors, props.types, props.cities, props.price, props.quality])\r\n\r\n\r\n    //style the range\r\n    const useStyles = makeStyles({\r\n        root: {\r\n            color: '#abb663'\r\n        }\r\n    });\r\n    const classes = useStyles();\r\n\r\n    //Indicates that the check box checked\r\n    function chooseInput(item, input) {\r\n        let array;\r\n        let setArray;\r\n        switch (input) {\r\n            case \"types\":\r\n                array = typesAdd.slice();\r\n                setArray = setTypesAdd;\r\n                break;\r\n            case \"cities\":\r\n                array = citiesAdd.slice();\r\n                setArray = setCitiesAdd;\r\n                break;\r\n            case \"colors\":\r\n                array = colorsAdd.slice();\r\n                setArray = setColorsAdd;\r\n                break;\r\n            case \"quality\":\r\n                array = qualityAdd.slice();\r\n                setArray = setQualityAdd;\r\n                break;\r\n            default:\r\n                break;\r\n        }\r\n        if (array.includes(item)) array.splice(array.indexOf(item), 1);\r\n        else array.push(item);\r\n        setArray(array);\r\n\r\n        switch (input) {\r\n            case \"types\":\r\n                changeArrays(citiesAdd, array, colorsAdd, priceAdd, qualityAdd);\r\n                break;\r\n            case \"cities\":\r\n                changeArrays(array, typesAdd, colorsAdd, priceAdd, qualityAdd);\r\n                break;\r\n            case \"colors\":\r\n                changeArrays(citiesAdd, typesAdd, array, priceAdd, qualityAdd);\r\n                break;\r\n            case \"quality\":\r\n                changeArrays(citiesAdd, typesAdd, colorsAdd, priceAdd, array);\r\n                break;\r\n            default:\r\n                break;\r\n        }\r\n    }\r\n\r\n\r\n    function createElementCheck(item, input, index) {\r\n        let array;\r\n        switch (input) {\r\n            case \"types\":\r\n                array = typesAdd;\r\n                break;\r\n            case \"cities\":\r\n                array = citiesAdd;\r\n                break;\r\n            case \"colors\":\r\n                array = colorsAdd;\r\n                break;\r\n            case \"quality\":\r\n                array = qualityAdd;\r\n                break;\r\n            default:\r\n                break;\r\n        }\r\n\r\n        return (\r\n            <div key={index} className=\"filter-check-box\">\r\n                {\r\n                    <label className=\"container-check\">{item}\r\n                        <input\r\n                            type=\"checkbox\"\r\n                            onChange={() => {\r\n                                chooseInput(item, input)\r\n                            }}\r\n                            checked={array.includes(item)} />\r\n                        <span className=\"checkmark\"></span>\r\n                    </label>\r\n                }\r\n            </div>\r\n        )\r\n    }\r\n\r\n\r\n\r\n    return (\r\n        <div className=\"filterB\">\r\n            <form className=\"form\">\r\n            {(!isLoad) && <div className=\"loader\"></div>}\r\n               \r\n                <div className=\"key-filter\">\r\n                    <label className=\"title\">צבעים</label>\r\n                    <div className=\"filter-value\">\r\n                        {colors.map((color, index) => {\r\n                            return createElementCheck(color, \"colors\", index);\r\n                        })}\r\n                    </div>\r\n                </div>\r\n                <div className=\"key-filter\">\r\n                    <label className=\"title\">סוגים</label>\r\n                    <div className=\"filter-value\">\r\n                        {types.map((type, index) => {\r\n                            return createElementCheck(type, \"types\", index);\r\n                        })}\r\n                    </div>\r\n                </div>\r\n\r\n                <div className=\"key-filter\">\r\n                    <label className=\"title\">ערים</label>\r\n                    <div className=\"filter-value\">\r\n                        {cities.map((city, index) => {\r\n                            return createElementCheck(city, \"cities\", index);\r\n                        })}\r\n                    </div>\r\n                </div>\r\n                <div className=\"key-filter\">\r\n                    <label className=\"title\">מצב מוצר</label>\r\n                    <div className=\"filter-value\">\r\n                        {quality.map((quality, index) => {\r\n                            return createElementCheck(quality, \"quality\", index);\r\n                        })}\r\n                    </div>\r\n                </div>\r\n\r\n\r\n                <div className=\"key-filter\">\r\n                    <label className=\"title\">מחיר</label>\r\n                    <div className=\"slide\">\r\n                        <Slider\r\n                            classes={{\r\n                                root: classes.root\r\n                            }}\r\n                            max={maxPrice}\r\n                            value={priceAdd}\r\n                            onChange={(event, newValue) => {\r\n                                setPriceAdd(newValue);\r\n                            }}\r\n                            onChangeCommitted={(event, newValue) => {\r\n                                changeArrays(citiesAdd, typesAdd, colorsAdd, newValue, qualityAdd);\r\n                            }}\r\n                            valueLabelDisplay=\"auto\"\r\n                        />\r\n                    </div>\r\n                </div>\r\n\r\n\r\n            </form>\r\n        </div>\r\n    )\r\n}\r\n","C:\\Users\\tamsu\\Desktop\\לימודים\\תשפא\\סמסטר ב\\סרבר\\תרגילים\\פרוייקט סופי\\client\\src\\components\\CategoryProduct\\Furniture\\Furinture.js",["562","563","564"],"import React, { useState, useEffect, useRef } from 'react'\r\nimport ProductList from '../../ProductsList/ProductsList.js'\r\nimport Paging from '../Paging/Paging.js';\r\nimport './Furinture.css'\r\nexport default function Furinture(props) {\r\n\r\n    let category = props.category;\r\n    let types = props.types;\r\n    let cities = props.cities;\r\n    let colors = props.colors;\r\n    let price = props.price;\r\n    let quality = props.quality;\r\n    let userNow = props.userNow;\r\n    const [products, setProducts] = useState([]);\r\n    const [size, setSize] = useState(0);\r\n    const [skip, setSkip] = useState(0);\r\n    const [isLoad, setIsLoad] = useState(false);\r\n\r\n    //save the previous category- in order to nullify the skip when the catgory changed\r\n    const prevCategorytRef = useRef();\r\n    useEffect(() => {\r\n        prevCategorytRef.current = category;\r\n    });\r\n    const prevCategory = prevCategorytRef.current;\r\n    //load data\r\n\r\n    useEffect(async () => {\r\n        setIsLoad(false);\r\n        let skipTemp = skip;\r\n        if (prevCategory !== category) {\r\n            setSkip(0);\r\n            skipTemp = 0;\r\n        }\r\n        //prepare the filter parameters\r\n        let filterParam = {};\r\n        if (types.length !== 0) {\r\n            filterParam.typesArray = types;\r\n        }\r\n        if (colors.length !== 0) {\r\n            filterParam.colorsArray = colors;\r\n        }\r\n        if (price.length !== 0) {\r\n            filterParam.priceArray = price;\r\n        }\r\n        if (quality.length !== 0) {\r\n            filterParam.qualityArray = quality;\r\n        }\r\n        if (cities.length !== 0) {\r\n            filterParam.citiesArray = cities;\r\n        }\r\n\r\n        filterParam = {\r\n            category: category,\r\n            ...filterParam,\r\n            statusArray: [\"true\"],\r\n            skip: skipTemp\r\n        }\r\n\r\n        if (filterParam.citiesArray != undefined) {\r\n            filterParam.projectionSeller = { _id: 0, city: 1 };\r\n            filterParam.projectionProduct = { name: 1, price: 1, mainImgSrc: 1, idSeller: 1 };\r\n        }\r\n        else {\r\n            filterParam.projectionProduct = { name: 1, price: 1, mainImgSrc: 1 };\r\n        }\r\n\r\n        //get the products \r\n        let response = await fetch('http://localhost:27017/products/filterProducts', {\r\n            method: 'POST',\r\n            headers: {\r\n                'Content-Type': 'application/json',\r\n            },\r\n            body: JSON.stringify(filterParam)\r\n        });\r\n\r\n        let response2 = await response.json();\r\n        if (response.status === 200) {\r\n            setProducts(response2.productsList);\r\n            setSize(response2.size)\r\n        }\r\n        else {\r\n            console.log(response2.err);\r\n        }\r\n\r\n        setIsLoad(true);\r\n\r\n    }, [category, cities, types, colors, price, quality, skip]);\r\n\r\n\r\n\r\n    return (\r\n        <div>\r\n            {(!isLoad) && <div className=\"loader\"></div>}\r\n            <div className=\"productArea\">\r\n                <ProductList userNow={userNow} productDetailsArray={products} size=\"small2\" />\r\n            </div>\r\n            <div className=\"pagingArea\">\r\n                <Paging size={size} changeSkip={(i) => { setSkip(i) }} skipNow={skip} />\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n","C:\\Users\\tamsu\\Desktop\\לימודים\\תשפא\\סמסטר ב\\סרבר\\תרגילים\\פרוייקט סופי\\client\\src\\components\\ProductsList\\ProductsList.js",[],"C:\\Users\\tamsu\\Desktop\\לימודים\\תשפא\\סמסטר ב\\סרבר\\תרגילים\\פרוייקט סופי\\client\\src\\components\\Product\\Product.js",["565","566","567","568"],"import React, { useState } from 'react'\r\n\r\nimport './Product.css'\r\nimport ProductBig from './ProductBig/ProductBig'\r\n\r\nfunction Product(props) {\r\n\r\n    const productFullDetails = props.productDetails;\r\n    const productDetails=productFullDetails.product;\r\n    const type = props.type;\r\n    const userNow = props.userNow;\r\n    const errorProducts = props.errorProducts;\r\n    const [size, setSize] = useState(props.size);\r\n    const [showModal, setShowModal] = useState(false)\r\n\r\n\r\n    const handleShow = () => {\r\n        setShowModal(true);\r\n    }\r\n\r\n    //change the product view size\r\n    function changeSize() {\r\n\r\n        switch (size) {\r\n            case \"smallest\":\r\n                handleShow();\r\n                setSize(\"bigWithOutBtn1\");\r\n                break;\r\n            case \"small1\":\r\n                handleShow();\r\n                setSize(\"bigWithOutBtn2\");\r\n                break;\r\n            case \"small2\":\r\n                handleShow();\r\n                setSize(\"bigWithBtn\");\r\n                break;\r\n            case \"bigWithOutBtn1\":\r\n                setSize(\"smallest\");\r\n                break;\r\n            case \"bigWithOutBtn2\":\r\n                setSize(\"small1\");\r\n                break;\r\n            case \"bigWithBtn\":\r\n                setSize(\"small2\");\r\n                break;\r\n            default:\r\n                break;\r\n        }\r\n    }\r\n\r\n\r\n    //Shortens the text if it is longer than the space assigned to it in the small card\r\n    function makeShortText(text, maxLength) {\r\n        if (text === null || text === undefined) return \"\";\r\n        if (text.length <= maxLength) return text;\r\n        let array = text.split(\" \");\r\n        let newText = \"\";\r\n        let returnText = \"\";\r\n        for (let i = 0; i < array.length; i++) {\r\n            if ((newText + \" \" + array[i]).length <= maxLength - 3) {\r\n                newText = newText + \" \" + array[i];\r\n                returnText = newText;\r\n            }\r\n            else {\r\n                newText = \"...\" + newText;\r\n                returnText = newText;\r\n                break;\r\n            }\r\n        }\r\n\r\n        if (returnText === \"...\") returnText = \"...\" + text.slice(0, maxLength - 3);\r\n        return returnText;\r\n    }\r\n\r\n    return (\r\n        <div className=\"product\">\r\n\r\n            {\r\n                productDetails._id !== \"\" &&(size === \"smallest\" || size === \"bigWithOutBtn1\") &&\r\n                <div onClick={() => changeSize()} className=\"card\">\r\n                    <div className={\"card-body\", \"small-body\"}>\r\n                        <h4 className={\"card-title\", \"small2h4\"}>{productDetails.name}</h4>\r\n\r\n                        <p className={\"card-text\", \"small2p\"}>\r\n                            {makeShortText(productDetails.description, 103)}\r\n                        </p>\r\n\r\n\r\n                        <p className={\"price2\"}>&#8362; {productDetails.price}</p>\r\n                        {\r\n                            type === \"cart\" && errorProducts.includes(productDetails._id) &&\r\n                            <small>המוצר הוסר ע\"י המוכר ואינו זמין יותר לרכישה</small>\r\n                        }\r\n                    </div>\r\n                </div>\r\n            }\r\n            {\r\n                productDetails._id !== \"\" &&\r\n                (size === \"small1\" || size === \"small2\" || size === \"bigWithOutBtn2\" || size === \"bigWithBtn\") &&\r\n                <div onClick={() => changeSize()} className=\"card\">\r\n                    <img src={productDetails.mainImgSrc} className={\"card-img-top\"} />\r\n                    <div className=\"card-body\">\r\n                        <h4 className=\"card-title\">{makeShortText(productDetails.name, 23)}</h4>\r\n                        <p className=\"price\">&#8362; {productDetails.price}</p>\r\n                    </div>\r\n                </div>\r\n            }\r\n            {\r\n                productDetails._id !== \"\" && \r\n                (size === \"bigWithOutBtn1\" || size === \"bigWithOutBtn2\" || size === \"bigWithBtn\") &&\r\n\r\n                <ProductBig\r\n                    userNow={userNow}\r\n                    productDetails={productDetails}\r\n                    type={type}\r\n                    errorProducts={errorProducts}\r\n                    showModal={showModal}\r\n                    setShowModal={(show) => { setShowModal(show); }}\r\n                    size={size}\r\n                    changeSize={()=>{changeSize();}} />\r\n            }\r\n\r\n            {\r\n                (productDetails._id === \"\" ) &&\r\n                <div>\r\n                    <h3>מוצר לא נמצא</h3>\r\n                </div>\r\n            }\r\n\r\n        </div >\r\n    );\r\n}\r\n\r\nexport default Product","C:\\Users\\tamsu\\Desktop\\לימודים\\תשפא\\סמסטר ב\\סרבר\\תרגילים\\פרוייקט סופי\\client\\src\\components\\Product\\ProductBig\\ProductBig.js",["569","570","571","572","573"],"import React, { useState, useEffect } from 'react'\r\nimport Modal from 'react-bootstrap/Modal'\r\n\r\nimport Message from '../../Message/Message'\r\nimport '../Product.css'\r\nimport './ProductBig.css'\r\n\r\nexport default function ProductBig(props) {\r\n\r\n    const type = props.type;\r\n    const userNow = props.userNow;\r\n    const errorProducts = props.errorProducts;\r\n    const showModal = props.showModal;\r\n    const setShowModal = props.setShowModal;\r\n    const size = props.size;\r\n    const changeSize = props.changeSize;\r\n    const [showAlert, setShowAlert] = useState(false);\r\n    const [message, setMessage] = useState(\"\");\r\n    const [typeMessage, setTypeMessage] = useState(\"\");\r\n    const [sellerDetails, setSellerDetails] = useState({});\r\n    const [myOrder, setMyOrder] = useState({});\r\n    const [productDetails, setProductDetails] = useState(props.productDetails)\r\n    \r\n    const handleClose1 = () => {\r\n        setShowModal(false);       \r\n    }\r\n\r\n    const handleClose2 = () => {\r\n        setShowModal(false); \r\n        changeSize();      \r\n    }\r\n\r\n    useEffect(async () => {\r\n        //get the data of the product\r\n        if (type !== \"sent\" && type !== \"paid\") {\r\n            let response = await fetch('http://localhost:27017/products/getProduct', {\r\n                method: 'POST',\r\n                headers: {\r\n                    'Content-Type': 'application/json',\r\n                },\r\n                body: JSON.stringify({ \"id\": productDetails._id },{})\r\n            });\r\n\r\n            let response2 = await response.json();\r\n            console.log(response2);\r\n            if (response.status === 200) {\r\n                setProductDetails(response2.product)\r\n                setSellerDetails(response2.sellerDetails);\r\n            }\r\n        }\r\n\r\n        if (type === \"sent\" || type === \"paid\") {\r\n            //get the data of the order of the product\r\n            let response = await fetch('http://localhost:27017/orders/getOrderByProduct/' + productDetails._id, {\r\n                method: 'GET',\r\n                headers: {\r\n                    'Content-Type': 'application/json',\r\n                }\r\n            });\r\n\r\n            let response2 = await response.json();\r\n            console.log(response2);\r\n            if (response.status === 200) {\r\n                setProductDetails(response2.product);\r\n                setMyOrder(response2);\r\n                setSellerDetails(response2.sellerDetails);\r\n            }\r\n        }\r\n    }, [])\r\n\r\n\r\n    const makeOrder = async () => {\r\n        //create a new order\r\n        if (userNow.id === \"\") {\r\n           \r\n            setMessage(\"אינך מחובר לאתר\");\r\n            setShowAlert(true);\r\n            handleClose1();\r\n            return;\r\n        }\r\n        let newOrder = {};\r\n        newOrder.idItem = productDetails._id;\r\n        newOrder.idSeller = sellerDetails.id;\r\n        newOrder.idClient = userNow.id;\r\n        if (newOrder.idClient == newOrder.idSeller) {\r\n           \r\n            setMessage(\"לא ניתן להזמין מוצר שאתה המוכר שלו\");\r\n            setShowAlert(true);\r\n            handleClose1();\r\n            return;\r\n        }\r\n        let response = await fetch('http://localhost:27017/orders/addOrder', {\r\n            method: 'POST',\r\n            headers: {\r\n                'Content-Type': 'application/json',\r\n            },\r\n            body: JSON.stringify(newOrder)\r\n        });\r\n\r\n        let response2 = await response.text();\r\n        if (response.status === 200) {\r\n            \r\n            setMessage(\"המוצר נוסף בהצלחה\");\r\n            setShowAlert(true);\r\n            setTypeMessage(\"success\");\r\n            handleClose1();\r\n        }\r\n        else {\r\n            \r\n            setMessage(response2);\r\n            setShowAlert(true);\r\n            handleClose1();\r\n            return;\r\n        }\r\n    }\r\n\r\n    //return the products full details\r\n    return (\r\n        <div>\r\n\r\n            <Modal\r\n                show={showModal}\r\n                onHide={handleClose2}\r\n                size=\"lg\"\r\n                aria-labelledby=\"contained-modal-title-vcenter\"\r\n                centered\r\n                className=\"modal\"\r\n            >\r\n\r\n                <Modal.Body className=\"product-modal-body\">\r\n                    {(sellerDetails.id != undefined) && <div className=\"card-modal\">\r\n                        <div>\r\n                            <img src={productDetails.mainImgSrc} className=\"card-modal-img\" />\r\n                        </div>\r\n                        <div className=\"card-modal-text\">\r\n                            <h4><b>{productDetails.name}</b></h4>\r\n                            <div className=\"descContainer\">\r\n                            <p className=\"desc\">{productDetails.description}</p>\r\n                            </div>\r\n                            {type === \"sent\" && myOrder !== null &&\r\n                                <div>\r\n                                    <h6>פרטי הזמנה</h6>\r\n                                    <p>\r\n                                        <b>שם לקוח </b>\r\n                                        <div className=\"values\">{myOrder.clientDetails.firstName} {myOrder.clientDetails.lastName}</div>\r\n                                    </p>\r\n                                    <p>\r\n                                        <b>פלאפון לקוח </b>\r\n                                        <div className=\"values\">{myOrder.clientDetails.phone}</div>\r\n                                    </p>\r\n                                    <p>\r\n                                        <b>כתובת למשלוח </b>\r\n                                        <div className=\"values\">{myOrder.order.city}, {myOrder.order.address} {myOrder.order.buildingNumber} / {myOrder.order.homeNumber}</div>\r\n                                    </p>\r\n\r\n                                </div>\r\n                            }\r\n\r\n                            {type !== \"sent\" && < div >\r\n                                <p><b>עיר </b> <div className=\"values\">{sellerDetails.city}</div></p>\r\n                                <p><b>מצב המוצר </b> <div className=\"values\">{productDetails.quality}</div></p>\r\n                                <p><b>צבע </b> <div className=\"values\">{productDetails.color}</div></p>\r\n                                <h6>פרטי התקשרות עם המוכר </h6>\r\n                                <p><b>שם </b> <div className=\"values\">{sellerDetails.firstName} {sellerDetails.lastName}</div></p>\r\n                                <p><b>טלפון </b><div className=\"values\">{sellerDetails.phone}</div></p>\r\n\r\n                                {type === \"paid\" && myOrder !== null &&\r\n                                    <p><b>מצב הזמנה</b><div className=\"values\">\r\n                                        {(myOrder.order.status === \"paid\") ? \"שולם\" : (myOrder.order.status === \"deliever\") ? \"נשלח\" : \"התקבל\"}\r\n                                    </div></p>}\r\n                                <p className=\"price\"> {productDetails.price} &#8362;</p>\r\n\r\n                            </div>}\r\n                            {\r\n                                type === \"cart\" && errorProducts.includes(productDetails.id) &&\r\n                                <small>המוצר הוסר ע\"י המוכר ואינו זמין יותר לרכישה</small>\r\n                            }\r\n                        </div>\r\n                        {\r\n                            productDetails.id !== \"\" && sellerDetails.id !== \"\" && size === \"bigWithBtn\" &&\r\n                            <div className=\"button-container\">\r\n                                <button onClick={async () => { makeOrder(); }}>הוסף לעגלה</button>\r\n                            </div>\r\n                        }\r\n\r\n                    </div>}\r\n                </Modal.Body>\r\n            </Modal>\r\n\r\n            {\r\n                showAlert && <Message\r\n                    showAlert={showAlert}\r\n                    message={message}\r\n                    onClose={() => {\r\n                        setShowAlert(false);\r\n                        setTypeMessage(\"\");\r\n                        changeSize();\r\n                    }\r\n                    }\r\n                    type={typeMessage} />\r\n            }\r\n\r\n        </div>\r\n    )\r\n}\r\n","C:\\Users\\tamsu\\Desktop\\לימודים\\תשפא\\סמסטר ב\\סרבר\\תרגילים\\פרוייקט סופי\\client\\src\\components\\CategoryProduct\\paging\\paging.js",["574","575","576"],"C:\\Users\\tamsu\\Desktop\\לימודים\\תשפא\\סמסטר ב\\סרבר\\תרגילים\\פרוייקט סופי\\client\\src\\components\\CategoryProduct\\Paging\\Paging.js",[],"C:\\Users\\tamsu\\Desktop\\לימודים\\תשפא\\סמסטר ב\\סרבר\\תרגילים\\Furnish\\client\\src\\index.js",[],["577","578"],"C:\\Users\\tamsu\\Desktop\\לימודים\\תשפא\\סמסטר ב\\סרבר\\תרגילים\\Furnish\\client\\src\\reportWebVitals.js",[],"C:\\Users\\tamsu\\Desktop\\לימודים\\תשפא\\סמסטר ב\\סרבר\\תרגילים\\Furnish\\client\\src\\App.js",["579","580","581"],"C:\\Users\\tamsu\\Desktop\\לימודים\\תשפא\\סמסטר ב\\סרבר\\תרגילים\\Furnish\\client\\src\\components\\ProductDetails\\ProductDetails.js",["582","583","584","585","586","587","588","589","590","591","592","593","594","595"],"C:\\Users\\tamsu\\Desktop\\לימודים\\תשפא\\סמסטר ב\\סרבר\\תרגילים\\Furnish\\client\\src\\components\\SignUp\\SignUpClient.js",["596","597","598"],"C:\\Users\\tamsu\\Desktop\\לימודים\\תשפא\\סמסטר ב\\סרבר\\תרגילים\\Furnish\\client\\src\\components\\InputForm\\Validation.js",[],"C:\\Users\\tamsu\\Desktop\\לימודים\\תשפא\\סמסטר ב\\סרבר\\תרגילים\\Furnish\\client\\src\\components\\PersonalArea\\PersonalArea.js",[],"C:\\Users\\tamsu\\Desktop\\לימודים\\תשפא\\סמסטר ב\\סרבר\\תרגילים\\Furnish\\client\\src\\components\\Home\\Home.js",[],"C:\\Users\\tamsu\\Desktop\\לימודים\\תשפא\\סמסטר ב\\סרבר\\תרגילים\\Furnish\\client\\src\\components\\Header\\Header.js",["599","600"],"C:\\Users\\tamsu\\Desktop\\לימודים\\תשפא\\סמסטר ב\\סרבר\\תרגילים\\Furnish\\client\\src\\components\\LoginSign\\LoginSign.js",[],"C:\\Users\\tamsu\\Desktop\\לימודים\\תשפא\\סמסטר ב\\סרבר\\תרגילים\\Furnish\\client\\src\\components\\Payment\\Payment.js",["601","602","603","604"],"C:\\Users\\tamsu\\Desktop\\לימודים\\תשפא\\סמסטר ב\\סרבר\\תרגילים\\Furnish\\client\\src\\components\\NotFound\\NotFound.js",[],"C:\\Users\\tamsu\\Desktop\\לימודים\\תשפא\\סמסטר ב\\סרבר\\תרגילים\\Furnish\\client\\src\\components\\About\\About.js",[],"C:\\Users\\tamsu\\Desktop\\לימודים\\תשפא\\סמסטר ב\\סרבר\\תרגילים\\Furnish\\client\\src\\components\\ShippingDetails\\ShippingDetails.js",["605","606","607","608","609","610","611"],"C:\\Users\\tamsu\\Desktop\\לימודים\\תשפא\\סמסטר ב\\סרבר\\תרגילים\\Furnish\\client\\src\\components\\UpdateUser\\UpdateUser.js",[],"C:\\Users\\tamsu\\Desktop\\לימודים\\תשפא\\סמסטר ב\\סרבר\\תרגילים\\Furnish\\client\\src\\components\\CategoryProduct\\CategoryProductB\\CategoryProductB.js",["612","613"],"C:\\Users\\tamsu\\Desktop\\לימודים\\תשפא\\סמסטר ב\\סרבר\\תרגילים\\Furnish\\client\\src\\components\\SignAccount\\SignAccount.js",["614","615"],"C:\\Users\\tamsu\\Desktop\\לימודים\\תשפא\\סמסטר ב\\סרבר\\תרגילים\\Furnish\\client\\src\\components\\Message\\Message.js",[],"C:\\Users\\tamsu\\Desktop\\לימודים\\תשפא\\סמסטר ב\\סרבר\\תרגילים\\Furnish\\client\\src\\components\\InputForm\\InputForm.js",["616","617","618","619","620","621"],"C:\\Users\\tamsu\\Desktop\\לימודים\\תשפא\\סמסטר ב\\סרבר\\תרגילים\\Furnish\\client\\src\\components\\Client\\Client.js",["622","623","624","625"],"C:\\Users\\tamsu\\Desktop\\לימודים\\תשפא\\סמסטר ב\\סרבר\\תרגילים\\Furnish\\client\\src\\components\\UserAccount\\UserAccount.js",[],"C:\\Users\\tamsu\\Desktop\\לימודים\\תשפא\\סמסטר ב\\סרבר\\תרגילים\\Furnish\\client\\src\\components\\Seller\\Seller.js",["626","627","628","629","630"],"C:\\Users\\tamsu\\Desktop\\לימודים\\תשפא\\סמסטר ב\\סרבר\\תרגילים\\Furnish\\client\\src\\components\\Shared\\UsesFunction.js",[],"C:\\Users\\tamsu\\Desktop\\לימודים\\תשפא\\סמסטר ב\\סרבר\\תרגילים\\Furnish\\client\\src\\components\\CategoryProduct\\Filter\\FilterB.js",["631"],"C:\\Users\\tamsu\\Desktop\\לימודים\\תשפא\\סמסטר ב\\סרבר\\תרגילים\\Furnish\\client\\src\\components\\Cart\\Cart.js",["632","633"],"C:\\Users\\tamsu\\Desktop\\לימודים\\תשפא\\סמסטר ב\\סרבר\\תרגילים\\Furnish\\client\\src\\components\\Paypal\\Paypal.js",["634"],"C:\\Users\\tamsu\\Desktop\\לימודים\\תשפא\\סמסטר ב\\סרבר\\תרגילים\\Furnish\\client\\src\\components\\Login\\Login.js",["635","636","637","638"],"C:\\Users\\tamsu\\Desktop\\לימודים\\תשפא\\סמסטר ב\\סרבר\\תרגילים\\Furnish\\client\\src\\components\\CategoryProduct\\Furniture\\Furinture.js",["639","640","641"],"C:\\Users\\tamsu\\Desktop\\לימודים\\תשפא\\סמסטר ב\\סרבר\\תרגילים\\Furnish\\client\\src\\components\\ProductsList\\ProductsList.js",[],"C:\\Users\\tamsu\\Desktop\\לימודים\\תשפא\\סמסטר ב\\סרבר\\תרגילים\\Furnish\\client\\src\\components\\CategoryProduct\\Paging\\Paging.js",[],"C:\\Users\\tamsu\\Desktop\\לימודים\\תשפא\\סמסטר ב\\סרבר\\תרגילים\\Furnish\\client\\src\\components\\Product\\Product.js",["642","643","644","645"],"C:\\Users\\tamsu\\Desktop\\לימודים\\תשפא\\סמסטר ב\\סרבר\\תרגילים\\Furnish\\client\\src\\components\\Product\\ProductBig\\ProductBig.js",["646","647","648","649","650"],{"ruleId":"651","replacedBy":"652"},{"ruleId":"653","replacedBy":"654"},{"ruleId":"655","severity":1,"message":"656","line":43,"column":13,"nodeType":"657","endLine":49,"endColumn":4},{"ruleId":"658","severity":1,"message":"659","line":209,"column":68,"nodeType":"660","endLine":209,"endColumn":83},{"ruleId":"655","severity":1,"message":"656","line":32,"column":15,"nodeType":"657","endLine":47,"endColumn":6},{"ruleId":"655","severity":1,"message":"661","line":47,"column":8,"nodeType":"662","endLine":47,"endColumn":16,"suggestions":"663"},{"ruleId":"655","severity":1,"message":"656","line":49,"column":15,"nodeType":"657","endLine":67,"endColumn":6},{"ruleId":"655","severity":1,"message":"664","line":59,"column":35,"nodeType":"665","endLine":59,"endColumn":57},{"ruleId":"666","severity":1,"message":"667","line":193,"column":25,"nodeType":"668","endLine":193,"endColumn":102},{"ruleId":"669","severity":1,"message":"670","line":193,"column":33,"nodeType":"671","messageId":"672","endLine":193,"endColumn":54},{"ruleId":"655","severity":1,"message":"656","line":19,"column":15,"nodeType":"657","endLine":25,"endColumn":6},{"ruleId":"655","severity":1,"message":"673","line":25,"column":8,"nodeType":"662","endLine":25,"endColumn":10,"suggestions":"674"},{"ruleId":"655","severity":1,"message":"656","line":31,"column":15,"nodeType":"657","endLine":33,"endColumn":6},{"ruleId":"655","severity":1,"message":"675","line":33,"column":8,"nodeType":"662","endLine":33,"endColumn":51,"suggestions":"676"},{"ruleId":"655","severity":1,"message":"656","line":35,"column":15,"nodeType":"657","endLine":38,"endColumn":6},{"ruleId":"677","severity":1,"message":"678","line":111,"column":48,"nodeType":"679","messageId":"680","endLine":111,"endColumn":49},{"ruleId":"677","severity":1,"message":"678","line":112,"column":52,"nodeType":"679","messageId":"680","endLine":112,"endColumn":53},{"ruleId":"677","severity":1,"message":"678","line":114,"column":50,"nodeType":"679","messageId":"680","endLine":114,"endColumn":51},{"ruleId":"681","severity":1,"message":"682","line":132,"column":21,"nodeType":"668","endLine":132,"endColumn":87},{"ruleId":"655","severity":1,"message":"656","line":41,"column":15,"nodeType":"657","endLine":54,"endColumn":6},{"ruleId":"655","severity":1,"message":"683","line":54,"column":8,"nodeType":"662","endLine":54,"endColumn":16,"suggestions":"684"},{"ruleId":"655","severity":1,"message":"685","line":60,"column":8,"nodeType":"662","endLine":60,"endColumn":17,"suggestions":"686"},{"ruleId":"655","severity":1,"message":"656","line":62,"column":15,"nodeType":"657","endLine":78,"endColumn":6},{"ruleId":"655","severity":1,"message":"687","line":78,"column":8,"nodeType":"662","endLine":78,"endColumn":16,"suggestions":"688"},{"ruleId":"655","severity":1,"message":"656","line":22,"column":15,"nodeType":"657","endLine":25,"endColumn":6},{"ruleId":"655","severity":1,"message":"689","line":25,"column":8,"nodeType":"662","endLine":25,"endColumn":17,"suggestions":"690"},{"ruleId":"655","severity":1,"message":"656","line":57,"column":15,"nodeType":"657","endLine":78,"endColumn":6},{"ruleId":"655","severity":1,"message":"691","line":78,"column":8,"nodeType":"662","endLine":78,"endColumn":16,"suggestions":"692"},{"ruleId":"655","severity":1,"message":"656","line":20,"column":15,"nodeType":"657","endLine":28,"endColumn":6},{"ruleId":"655","severity":1,"message":"656","line":18,"column":15,"nodeType":"657","endLine":25,"endColumn":6},{"ruleId":"655","severity":1,"message":"693","line":20,"column":20,"nodeType":"665","endLine":20,"endColumn":51},{"ruleId":"655","severity":1,"message":"656","line":71,"column":15,"nodeType":"657","endLine":78,"endColumn":6},{"ruleId":"655","severity":1,"message":"694","line":78,"column":8,"nodeType":"662","endLine":78,"endColumn":10,"suggestions":"695"},{"ruleId":"655","severity":1,"message":"696","line":83,"column":8,"nodeType":"662","endLine":83,"endColumn":18,"suggestions":"697"},{"ruleId":"655","severity":1,"message":"656","line":86,"column":15,"nodeType":"657","endLine":106,"endColumn":6},{"ruleId":"698","severity":1,"message":"699","line":91,"column":55,"nodeType":"700","messageId":"701","endLine":91,"endColumn":57},{"ruleId":"655","severity":1,"message":"702","line":106,"column":8,"nodeType":"662","endLine":106,"endColumn":16,"suggestions":"703"},{"ruleId":"704","severity":1,"message":"705","line":111,"column":9,"nodeType":"706","messageId":"707","endLine":130,"endColumn":10},{"ruleId":"677","severity":1,"message":"678","line":112,"column":20,"nodeType":"679","messageId":"680","endLine":112,"endColumn":21},{"ruleId":"698","severity":1,"message":"699","line":223,"column":46,"nodeType":"700","messageId":"701","endLine":223,"endColumn":48},{"ruleId":"698","severity":1,"message":"699","line":223,"column":67,"nodeType":"700","messageId":"701","endLine":223,"endColumn":69},{"ruleId":"698","severity":1,"message":"699","line":237,"column":46,"nodeType":"700","messageId":"701","endLine":237,"endColumn":48},{"ruleId":"698","severity":1,"message":"699","line":237,"column":67,"nodeType":"700","messageId":"701","endLine":237,"endColumn":69},{"ruleId":"698","severity":1,"message":"699","line":263,"column":46,"nodeType":"700","messageId":"701","endLine":263,"endColumn":48},{"ruleId":"698","severity":1,"message":"699","line":263,"column":67,"nodeType":"700","messageId":"701","endLine":263,"endColumn":69},{"ruleId":"677","severity":1,"message":"678","line":330,"column":80,"nodeType":"679","messageId":"680","endLine":330,"endColumn":81},{"ruleId":"708","severity":1,"message":"709","line":28,"column":13,"nodeType":"710","messageId":"711","endLine":28,"endColumn":18},{"ruleId":"655","severity":1,"message":"656","line":24,"column":15,"nodeType":"657","endLine":41,"endColumn":6},{"ruleId":"655","severity":1,"message":"712","line":41,"column":8,"nodeType":"662","endLine":41,"endColumn":16,"suggestions":"713"},{"ruleId":"655","severity":1,"message":"656","line":24,"column":15,"nodeType":"657","endLine":59,"endColumn":6},{"ruleId":"655","severity":1,"message":"714","line":59,"column":8,"nodeType":"662","endLine":59,"endColumn":24,"suggestions":"715"},{"ruleId":"655","severity":1,"message":"656","line":18,"column":15,"nodeType":"657","endLine":28,"endColumn":6},{"ruleId":"655","severity":1,"message":"716","line":28,"column":8,"nodeType":"662","endLine":28,"endColumn":57,"suggestions":"717"},{"ruleId":"698","severity":1,"message":"699","line":63,"column":31,"nodeType":"700","messageId":"701","endLine":63,"endColumn":33},{"ruleId":"681","severity":1,"message":"682","line":106,"column":29,"nodeType":"668","endLine":106,"endColumn":95},{"ruleId":"651","replacedBy":"718"},{"ruleId":"653","replacedBy":"719"},{"ruleId":"708","severity":1,"message":"720","line":9,"column":12,"nodeType":"710","messageId":"711","endLine":9,"endColumn":21},{"ruleId":"655","severity":1,"message":"656","line":23,"column":15,"nodeType":"657","endLine":54,"endColumn":6},{"ruleId":"655","severity":1,"message":"721","line":31,"column":37,"nodeType":"722","endLine":31,"endColumn":72},{"ruleId":"655","severity":1,"message":"723","line":33,"column":36,"nodeType":"665","endLine":33,"endColumn":70},{"ruleId":"698","severity":1,"message":"724","line":14,"column":22,"nodeType":"700","messageId":"701","endLine":14,"endColumn":24},{"ruleId":"655","severity":1,"message":"725","line":24,"column":8,"nodeType":"662","endLine":24,"endColumn":18,"suggestions":"726"},{"ruleId":"698","severity":1,"message":"699","line":34,"column":18,"nodeType":"700","messageId":"701","endLine":34,"endColumn":20},{"ruleId":"698","severity":1,"message":"699","line":60,"column":22,"nodeType":"700","messageId":"701","endLine":60,"endColumn":24},{"ruleId":"698","severity":1,"message":"699","line":67,"column":34,"nodeType":"700","messageId":"701","endLine":67,"endColumn":36},{"ruleId":"698","severity":1,"message":"724","line":72,"column":42,"nodeType":"700","messageId":"701","endLine":72,"endColumn":44},{"ruleId":"651","replacedBy":"727"},{"ruleId":"653","replacedBy":"728"},{"ruleId":"655","severity":1,"message":"656","line":42,"column":13,"nodeType":"657","endLine":58,"endColumn":4},{"ruleId":"698","severity":1,"message":"699","line":51,"column":27,"nodeType":"700","messageId":"701","endLine":51,"endColumn":29},{"ruleId":"658","severity":1,"message":"659","line":219,"column":68,"nodeType":"660","endLine":219,"endColumn":83},{"ruleId":"655","severity":1,"message":"656","line":33,"column":15,"nodeType":"657","endLine":46,"endColumn":6},{"ruleId":"655","severity":1,"message":"683","line":46,"column":8,"nodeType":"662","endLine":46,"endColumn":16,"suggestions":"729"},{"ruleId":"698","severity":1,"message":"699","line":77,"column":28,"nodeType":"700","messageId":"701","endLine":77,"endColumn":30},{"ruleId":"666","severity":1,"message":"667","line":193,"column":25,"nodeType":"668","endLine":193,"endColumn":102},{"ruleId":"669","severity":1,"message":"670","line":193,"column":33,"nodeType":"671","messageId":"672","endLine":193,"endColumn":54},{"ruleId":"655","severity":1,"message":"656","line":23,"column":15,"nodeType":"657","endLine":33,"endColumn":6},{"ruleId":"655","severity":1,"message":"730","line":33,"column":8,"nodeType":"662","endLine":33,"endColumn":16,"suggestions":"731"},{"ruleId":"655","severity":1,"message":"656","line":27,"column":15,"nodeType":"657","endLine":30,"endColumn":6},{"ruleId":"655","severity":1,"message":"732","line":30,"column":8,"nodeType":"662","endLine":30,"endColumn":17,"suggestions":"733"},{"ruleId":"655","severity":1,"message":"656","line":32,"column":15,"nodeType":"657","endLine":57,"endColumn":6},{"ruleId":"655","severity":1,"message":"734","line":57,"column":8,"nodeType":"662","endLine":57,"endColumn":16,"suggestions":"735"},{"ruleId":"655","severity":1,"message":"656","line":34,"column":15,"nodeType":"657","endLine":49,"endColumn":6},{"ruleId":"698","severity":1,"message":"724","line":36,"column":24,"nodeType":"700","messageId":"701","endLine":36,"endColumn":26},{"ruleId":"698","severity":1,"message":"699","line":44,"column":33,"nodeType":"700","messageId":"701","endLine":44,"endColumn":35},{"ruleId":"698","severity":1,"message":"699","line":63,"column":29,"nodeType":"700","messageId":"701","endLine":63,"endColumn":31},{"ruleId":"698","severity":1,"message":"699","line":94,"column":29,"nodeType":"700","messageId":"701","endLine":94,"endColumn":31},{"ruleId":"655","severity":1,"message":"656","line":109,"column":15,"nodeType":"657","endLine":132,"endColumn":6},{"ruleId":"655","severity":1,"message":"736","line":132,"column":8,"nodeType":"662","endLine":132,"endColumn":16,"suggestions":"737"},{"ruleId":"655","severity":1,"message":"656","line":68,"column":15,"nodeType":"657","endLine":89,"endColumn":6},{"ruleId":"655","severity":1,"message":"694","line":89,"column":8,"nodeType":"662","endLine":89,"endColumn":10,"suggestions":"738"},{"ruleId":"655","severity":1,"message":"696","line":94,"column":8,"nodeType":"662","endLine":94,"endColumn":18,"suggestions":"739"},{"ruleId":"655","severity":1,"message":"656","line":97,"column":15,"nodeType":"657","endLine":111,"endColumn":6},{"ruleId":"698","severity":1,"message":"699","line":102,"column":55,"nodeType":"700","messageId":"701","endLine":102,"endColumn":57},{"ruleId":"655","severity":1,"message":"702","line":111,"column":8,"nodeType":"662","endLine":111,"endColumn":16,"suggestions":"740"},{"ruleId":"704","severity":1,"message":"705","line":116,"column":9,"nodeType":"706","messageId":"707","endLine":135,"endColumn":10},{"ruleId":"698","severity":1,"message":"699","line":270,"column":46,"nodeType":"700","messageId":"701","endLine":270,"endColumn":48},{"ruleId":"698","severity":1,"message":"699","line":270,"column":67,"nodeType":"700","messageId":"701","endLine":270,"endColumn":69},{"ruleId":"698","severity":1,"message":"699","line":284,"column":46,"nodeType":"700","messageId":"701","endLine":284,"endColumn":48},{"ruleId":"698","severity":1,"message":"699","line":284,"column":67,"nodeType":"700","messageId":"701","endLine":284,"endColumn":69},{"ruleId":"698","severity":1,"message":"699","line":310,"column":46,"nodeType":"700","messageId":"701","endLine":310,"endColumn":48},{"ruleId":"698","severity":1,"message":"699","line":310,"column":67,"nodeType":"700","messageId":"701","endLine":310,"endColumn":69},{"ruleId":"677","severity":1,"message":"678","line":377,"column":80,"nodeType":"679","messageId":"680","endLine":377,"endColumn":81},{"ruleId":"655","severity":1,"message":"656","line":25,"column":15,"nodeType":"657","endLine":71,"endColumn":6},{"ruleId":"655","severity":1,"message":"714","line":71,"column":8,"nodeType":"662","endLine":71,"endColumn":24,"suggestions":"741"},{"ruleId":"698","severity":1,"message":"724","line":14,"column":22,"nodeType":"700","messageId":"701","endLine":14,"endColumn":24},{"ruleId":"655","severity":1,"message":"725","line":24,"column":8,"nodeType":"662","endLine":24,"endColumn":18,"suggestions":"742"},{"ruleId":"698","severity":1,"message":"699","line":34,"column":18,"nodeType":"700","messageId":"701","endLine":34,"endColumn":20},{"ruleId":"698","severity":1,"message":"699","line":61,"column":22,"nodeType":"700","messageId":"701","endLine":61,"endColumn":24},{"ruleId":"698","severity":1,"message":"699","line":68,"column":34,"nodeType":"700","messageId":"701","endLine":68,"endColumn":36},{"ruleId":"698","severity":1,"message":"724","line":73,"column":42,"nodeType":"700","messageId":"701","endLine":73,"endColumn":44},{"ruleId":"708","severity":1,"message":"709","line":28,"column":13,"nodeType":"710","messageId":"711","endLine":28,"endColumn":18},{"ruleId":"655","severity":1,"message":"656","line":17,"column":15,"nodeType":"657","endLine":53,"endColumn":6},{"ruleId":"698","severity":1,"message":"724","line":94,"column":25,"nodeType":"700","messageId":"701","endLine":94,"endColumn":27},{"ruleId":"655","severity":1,"message":"656","line":21,"column":15,"nodeType":"657","endLine":64,"endColumn":6},{"ruleId":"698","severity":1,"message":"724","line":24,"column":24,"nodeType":"700","messageId":"701","endLine":24,"endColumn":26},{"ruleId":"698","severity":1,"message":"699","line":80,"column":29,"nodeType":"700","messageId":"701","endLine":80,"endColumn":31},{"ruleId":"698","severity":1,"message":"699","line":132,"column":45,"nodeType":"700","messageId":"701","endLine":132,"endColumn":47},{"ruleId":"698","severity":1,"message":"699","line":149,"column":36,"nodeType":"700","messageId":"701","endLine":149,"endColumn":38},{"ruleId":"655","severity":1,"message":"656","line":15,"column":15,"nodeType":"657","endLine":38,"endColumn":6},{"ruleId":"698","severity":1,"message":"724","line":17,"column":24,"nodeType":"700","messageId":"701","endLine":17,"endColumn":26},{"ruleId":"698","severity":1,"message":"699","line":54,"column":29,"nodeType":"700","messageId":"701","endLine":54,"endColumn":31},{"ruleId":"698","severity":1,"message":"699","line":87,"column":46,"nodeType":"700","messageId":"701","endLine":87,"endColumn":48},{"ruleId":"655","severity":1,"message":"656","line":31,"column":15,"nodeType":"657","endLine":63,"endColumn":6},{"ruleId":"655","severity":1,"message":"743","line":63,"column":8,"nodeType":"662","endLine":63,"endColumn":16,"suggestions":"744"},{"ruleId":"655","severity":1,"message":"656","line":65,"column":15,"nodeType":"657","endLine":89,"endColumn":6},{"ruleId":"655","severity":1,"message":"745","line":89,"column":8,"nodeType":"662","endLine":89,"endColumn":21,"suggestions":"746"},{"ruleId":"655","severity":1,"message":"747","line":28,"column":8,"nodeType":"662","endLine":28,"endColumn":77,"suggestions":"748"},{"ruleId":"655","severity":1,"message":"656","line":27,"column":15,"nodeType":"657","endLine":87,"endColumn":6},{"ruleId":"698","severity":1,"message":"724","line":59,"column":37,"nodeType":"700","messageId":"701","endLine":59,"endColumn":39},{"ruleId":"655","severity":1,"message":"749","line":87,"column":8,"nodeType":"662","endLine":87,"endColumn":63,"suggestions":"750"},{"ruleId":"677","severity":1,"message":"678","line":81,"column":48,"nodeType":"679","messageId":"680","endLine":81,"endColumn":49},{"ruleId":"677","severity":1,"message":"678","line":82,"column":52,"nodeType":"679","messageId":"680","endLine":82,"endColumn":53},{"ruleId":"677","severity":1,"message":"678","line":84,"column":50,"nodeType":"679","messageId":"680","endLine":84,"endColumn":51},{"ruleId":"681","severity":1,"message":"682","line":101,"column":21,"nodeType":"668","endLine":101,"endColumn":87},{"ruleId":"655","severity":1,"message":"656","line":33,"column":15,"nodeType":"657","endLine":69,"endColumn":6},{"ruleId":"655","severity":1,"message":"751","line":69,"column":8,"nodeType":"662","endLine":69,"endColumn":10,"suggestions":"752"},{"ruleId":"698","severity":1,"message":"699","line":85,"column":31,"nodeType":"700","messageId":"701","endLine":85,"endColumn":33},{"ruleId":"698","severity":1,"message":"724","line":131,"column":40,"nodeType":"700","messageId":"701","endLine":131,"endColumn":42},{"ruleId":"681","severity":1,"message":"682","line":133,"column":29,"nodeType":"668","endLine":133,"endColumn":95},{"ruleId":"753","severity":2,"message":"754","line":5,"column":16,"nodeType":"710","messageId":"755","endLine":5,"endColumn":21},{"ruleId":"753","severity":2,"message":"754","line":6,"column":22,"nodeType":"710","messageId":"755","endLine":6,"endColumn":27},{"ruleId":"756","severity":1,"message":"757","line":9,"column":44,"nodeType":"657","messageId":"758","endLine":9,"endColumn":46},{"ruleId":"651","replacedBy":"759"},{"ruleId":"653","replacedBy":"760"},{"ruleId":"655","severity":1,"message":"656","line":42,"column":13,"nodeType":"657","endLine":58,"endColumn":4},{"ruleId":"698","severity":1,"message":"699","line":51,"column":27,"nodeType":"700","messageId":"701","endLine":51,"endColumn":29},{"ruleId":"658","severity":1,"message":"659","line":219,"column":68,"nodeType":"660","endLine":219,"endColumn":83},{"ruleId":"655","severity":1,"message":"656","line":68,"column":15,"nodeType":"657","endLine":89,"endColumn":6},{"ruleId":"655","severity":1,"message":"694","line":89,"column":8,"nodeType":"662","endLine":89,"endColumn":10,"suggestions":"761"},{"ruleId":"655","severity":1,"message":"696","line":94,"column":8,"nodeType":"662","endLine":94,"endColumn":18,"suggestions":"762"},{"ruleId":"655","severity":1,"message":"656","line":97,"column":15,"nodeType":"657","endLine":111,"endColumn":6},{"ruleId":"698","severity":1,"message":"699","line":102,"column":55,"nodeType":"700","messageId":"701","endLine":102,"endColumn":57},{"ruleId":"655","severity":1,"message":"702","line":111,"column":8,"nodeType":"662","endLine":111,"endColumn":16,"suggestions":"763"},{"ruleId":"704","severity":1,"message":"705","line":116,"column":9,"nodeType":"706","messageId":"707","endLine":135,"endColumn":10},{"ruleId":"698","severity":1,"message":"699","line":270,"column":46,"nodeType":"700","messageId":"701","endLine":270,"endColumn":48},{"ruleId":"698","severity":1,"message":"699","line":270,"column":67,"nodeType":"700","messageId":"701","endLine":270,"endColumn":69},{"ruleId":"698","severity":1,"message":"699","line":284,"column":46,"nodeType":"700","messageId":"701","endLine":284,"endColumn":48},{"ruleId":"698","severity":1,"message":"699","line":284,"column":67,"nodeType":"700","messageId":"701","endLine":284,"endColumn":69},{"ruleId":"698","severity":1,"message":"699","line":310,"column":46,"nodeType":"700","messageId":"701","endLine":310,"endColumn":48},{"ruleId":"698","severity":1,"message":"699","line":310,"column":67,"nodeType":"700","messageId":"701","endLine":310,"endColumn":69},{"ruleId":"677","severity":1,"message":"678","line":377,"column":80,"nodeType":"679","messageId":"680","endLine":377,"endColumn":81},{"ruleId":"655","severity":1,"message":"656","line":33,"column":15,"nodeType":"657","endLine":46,"endColumn":6},{"ruleId":"655","severity":1,"message":"683","line":46,"column":8,"nodeType":"662","endLine":46,"endColumn":16,"suggestions":"764"},{"ruleId":"698","severity":1,"message":"699","line":77,"column":28,"nodeType":"700","messageId":"701","endLine":77,"endColumn":30},{"ruleId":"666","severity":1,"message":"667","line":193,"column":25,"nodeType":"668","endLine":193,"endColumn":102},{"ruleId":"669","severity":1,"message":"670","line":193,"column":33,"nodeType":"671","messageId":"672","endLine":193,"endColumn":54},{"ruleId":"655","severity":1,"message":"656","line":27,"column":15,"nodeType":"657","endLine":30,"endColumn":6},{"ruleId":"655","severity":1,"message":"732","line":30,"column":8,"nodeType":"662","endLine":30,"endColumn":17,"suggestions":"765"},{"ruleId":"655","severity":1,"message":"656","line":32,"column":15,"nodeType":"657","endLine":57,"endColumn":6},{"ruleId":"655","severity":1,"message":"734","line":57,"column":8,"nodeType":"662","endLine":57,"endColumn":16,"suggestions":"766"},{"ruleId":"655","severity":1,"message":"656","line":34,"column":15,"nodeType":"657","endLine":49,"endColumn":6},{"ruleId":"698","severity":1,"message":"724","line":36,"column":24,"nodeType":"700","messageId":"701","endLine":36,"endColumn":26},{"ruleId":"698","severity":1,"message":"699","line":44,"column":33,"nodeType":"700","messageId":"701","endLine":44,"endColumn":35},{"ruleId":"698","severity":1,"message":"699","line":63,"column":29,"nodeType":"700","messageId":"701","endLine":63,"endColumn":31},{"ruleId":"698","severity":1,"message":"699","line":94,"column":29,"nodeType":"700","messageId":"701","endLine":94,"endColumn":31},{"ruleId":"655","severity":1,"message":"656","line":109,"column":15,"nodeType":"657","endLine":132,"endColumn":6},{"ruleId":"655","severity":1,"message":"736","line":132,"column":8,"nodeType":"662","endLine":132,"endColumn":16,"suggestions":"767"},{"ruleId":"655","severity":1,"message":"656","line":25,"column":15,"nodeType":"657","endLine":71,"endColumn":6},{"ruleId":"655","severity":1,"message":"714","line":71,"column":8,"nodeType":"662","endLine":71,"endColumn":24,"suggestions":"768"},{"ruleId":"655","severity":1,"message":"656","line":23,"column":15,"nodeType":"657","endLine":33,"endColumn":6},{"ruleId":"655","severity":1,"message":"730","line":33,"column":8,"nodeType":"662","endLine":33,"endColumn":16,"suggestions":"769"},{"ruleId":"698","severity":1,"message":"724","line":14,"column":22,"nodeType":"700","messageId":"701","endLine":14,"endColumn":24},{"ruleId":"655","severity":1,"message":"725","line":24,"column":8,"nodeType":"662","endLine":24,"endColumn":18,"suggestions":"770"},{"ruleId":"698","severity":1,"message":"699","line":34,"column":18,"nodeType":"700","messageId":"701","endLine":34,"endColumn":20},{"ruleId":"698","severity":1,"message":"699","line":61,"column":22,"nodeType":"700","messageId":"701","endLine":61,"endColumn":24},{"ruleId":"698","severity":1,"message":"699","line":68,"column":34,"nodeType":"700","messageId":"701","endLine":68,"endColumn":36},{"ruleId":"698","severity":1,"message":"724","line":73,"column":42,"nodeType":"700","messageId":"701","endLine":73,"endColumn":44},{"ruleId":"655","severity":1,"message":"656","line":15,"column":15,"nodeType":"657","endLine":38,"endColumn":6},{"ruleId":"698","severity":1,"message":"724","line":17,"column":24,"nodeType":"700","messageId":"701","endLine":17,"endColumn":26},{"ruleId":"698","severity":1,"message":"699","line":54,"column":29,"nodeType":"700","messageId":"701","endLine":54,"endColumn":31},{"ruleId":"698","severity":1,"message":"699","line":87,"column":46,"nodeType":"700","messageId":"701","endLine":87,"endColumn":48},{"ruleId":"655","severity":1,"message":"656","line":21,"column":15,"nodeType":"657","endLine":64,"endColumn":6},{"ruleId":"698","severity":1,"message":"724","line":24,"column":24,"nodeType":"700","messageId":"701","endLine":24,"endColumn":26},{"ruleId":"698","severity":1,"message":"699","line":80,"column":29,"nodeType":"700","messageId":"701","endLine":80,"endColumn":31},{"ruleId":"698","severity":1,"message":"699","line":132,"column":45,"nodeType":"700","messageId":"701","endLine":132,"endColumn":47},{"ruleId":"698","severity":1,"message":"699","line":149,"column":36,"nodeType":"700","messageId":"701","endLine":149,"endColumn":38},{"ruleId":"655","severity":1,"message":"747","line":28,"column":8,"nodeType":"662","endLine":28,"endColumn":77,"suggestions":"771"},{"ruleId":"655","severity":1,"message":"656","line":17,"column":15,"nodeType":"657","endLine":53,"endColumn":6},{"ruleId":"698","severity":1,"message":"724","line":94,"column":25,"nodeType":"700","messageId":"701","endLine":94,"endColumn":27},{"ruleId":"708","severity":1,"message":"709","line":28,"column":13,"nodeType":"710","messageId":"711","endLine":28,"endColumn":18},{"ruleId":"655","severity":1,"message":"656","line":31,"column":15,"nodeType":"657","endLine":63,"endColumn":6},{"ruleId":"655","severity":1,"message":"743","line":63,"column":8,"nodeType":"662","endLine":63,"endColumn":16,"suggestions":"772"},{"ruleId":"655","severity":1,"message":"656","line":65,"column":15,"nodeType":"657","endLine":89,"endColumn":6},{"ruleId":"655","severity":1,"message":"745","line":89,"column":8,"nodeType":"662","endLine":89,"endColumn":21,"suggestions":"773"},{"ruleId":"655","severity":1,"message":"656","line":27,"column":15,"nodeType":"657","endLine":87,"endColumn":6},{"ruleId":"698","severity":1,"message":"724","line":59,"column":37,"nodeType":"700","messageId":"701","endLine":59,"endColumn":39},{"ruleId":"655","severity":1,"message":"749","line":87,"column":8,"nodeType":"662","endLine":87,"endColumn":63,"suggestions":"774"},{"ruleId":"677","severity":1,"message":"678","line":81,"column":48,"nodeType":"679","messageId":"680","endLine":81,"endColumn":49},{"ruleId":"677","severity":1,"message":"678","line":82,"column":52,"nodeType":"679","messageId":"680","endLine":82,"endColumn":53},{"ruleId":"677","severity":1,"message":"678","line":84,"column":50,"nodeType":"679","messageId":"680","endLine":84,"endColumn":51},{"ruleId":"681","severity":1,"message":"682","line":101,"column":21,"nodeType":"668","endLine":101,"endColumn":87},{"ruleId":"655","severity":1,"message":"656","line":33,"column":15,"nodeType":"657","endLine":69,"endColumn":6},{"ruleId":"655","severity":1,"message":"751","line":69,"column":8,"nodeType":"662","endLine":69,"endColumn":10,"suggestions":"775"},{"ruleId":"698","severity":1,"message":"699","line":85,"column":31,"nodeType":"700","messageId":"701","endLine":85,"endColumn":33},{"ruleId":"698","severity":1,"message":"724","line":131,"column":40,"nodeType":"700","messageId":"701","endLine":131,"endColumn":42},{"ruleId":"681","severity":1,"message":"682","line":133,"column":29,"nodeType":"668","endLine":133,"endColumn":95},"no-native-reassign",["776"],"no-negated-in-lhs",["777"],"react-hooks/exhaustive-deps","Effect callbacks are synchronous to prevent race conditions. Put the async function inside:\n\nuseEffect(() => {\n  async function fetchData() {\n    // You can await here\n    const response = await MyAPI.getData(someId);\n    // ...\n  }\n  fetchData();\n}, [someId]); // Or [] if effect doesn't need props or state\n\nLearn more about data fetching with Hooks: https://reactjs.org/link/hooks-data-fetching","ArrowFunctionExpression","react/jsx-no-target-blank","Using target=\"_blank\" without rel=\"noreferrer\" is a security risk: see https://html.spec.whatwg.org/multipage/links.html#link-type-noopener","JSXAttribute","React Hook useEffect has missing dependencies: 'changeUser', 'history', 'isValidUser', 'myUser', 'numSuccess', and 'setUrl'. Either include them or remove the dependency array.","ArrayExpression",["778"],"Assignments to the 'newPassword' variable from inside React Hook useEffect will be lost after each render. To preserve the value over time, store it in a useRef Hook and keep the mutable value in the '.current' property. Otherwise, you can move this variable directly inside useEffect.","CallExpression","jsx-a11y/anchor-is-valid","The href attribute requires a valid value to be accessible. Provide a valid, navigable address as the href value. If you cannot provide a valid href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","JSXOpeningElement","no-script-url","Script URL is a form of eval.","Literal","unexpectedScriptURL","React Hook useEffect has missing dependencies: 'findOrder', 'productDetails.id', and 'type'. Either include them or remove the dependency array.",["779"],"React Hook useEffect has a missing dependency: 'findOrder'. Either include it or remove the dependency array.",["780"],"no-sequences","Unexpected use of comma operator.","SequenceExpression","unexpectedCommaExpression","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","React Hook useEffect has missing dependencies: 'addUser', 'mode', 'numSuccess', and 'updateUser'. Either include them or remove the dependency array.",["781"],"React Hook useEffect has missing dependencies: 'checkHaveCreditSaved' and 'filterOrders'. Either include them or remove the dependency array.",["782"],"React Hook useEffect has missing dependencies: 'checkHaveCreditSaved', 'checked', 'creditDetail.idCredit', 'creditDetailTemp', 'numSuccess', 'updateOrders', 'updateProducts', and 'userNow.id'. Either include them or remove the dependency array.",["783"],"React Hook useEffect has a missing dependency: 'filterOrders'. Either include it or remove the dependency array.",["784"],"React Hook useEffect has missing dependencies: 'checked', 'history', 'numSuccess', 'setUrl', 'shippingDetails.address', 'shippingDetails.buildingNumber', 'shippingDetails.city', 'shippingDetails.homeNumber', 'updateOrders', and 'userNow'. Either include them or remove the dependency array.",["785"],"Assignments to the 'myOrders' variable from inside React Hook useEffect will be lost after each render. To preserve the value over time, store it in a useRef Hook and keep the mutable value in the '.current' property. Otherwise, you can move this variable directly inside useEffect.","React Hook useEffect has a missing dependency: 'idProduct'. Either include it or remove the dependency array.",["786"],"React Hook useEffect has a missing dependency: 'getTypeOption'. Either include it or remove the dependency array.",["787"],"eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","React Hook useEffect has missing dependencies: 'addProduct', 'idProduct', 'numSuccess', and 'updateProduct'. Either include them or remove the dependency array.",["788"],"default-case","Expected a default case.","SwitchStatement","missingDefaultCase","no-unused-vars","'total' is assigned a value but never used.","Identifier","unusedVar","React Hook useEffect has missing dependencies: 'apdudeAccount', 'mode', and 'numSuccess'. Either include them or remove the dependency array.",["789"],"React Hook useEffect has a missing dependency: 'categoryShow'. Either include it or remove the dependency array.",["790"],"React Hook useEffect has a missing dependency: 'filterProduct'. Either include it or remove the dependency array.",["791"],["776"],["777"],"'allOrders' is assigned a value but never used.","Assignments to the 'allOrdersTemp' variable from inside React Hook useEffect will be lost after each render. To preserve the value over time, store it in a useRef Hook and keep the mutable value in the '.current' property. Otherwise, you can move this variable directly inside useEffect.","AwaitExpression","Assignments to the 'myOrdersTemp' variable from inside React Hook useEffect will be lost after each render. To preserve the value over time, store it in a useRef Hook and keep the mutable value in the '.current' property. Otherwise, you can move this variable directly inside useEffect.","Expected '!==' and instead saw '!='.","React Hook useEffect has missing dependencies: 'data', 'type', 'validationFunction', and 'wasSuccess'. Either include them or remove the dependency array.",["792"],["776"],["777"],["793"],"React Hook useEffect has missing dependencies: 'apdudeAccount' and 'numSuccess'. Either include them or remove the dependency array.",["794"],"React Hook useEffect has missing dependencies: 'checkHaveCreditSaved' and 'sumOrders'. Either include them or remove the dependency array.",["795"],"React Hook useEffect has missing dependencies: 'checked', 'creditDetail.idCredit', 'creditDetailTemp', 'makePay', and 'numSuccess'. Either include them or remove the dependency array.",["796"],"React Hook useEffect has missing dependencies: 'checked', 'history', 'numSuccess', 'setUrl', 'shippingDetails.address', 'shippingDetails.buildingNumber', 'shippingDetails.city', 'shippingDetails.homeNumber', 'shippingDetailsTemp', 'updateOrders', and 'updateUser'. Either include them or remove the dependency array.",["797"],["798"],["799"],["800"],["801"],["802"],"React Hook useEffect has missing dependencies: 'changeUser', 'dataIdPassword', 'history', 'numSuccess', and 'setUrl'. Either include them or remove the dependency array.",["803"],"React Hook useEffect has missing dependencies: 'idRecover' and 'successModal'. Either include them or remove the dependency array.",["804"],"React Hook useEffect has a missing dependency: 'props'. Either include it or remove the dependency array. However, 'props' will change when *any* prop changes, so the preferred fix is to destructure the 'props' object outside of the useEffect call and refer to those specific props inside useEffect.",["805"],"React Hook useEffect has a missing dependency: 'prevCategory'. Either include it or remove the dependency array.",["806"],"React Hook useEffect has missing dependencies: 'productDetails._id' and 'type'. Either include them or remove the dependency array.",["807"],"no-undef","'props' is not defined.","undef","array-callback-return","Array.prototype.map() expects a return value from arrow function.","expectedInside",["776"],["777"],["808"],["809"],["810"],["811"],["812"],["813"],["814"],["815"],["816"],["817"],["818"],["819"],["820"],["821"],["822"],"no-global-assign","no-unsafe-negation",{"desc":"823","fix":"824"},{"desc":"825","fix":"826"},{"desc":"827","fix":"828"},{"desc":"829","fix":"830"},{"desc":"831","fix":"832"},{"desc":"833","fix":"834"},{"desc":"835","fix":"836"},{"desc":"837","fix":"838"},{"desc":"839","fix":"840"},{"desc":"841","fix":"842"},{"desc":"843","fix":"844"},{"desc":"845","fix":"846"},{"desc":"847","fix":"848"},{"desc":"849","fix":"850"},{"desc":"851","fix":"852"},{"desc":"829","fix":"853"},{"desc":"854","fix":"855"},{"desc":"856","fix":"857"},{"desc":"858","fix":"859"},{"desc":"860","fix":"861"},{"desc":"839","fix":"862"},{"desc":"841","fix":"863"},{"desc":"843","fix":"864"},{"desc":"847","fix":"865"},{"desc":"851","fix":"866"},{"desc":"867","fix":"868"},{"desc":"869","fix":"870"},{"desc":"871","fix":"872"},{"desc":"873","fix":"874"},{"desc":"875","fix":"876"},{"desc":"839","fix":"877"},{"desc":"841","fix":"878"},{"desc":"843","fix":"879"},{"desc":"829","fix":"880"},{"desc":"856","fix":"881"},{"desc":"858","fix":"882"},{"desc":"860","fix":"883"},{"desc":"847","fix":"884"},{"desc":"854","fix":"885"},{"desc":"851","fix":"886"},{"desc":"871","fix":"887"},{"desc":"867","fix":"888"},{"desc":"869","fix":"889"},{"desc":"873","fix":"890"},{"desc":"875","fix":"891"},"Update the dependencies array to be: [changeUser, history, isValidUser, myUser, numSuccess, setUrl, sumbit]",{"range":"892","text":"893"},"Update the dependencies array to be: [findOrder, productDetails.id, type]",{"range":"894","text":"895"},"Update the dependencies array to be: [type, productDetails, sellerDetails, size, findOrder]",{"range":"896","text":"897"},"Update the dependencies array to be: [addUser, mode, numSuccess, sumbit, updateUser]",{"range":"898","text":"899"},"Update the dependencies array to be: [checkHaveCreditSaved, filterOrders, userNow]",{"range":"900","text":"901"},"Update the dependencies array to be: [checkHaveCreditSaved, checked, creditDetail.idCredit, creditDetailTemp, numSuccess, sumbit, updateOrders, updateProducts, userNow.id]",{"range":"902","text":"903"},"Update the dependencies array to be: [filterOrders, userNow]",{"range":"904","text":"905"},"Update the dependencies array to be: [checked, history, numSuccess, setUrl, shippingDetails.address, shippingDetails.buildingNumber, shippingDetails.city, shippingDetails.homeNumber, sumbit, updateOrders, userNow]",{"range":"906","text":"907"},"Update the dependencies array to be: [idProduct]",{"range":"908","text":"909"},"Update the dependencies array to be: [category, getTypeOption]",{"range":"910","text":"911"},"Update the dependencies array to be: [addProduct, idProduct, numSuccess, sumbit, updateProduct]",{"range":"912","text":"913"},"Update the dependencies array to be: [apdudeAccount, mode, numSuccess, sumbit]",{"range":"914","text":"915"},"Update the dependencies array to be: [categoryShow, props.category]",{"range":"916","text":"917"},"Update the dependencies array to be: [category, cities, types, colors, price, quality, filterProduct]",{"range":"918","text":"919"},"Update the dependencies array to be: [data, sumbited, type, validationFunction, wasSuccess]",{"range":"920","text":"921"},{"range":"922","text":"899"},"Update the dependencies array to be: [apdudeAccount, numSuccess, sumbit]",{"range":"923","text":"924"},"Update the dependencies array to be: [checkHaveCreditSaved, sumOrders, userNow]",{"range":"925","text":"926"},"Update the dependencies array to be: [checked, creditDetail.idCredit, creditDetailTemp, makePay, numSuccess, sumbit]",{"range":"927","text":"928"},"Update the dependencies array to be: [checked, history, numSuccess, setUrl, shippingDetails.address, shippingDetails.buildingNumber, shippingDetails.city, shippingDetails.homeNumber, shippingDetailsTemp, sumbit, updateOrders, updateUser]",{"range":"929","text":"930"},{"range":"931","text":"909"},{"range":"932","text":"911"},{"range":"933","text":"913"},{"range":"934","text":"917"},{"range":"935","text":"921"},"Update the dependencies array to be: [changeUser, dataIdPassword, history, numSuccess, setUrl, sumbit]",{"range":"936","text":"937"},"Update the dependencies array to be: [idRecover, successModal, sumbitModal]",{"range":"938","text":"939"},"Update the dependencies array to be: [props.colors, props.types, props.cities, props.price, props.quality, props]",{"range":"940","text":"941"},"Update the dependencies array to be: [category, cities, types, colors, price, quality, skip, prevCategory]",{"range":"942","text":"943"},"Update the dependencies array to be: [productDetails._id, type]",{"range":"944","text":"945"},{"range":"946","text":"909"},{"range":"947","text":"911"},{"range":"948","text":"913"},{"range":"949","text":"899"},{"range":"950","text":"926"},{"range":"951","text":"928"},{"range":"952","text":"930"},{"range":"953","text":"917"},{"range":"954","text":"924"},{"range":"955","text":"921"},{"range":"956","text":"941"},{"range":"957","text":"937"},{"range":"958","text":"939"},{"range":"959","text":"943"},{"range":"960","text":"945"},[1685,1693],"[changeUser, history, isValidUser, myUser, numSuccess, setUrl, sumbit]",[888,890],"[findOrder, productDetails.id, type]",[1086,1129],"[type, productDetails, sellerDetails, size, findOrder]",[1691,1699],"[addUser, mode, numSuccess, sumbit, updateUser]",[2238,2247],"[checkHaveCreditSaved, filterOrders, userNow]",[2863,2871],"[checkHaveCreditSaved, checked, creditDetail.idCredit, creditDetailTemp, numSuccess, sumbit, updateOrders, updateProducts, userNow.id]",[950,959],"[filterOrders, userNow]",[2835,2843],"[checked, history, numSuccess, setUrl, shippingDetails.address, shippingDetails.buildingNumber, shippingDetails.city, shippingDetails.homeNumber, sumbit, updateOrders, userNow]",[2645,2647],"[idProduct]",[2782,2792],"[category, getTypeOption]",[3463,3471],"[addProduct, idProduct, numSuccess, sumbit, updateProduct]",[1527,1535],"[apdudeAccount, mode, numSuccess, sumbit]",[2335,2351],"[categoryShow, props.category]",[982,1031],"[category, cities, types, colors, price, quality, filterProduct]",[905,915],"[data, sumbited, type, validationFunction, wasSuccess]",[1443,1451],[1146,1154],"[apdudeAccount, numSuccess, sumbit]",[1193,1202],"[checkHaveCreditSaved, sumOrders, userNow]",[2245,2253],"[checked, creditDetail.idCredit, creditDetailTemp, makePay, numSuccess, sumbit]",[4723,4731],"[checked, history, numSuccess, setUrl, shippingDetails.address, shippingDetails.buildingNumber, shippingDetails.city, shippingDetails.homeNumber, shippingDetailsTemp, sumbit, updateOrders, updateUser]",[3034,3036],[3171,3181],[3666,3674],[2863,2879],[905,915],[2312,2320],"[changeUser, dataIdPassword, history, numSuccess, setUrl, sumbit]",[3097,3110],"[idRecover, successModal, sumbitModal]",[1147,1216],"[props.colors, props.types, props.cities, props.price, props.quality, props]",[2755,2810],"[category, cities, types, colors, price, quality, skip, prevCategory]",[2464,2466],"[productDetails._id, type]",[3034,3036],[3171,3181],[3666,3674],[1443,1451],[1193,1202],[2245,2253],[4723,4731],[2863,2879],[1146,1154],[905,915],[1147,1216],[2312,2320],[3097,3110],[2755,2810],[2464,2466]]